{"version":3,"sources":["../node_modules/@adonisjs/websocket-client/dist/Ws.browser.js"],"names":["global","process","factory","_regeneratorRuntime","__webpack_require__","_typeof","Symbol","iterator","obj","constructor","prototype","asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","_extends","assign","source","hasOwnProperty","call","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","toConsumableArray","arr","Array","isArray","arr2","from","anyMap","WeakMap","eventsMap","resolvedPromise","assertEventName","eventName","assertListener","listener","getListeners","events","get","has","set","Set","Emittery","Map","add","off","bind","delete","_this","on","data","_ref","mark","_callee3","eventData","listeners","anyListeners","staticListeners","staticAnyListeners","_this2","wrap","_context3","prev","next","concat","abrupt","all","map","_ref2","_callee","_context","stop","_x3","_ref3","_callee2","_context2","_x4","_x","_x2","_ref4","_callee4","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_listener","_context4","undefined","t0","return","finish","t1","_x5","_x6","offAny","clear","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","values","size","count","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Typed","_Emittery","_class","getPrototypeOf","emittery","strictUriEncode","str","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","encode","options","strict","stringify","arrayFormat","sort","formatter","index","join","encoderForArrayFormat","keys","result","slice","value2","push","filter","createCommonjsModule","module","exports","window","wsp_browser","t","e","OPEN","JOIN","LEAVE","JOIN_ACK","JOIN_ERROR","LEAVE_ACK","LEAVE_ERROR","EVENT","PING","PONG","o","forEach","Error","d","n","toLowerCase","hasTopic","topic","isValidJoinPacket","isValidLeavePacket","isValidEventPacket","joinPacket","leavePacket","joinAckPacket","joinErrorPacket","message","leaveAckPacket","leaveErrorPacket","eventPacket","event","pingPacket","pongPacket","codes","s","m","h","y","ms","val","type","String","match","exec","parseFloat","parse$1","isNaN","long","plural","fmtLong","Math","round","fmtShort","JSON","name","floor","ceil","debug","prevTime","createDebug","namespace","enabled","curr","Date","ms$$1","diff","args","coerce","unshift","format","formatters","splice","formatArgs","log","console","useColors","color","hash","colors","abs","selectColor","init","stack","disable","enable","namespaces","save","names","skips","split","len","RegExp","substr","test","humanize","browser","load","r","storage","NODE_ENV","PUBLIC_URL","DEBUG","Function","c","lastC","removeItem","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","parseInt","$1","chrome","local","localStorage","localstorage","j","v","Debug","_Debug","Socket","connection","emitter","_state","_emitBuffer","state","emit","buf","packet","serverClose","_emitter","_emitter2","once","_emitter3","sendEvent","clearListeners","catch","sendPacket","leaveAck","states","indexOf","JsonEncoder","payload","callback","encoded","decode","decoded","parse","wsProtocol","location","protocol","Connection","_Emitter","url","host","path","reconnection","reconnectionAttempts","reconnectionDelay","query","encoder","_connectionState","_reconnectionAttempts","_packetsQueue","_processingQueue","_pingTimer","_extendedQuery","_url","subscriptions","removeSubscription","clearInterval","ws","sub","cb","socket","getSubscription","_this3","shift","write","_processQueue","_subscriptionsIterator","subscription","serverError","_this4","setTimeout","connect","_this5","_cleanup","terminate","shouldReconnect","_reconnect","_this6","decodeError","_handleMessage","isOpenPacket","_handleOpen","isJoinAckPacket","_handleJoinAck","isJoinErrorPacket","_handleJoinError","isLeaveAckPacket","_handleLeaveAck","isLeaveErrorPacket","_handleLeaveError","isLeavePacket","_handleServerLeave","isEventPacket","_handleEvent","isPongPacket","_this7","setInterval","clientInterval","_sendSubscriptionPacket","_ensureSubscription","joinAck","joinError","leaveError","serverEvent","_this8","WebSocket","onclose","_onClose","onerror","_onError","onopen","_onOpen","onmessage","_onMessage","readyState","send","token","username","password","basic","btoa","close"],"mappings":"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","file":"static/js/29.52ef9531.chunk.js","sourcesContent":["var _regeneratorRuntime = require(\"D:\\\\Project\\\\VScode\\\\Web\\\\StarfallCMS\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global.adonis = global.adonis || {}, global.adonis.Ws = factory());\n})(this, function () {\n  'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var asyncToGenerator = function asyncToGenerator(fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step(\"next\", value);\n            }, function (err) {\n              step(\"throw\", err);\n            });\n          }\n        }\n\n        return step(\"next\");\n      });\n    };\n  };\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var inherits = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var toConsumableArray = function toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  var anyMap = new WeakMap();\n  var eventsMap = new WeakMap();\n  var resolvedPromise = Promise.resolve();\n\n  function assertEventName(eventName) {\n    if (typeof eventName !== 'string') {\n      throw new TypeError('eventName must be a string');\n    }\n  }\n\n  function assertListener(listener) {\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function');\n    }\n  }\n\n  function getListeners(instance, eventName) {\n    var events = eventsMap.get(instance);\n\n    if (!events.has(eventName)) {\n      events.set(eventName, new Set());\n    }\n\n    return events.get(eventName);\n  }\n\n  var Emittery = function () {\n    function Emittery() {\n      classCallCheck(this, Emittery);\n      anyMap.set(this, new Set());\n      eventsMap.set(this, new Map());\n    }\n\n    createClass(Emittery, [{\n      key: 'on',\n      value: function on(eventName, listener) {\n        assertEventName(eventName);\n        assertListener(listener);\n        getListeners(this, eventName).add(listener);\n        return this.off.bind(this, eventName, listener);\n      }\n    }, {\n      key: 'off',\n      value: function off(eventName, listener) {\n        assertEventName(eventName);\n        assertListener(listener);\n        getListeners(this, eventName).delete(listener);\n      }\n    }, {\n      key: 'once',\n      value: function once(eventName) {\n        var _this = this;\n\n        return new Promise(function (resolve) {\n          assertEventName(eventName);\n\n          var off = _this.on(eventName, function (data) {\n            off();\n            resolve(data);\n          });\n        });\n      }\n    }, {\n      key: 'emit',\n      value: function () {\n        var _ref = asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(eventName, eventData) {\n          var _this2 = this;\n\n          var listeners, anyListeners, staticListeners, staticAnyListeners;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  assertEventName(eventName);\n                  listeners = getListeners(this, eventName);\n                  anyListeners = anyMap.get(this);\n                  staticListeners = [].concat(toConsumableArray(listeners));\n                  staticAnyListeners = [].concat(toConsumableArray(anyListeners));\n                  _context3.next = 7;\n                  return resolvedPromise;\n\n                case 7:\n                  return _context3.abrupt('return', Promise.all([].concat(toConsumableArray(staticListeners.map(function () {\n                    var _ref2 = asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee(listener) {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              if (!listeners.has(listener)) {\n                                _context.next = 2;\n                                break;\n                              }\n\n                              return _context.abrupt('return', listener(eventData));\n\n                            case 2:\n                            case 'end':\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, _this2);\n                    }));\n\n                    return function (_x3) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }())), toConsumableArray(staticAnyListeners.map(function () {\n                    var _ref3 = asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee2(listener) {\n                      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              if (!anyListeners.has(listener)) {\n                                _context2.next = 2;\n                                break;\n                              }\n\n                              return _context2.abrupt('return', listener(eventName, eventData));\n\n                            case 2:\n                            case 'end':\n                              return _context2.stop();\n                          }\n                        }\n                      }, _callee2, _this2);\n                    }));\n\n                    return function (_x4) {\n                      return _ref3.apply(this, arguments);\n                    };\n                  }())))));\n\n                case 8:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function emit(_x, _x2) {\n          return _ref.apply(this, arguments);\n        }\n\n        return emit;\n      }()\n    }, {\n      key: 'emitSerial',\n      value: function () {\n        var _ref4 = asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4(eventName, eventData) {\n          var listeners, anyListeners, staticListeners, staticAnyListeners, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, listener, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _listener;\n\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  assertEventName(eventName);\n                  listeners = getListeners(this, eventName);\n                  anyListeners = anyMap.get(this);\n                  staticListeners = [].concat(toConsumableArray(listeners));\n                  staticAnyListeners = [].concat(toConsumableArray(anyListeners));\n                  _context4.next = 7;\n                  return resolvedPromise;\n\n                case 7:\n                  /* eslint-disable no-await-in-loop */\n                  _iteratorNormalCompletion = true;\n                  _didIteratorError = false;\n                  _iteratorError = undefined;\n                  _context4.prev = 10;\n                  _iterator = staticListeners[Symbol.iterator]();\n\n                case 12:\n                  if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                    _context4.next = 20;\n                    break;\n                  }\n\n                  listener = _step.value;\n\n                  if (!listeners.has(listener)) {\n                    _context4.next = 17;\n                    break;\n                  }\n\n                  _context4.next = 17;\n                  return listener(eventData);\n\n                case 17:\n                  _iteratorNormalCompletion = true;\n                  _context4.next = 12;\n                  break;\n\n                case 20:\n                  _context4.next = 26;\n                  break;\n\n                case 22:\n                  _context4.prev = 22;\n                  _context4.t0 = _context4['catch'](10);\n                  _didIteratorError = true;\n                  _iteratorError = _context4.t0;\n\n                case 26:\n                  _context4.prev = 26;\n                  _context4.prev = 27;\n\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n\n                case 29:\n                  _context4.prev = 29;\n\n                  if (!_didIteratorError) {\n                    _context4.next = 32;\n                    break;\n                  }\n\n                  throw _iteratorError;\n\n                case 32:\n                  return _context4.finish(29);\n\n                case 33:\n                  return _context4.finish(26);\n\n                case 34:\n                  _iteratorNormalCompletion2 = true;\n                  _didIteratorError2 = false;\n                  _iteratorError2 = undefined;\n                  _context4.prev = 37;\n                  _iterator2 = staticAnyListeners[Symbol.iterator]();\n\n                case 39:\n                  if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                    _context4.next = 47;\n                    break;\n                  }\n\n                  _listener = _step2.value;\n\n                  if (!anyListeners.has(_listener)) {\n                    _context4.next = 44;\n                    break;\n                  }\n\n                  _context4.next = 44;\n                  return _listener(eventName, eventData);\n\n                case 44:\n                  _iteratorNormalCompletion2 = true;\n                  _context4.next = 39;\n                  break;\n\n                case 47:\n                  _context4.next = 53;\n                  break;\n\n                case 49:\n                  _context4.prev = 49;\n                  _context4.t1 = _context4['catch'](37);\n                  _didIteratorError2 = true;\n                  _iteratorError2 = _context4.t1;\n\n                case 53:\n                  _context4.prev = 53;\n                  _context4.prev = 54;\n\n                  if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                  }\n\n                case 56:\n                  _context4.prev = 56;\n\n                  if (!_didIteratorError2) {\n                    _context4.next = 59;\n                    break;\n                  }\n\n                  throw _iteratorError2;\n\n                case 59:\n                  return _context4.finish(56);\n\n                case 60:\n                  return _context4.finish(53);\n\n                case 61:\n                case 'end':\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this, [[10, 22, 26, 34], [27,, 29, 33], [37, 49, 53, 61], [54,, 56, 60]]);\n        }));\n\n        function emitSerial(_x5, _x6) {\n          return _ref4.apply(this, arguments);\n        }\n\n        return emitSerial;\n      }()\n    }, {\n      key: 'onAny',\n      value: function onAny(listener) {\n        assertListener(listener);\n        anyMap.get(this).add(listener);\n        return this.offAny.bind(this, listener);\n      }\n    }, {\n      key: 'offAny',\n      value: function offAny(listener) {\n        assertListener(listener);\n        anyMap.get(this).delete(listener);\n      }\n    }, {\n      key: 'clearListeners',\n      value: function clearListeners(eventName) {\n        if (typeof eventName === 'string') {\n          getListeners(this, eventName).clear();\n        } else {\n          anyMap.get(this).clear();\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = eventsMap.get(this).values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var listeners = _step3.value;\n              listeners.clear();\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      }\n    }, {\n      key: 'listenerCount',\n      value: function listenerCount(eventName) {\n        if (typeof eventName === 'string') {\n          return anyMap.get(this).size + getListeners(this, eventName).size;\n        }\n\n        if (typeof eventName !== 'undefined') {\n          assertEventName(eventName);\n        }\n\n        var count = anyMap.get(this).size;\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = eventsMap.get(this).values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var value = _step4.value;\n            count += value.size;\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        return count;\n      }\n    }]);\n    return Emittery;\n  }(); // Subclass used to encourage TS users to type their events.\n\n\n  Emittery.Typed = function (_Emittery) {\n    inherits(_class, _Emittery);\n\n    function _class() {\n      classCallCheck(this, _class);\n      return possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    return _class;\n  }(Emittery);\n\n  Object.defineProperty(Emittery.Typed, 'Typed', {\n    enumerable: false,\n    value: undefined\n  });\n  var emittery = Emittery;\n\n  var strictUriEncode = function strictUriEncode(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n      return '%' + x.charCodeAt(0).toString(16).toUpperCase();\n    });\n  };\n\n  function encoderForArrayFormat(options) {\n    switch (options.arrayFormat) {\n      case 'index':\n        return function (key, value, index) {\n          return value === null ? [encode(key, options), '[', index, ']'].join('') : [encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('');\n        };\n\n      case 'bracket':\n        return function (key, value) {\n          return value === null ? encode(key, options) : [encode(key, options), '[]=', encode(value, options)].join('');\n        };\n\n      default:\n        return function (key, value) {\n          return value === null ? encode(key, options) : [encode(key, options), '=', encode(value, options)].join('');\n        };\n    }\n  }\n\n  function encode(value, options) {\n    if (options.encode) {\n      return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n    }\n\n    return value;\n  }\n\n  var stringify = function stringify(obj, options) {\n    var defaults$$1 = {\n      encode: true,\n      strict: true,\n      arrayFormat: 'none'\n    };\n    options = _extends(defaults$$1, options);\n\n    if (options.sort === false) {\n      options.sort = function () {};\n    }\n\n    var formatter = encoderForArrayFormat(options);\n    return obj ? Object.keys(obj).sort(options.sort).map(function (key) {\n      var value = obj[key];\n\n      if (value === undefined) {\n        return '';\n      }\n\n      if (value === null) {\n        return encode(key, options);\n      }\n\n      if (Array.isArray(value)) {\n        var result = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = value.slice()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var value2 = _step2.value;\n\n            if (value2 === undefined) {\n              continue;\n            }\n\n            result.push(formatter(key, value2, result.length));\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        return result.join('&');\n      }\n\n      return encode(key, options) + '=' + encode(value, options);\n    }).filter(function (x) {\n      return x.length > 0;\n    }).join('&') : '';\n  };\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var wsp_browser = createCommonjsModule(function (module, exports) {\n    !function (t, e) {\n      module.exports = e();\n    }(commonjsGlobal, function () {\n      var t = \"function\" == typeof Symbol && \"symbol\" == _typeof(Symbol.iterator) ? function (t) {\n        return typeof t === 'undefined' ? 'undefined' : _typeof(t);\n      } : function (t) {\n        return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t === 'undefined' ? 'undefined' : _typeof(t);\n      },\n          e = {\n        OPEN: 0,\n        JOIN: 1,\n        LEAVE: 2,\n        JOIN_ACK: 3,\n        JOIN_ERROR: 4,\n        LEAVE_ACK: 5,\n        LEAVE_ERROR: 6,\n        EVENT: 7,\n        PING: 8,\n        PONG: 9\n      };\n\n      function o(t, e, o) {\n        return o.forEach(function (t) {\n          !function (t, e) {\n            if (!t || \"string\" != typeof t) throw new Error(e);\n          }(e[t], \"expected \" + t + \" to be a valid string\");\n        }), {\n          t: t,\n          d: e\n        };\n      }\n\n      var n = {};\n      return Object.keys(e).forEach(function (o) {\n        var i = o.toLowerCase().replace(/^\\w|_(\\w)/g, function (t, e) {\n          return e ? e.toUpperCase() : t.toUpperCase();\n        });\n\n        n[\"is\" + i + \"Packet\"] = function (n) {\n          return !(!n || \"object\" !== (void 0 === n ? \"undefined\" : t(n)) || n.t !== e[o]);\n        };\n      }), n.hasTopic = function (t) {\n        return !!(t && t.d && t.d.topic);\n      }, n.isValidJoinPacket = n.hasTopic, n.isValidLeavePacket = n.hasTopic, n.isValidEventPacket = n.hasTopic, n.joinPacket = function (t) {\n        return o(e.JOIN, {\n          topic: t\n        }, [\"topic\"]);\n      }, n.leavePacket = function (t) {\n        return o(e.LEAVE, {\n          topic: t\n        }, [\"topic\"]);\n      }, n.joinAckPacket = function (t) {\n        return o(e.JOIN_ACK, {\n          topic: t\n        }, [\"topic\"]);\n      }, n.joinErrorPacket = function (t, n) {\n        return o(e.JOIN_ERROR, {\n          topic: t,\n          message: n\n        }, [\"topic\", \"message\"]);\n      }, n.leaveAckPacket = function (t) {\n        return o(e.LEAVE_ACK, {\n          topic: t\n        }, [\"topic\"]);\n      }, n.leaveErrorPacket = function (t, n) {\n        return o(e.LEAVE_ERROR, {\n          topic: t,\n          message: n\n        }, [\"topic\", \"message\"]);\n      }, n.eventPacket = function (t, n, i) {\n        return o(e.EVENT, {\n          topic: t,\n          event: n,\n          data: i = i || \"\"\n        }, [\"topic\", \"event\"]);\n      }, n.pingPacket = function () {\n        return {\n          t: e.PING\n        };\n      }, n.pongPacket = function () {\n        return {\n          t: e.PONG\n        };\n      }, _extends({\n        codes: e\n      }, n);\n    });\n  });\n  /**\n   * Helpers.\n   */\n\n  var s = 1000;\n  var m = s * 60;\n  var h = m * 60;\n  var d = h * 24;\n  var y = d * 365.25;\n  /**\n   * Parse or format the given `val`.\n   *\n   * Options:\n   *\n   *  - `long` verbose formatting [false]\n   *\n   * @param {String|Number} val\n   * @param {Object} [options]\n   * @throws {Error} throw an error if val is not a non-empty string or a number\n   * @return {String|Number}\n   * @api public\n   */\n\n  var ms = function ms(val, options) {\n    options = options || {};\n    var type = typeof val === 'undefined' ? 'undefined' : _typeof(val);\n\n    if (type === 'string' && val.length > 0) {\n      return parse$1(val);\n    } else if (type === 'number' && isNaN(val) === false) {\n      return options.long ? fmtLong(val) : fmtShort(val);\n    }\n\n    throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n  };\n  /**\n   * Parse the given `str` and return milliseconds.\n   *\n   * @param {String} str\n   * @return {Number}\n   * @api private\n   */\n\n\n  function parse$1(str) {\n    str = String(str);\n\n    if (str.length > 100) {\n      return;\n    }\n\n    var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n    if (!match) {\n      return;\n    }\n\n    var n = parseFloat(match[1]);\n    var type = (match[2] || 'ms').toLowerCase();\n\n    switch (type) {\n      case 'years':\n      case 'year':\n      case 'yrs':\n      case 'yr':\n      case 'y':\n        return n * y;\n\n      case 'days':\n      case 'day':\n      case 'd':\n        return n * d;\n\n      case 'hours':\n      case 'hour':\n      case 'hrs':\n      case 'hr':\n      case 'h':\n        return n * h;\n\n      case 'minutes':\n      case 'minute':\n      case 'mins':\n      case 'min':\n      case 'm':\n        return n * m;\n\n      case 'seconds':\n      case 'second':\n      case 'secs':\n      case 'sec':\n      case 's':\n        return n * s;\n\n      case 'milliseconds':\n      case 'millisecond':\n      case 'msecs':\n      case 'msec':\n      case 'ms':\n        return n;\n\n      default:\n        return undefined;\n    }\n  }\n  /**\n   * Short format for `ms`.\n   *\n   * @param {Number} ms\n   * @return {String}\n   * @api private\n   */\n\n\n  function fmtShort(ms) {\n    if (ms >= d) {\n      return Math.round(ms / d) + 'd';\n    }\n\n    if (ms >= h) {\n      return Math.round(ms / h) + 'h';\n    }\n\n    if (ms >= m) {\n      return Math.round(ms / m) + 'm';\n    }\n\n    if (ms >= s) {\n      return Math.round(ms / s) + 's';\n    }\n\n    return ms + 'ms';\n  }\n  /**\n   * Long format for `ms`.\n   *\n   * @param {Number} ms\n   * @return {String}\n   * @api private\n   */\n\n\n  function fmtLong(ms) {\n    return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n  }\n  /**\n   * Pluralization helper.\n   */\n\n\n  function plural(ms, n, name) {\n    if (ms < n) {\n      return;\n    }\n\n    if (ms < n * 1.5) {\n      return Math.floor(ms / n) + ' ' + name;\n    }\n\n    return Math.ceil(ms / n) + ' ' + name + 's';\n  }\n\n  var debug = createCommonjsModule(function (module, exports) {\n    /**\n     * This is the common logic for both the Node.js and web browser\n     * implementations of `debug()`.\n     *\n     * Expose `debug()` as the module.\n     */\n    exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\n    exports.coerce = coerce;\n    exports.disable = disable;\n    exports.enable = enable;\n    exports.enabled = enabled;\n    exports.humanize = ms;\n    /**\n     * The currently active debug mode names, and names to skip.\n     */\n\n    exports.names = [];\n    exports.skips = [];\n    /**\n     * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n     *\n     * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n     */\n\n    exports.formatters = {};\n    /**\n     * Previous log timestamp.\n     */\n\n    var prevTime;\n    /**\n     * Select a color.\n     * @param {String} namespace\n     * @return {Number}\n     * @api private\n     */\n\n    function selectColor(namespace) {\n      var hash = 0,\n          i;\n\n      for (i in namespace) {\n        hash = (hash << 5) - hash + namespace.charCodeAt(i);\n        hash |= 0; // Convert to 32bit integer\n      }\n\n      return exports.colors[Math.abs(hash) % exports.colors.length];\n    }\n    /**\n     * Create a debugger with the given `namespace`.\n     *\n     * @param {String} namespace\n     * @return {Function}\n     * @api public\n     */\n\n\n    function createDebug(namespace) {\n      function debug() {\n        // disabled?\n        if (!debug.enabled) return;\n        var self = debug; // set `diff` timestamp\n\n        var curr = +new Date();\n        var ms$$1 = curr - (prevTime || curr);\n        self.diff = ms$$1;\n        self.prev = prevTime;\n        self.curr = curr;\n        prevTime = curr; // turn the `arguments` into a proper Array\n\n        var args = new Array(arguments.length);\n\n        for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i];\n        }\n\n        args[0] = exports.coerce(args[0]);\n\n        if ('string' !== typeof args[0]) {\n          // anything else let's inspect with %O\n          args.unshift('%O');\n        } // apply any `formatters` transformations\n\n\n        var index = 0;\n        args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n          // if we encounter an escaped % then don't increase the array index\n          if (match === '%%') return match;\n          index++;\n          var formatter = exports.formatters[format];\n\n          if ('function' === typeof formatter) {\n            var val = args[index];\n            match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n            args.splice(index, 1);\n            index--;\n          }\n\n          return match;\n        }); // apply env-specific formatting (colors, etc.)\n\n        exports.formatArgs.call(self, args);\n        var logFn = debug.log || exports.log || console.log.bind(console);\n        logFn.apply(self, args);\n      }\n\n      debug.namespace = namespace;\n      debug.enabled = exports.enabled(namespace);\n      debug.useColors = exports.useColors();\n      debug.color = selectColor(namespace); // env-specific initialization logic for debug instances\n\n      if ('function' === typeof exports.init) {\n        exports.init(debug);\n      }\n\n      return debug;\n    }\n    /**\n     * Enables a debug mode by namespaces. This can include modes\n     * separated by a colon and wildcards.\n     *\n     * @param {String} namespaces\n     * @api public\n     */\n\n\n    function enable(namespaces) {\n      exports.save(namespaces);\n      exports.names = [];\n      exports.skips = [];\n      var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n      var len = split.length;\n\n      for (var i = 0; i < len; i++) {\n        if (!split[i]) continue; // ignore empty strings\n\n        namespaces = split[i].replace(/\\*/g, '.*?');\n\n        if (namespaces[0] === '-') {\n          exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n        } else {\n          exports.names.push(new RegExp('^' + namespaces + '$'));\n        }\n      }\n    }\n    /**\n     * Disable debug output.\n     *\n     * @api public\n     */\n\n\n    function disable() {\n      exports.enable('');\n    }\n    /**\n     * Returns true if the given mode name is enabled, false otherwise.\n     *\n     * @param {String} name\n     * @return {Boolean}\n     * @api public\n     */\n\n\n    function enabled(name) {\n      var i, len;\n\n      for (i = 0, len = exports.skips.length; i < len; i++) {\n        if (exports.skips[i].test(name)) {\n          return false;\n        }\n      }\n\n      for (i = 0, len = exports.names.length; i < len; i++) {\n        if (exports.names[i].test(name)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Coerce `val`.\n     *\n     * @param {Mixed} val\n     * @return {Mixed}\n     * @api private\n     */\n\n\n    function coerce(val) {\n      if (val instanceof Error) return val.stack || val.message;\n      return val;\n    }\n  });\n  var debug_1 = debug.coerce;\n  var debug_2 = debug.disable;\n  var debug_3 = debug.enable;\n  var debug_4 = debug.enabled;\n  var debug_5 = debug.humanize;\n  var debug_6 = debug.names;\n  var debug_7 = debug.skips;\n  var debug_8 = debug.formatters;\n  var browser = createCommonjsModule(function (module, exports) {\n    /**\n     * This is the web browser implementation of `debug()`.\n     *\n     * Expose `debug()` as the module.\n     */\n    exports = module.exports = debug;\n    exports.log = log;\n    exports.formatArgs = formatArgs;\n    exports.save = save;\n    exports.load = load;\n    exports.useColors = useColors;\n    exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n    /**\n     * Colors.\n     */\n\n    exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n    /**\n     * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n     * and the Firebug extension (any Firefox version) are known\n     * to support \"%c\" CSS customizations.\n     *\n     * TODO: add a `localStorage` variable to explicitly enable/disable colors\n     */\n\n    function useColors() {\n      // NB: In an Electron preload script, document will be defined but not fully\n      // initialized. Since we know we're in Chrome, we'll just detect this case\n      // explicitly\n      if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n        return true;\n      } // is webkit? http://stackoverflow.com/a/16459606/376773\n      // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n      return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n      typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n      typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n      typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n    }\n    /**\n     * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n     */\n\n\n    exports.formatters.j = function (v) {\n      try {\n        return JSON.stringify(v);\n      } catch (err) {\n        return '[UnexpectedJSONParseError]: ' + err.message;\n      }\n    };\n    /**\n     * Colorize log arguments if enabled.\n     *\n     * @api public\n     */\n\n\n    function formatArgs(args) {\n      var useColors = this.useColors;\n      args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n      if (!useColors) return;\n      var c = 'color: ' + this.color;\n      args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n      // arguments passed either before or after the %c, so we need to\n      // figure out the correct index to insert the CSS into\n\n      var index = 0;\n      var lastC = 0;\n      args[0].replace(/%[a-zA-Z%]/g, function (match) {\n        if ('%%' === match) return;\n        index++;\n\n        if ('%c' === match) {\n          // we only are interested in the *last* %c\n          // (the user may have provided their own)\n          lastC = index;\n        }\n      });\n      args.splice(lastC, 0, c);\n    }\n    /**\n     * Invokes `console.log()` when available.\n     * No-op when `console.log` is not a \"function\".\n     *\n     * @api public\n     */\n\n\n    function log() {\n      // this hackery is required for IE8/9, where\n      // the `console.log` function doesn't have 'apply'\n      return 'object' === (typeof console === 'undefined' ? 'undefined' : _typeof(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);\n    }\n    /**\n     * Save `namespaces`.\n     *\n     * @param {String} namespaces\n     * @api private\n     */\n\n\n    function save(namespaces) {\n      try {\n        if (null == namespaces) {\n          exports.storage.removeItem('debug');\n        } else {\n          exports.storage.debug = namespaces;\n        }\n      } catch (e) {}\n    }\n    /**\n     * Load `namespaces`.\n     *\n     * @return {String} returns the previously persisted debug modes\n     * @api private\n     */\n\n\n    function load() {\n      var r;\n\n      try {\n        r = exports.storage.debug;\n      } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n      if (!r && typeof process !== 'undefined' && 'env' in process) {\n        r = process.env.DEBUG;\n      }\n\n      return r;\n    }\n    /**\n     * Enable namespaces listed in `localStorage.debug` initially.\n     */\n\n\n    exports.enable(load());\n    /**\n     * Localstorage attempts to return the localstorage.\n     *\n     * This is necessary because safari throws\n     * when a user disables cookies/localstorage\n     * and you attempt to access it.\n     *\n     * @return {LocalStorage}\n     * @api private\n     */\n\n    function localstorage() {\n      try {\n        return window.localStorage;\n      } catch (e) {}\n    }\n  });\n  var browser_1 = browser.log;\n  var browser_2 = browser.formatArgs;\n  var browser_3 = browser.save;\n  var browser_4 = browser.load;\n  var browser_5 = browser.useColors;\n  var browser_6 = browser.storage;\n  var browser_7 = browser.colors;\n  var Debug = createCommonjsModule(function (module) {\n    /*\n     * adonis-websocket-client\n     *\n     * (c) Harminder Virk <virk@adonisjs.com>\n     *\n     * For the full copyright and license information, please view the LICENSE\n     * file that was distributed with this source code.\n    */\n    {\n      var _Debug = browser;\n\n      _Debug.enable('adonis:*');\n\n      module.exports = _Debug('adonis:websocket');\n    }\n  });\n  /**\n   * Socket class holds details for a single subscription. The instance\n   * of this class can be used to exchange messages with the server\n   * on a given topic.\n   *\n   * @class Socket\n   */\n\n  var Socket = function () {\n    function Socket(topic, connection) {\n      classCallCheck(this, Socket);\n      this.topic = topic;\n      this.connection = connection;\n      this.emitter = new emittery();\n      this._state = 'pending';\n      this._emitBuffer = [];\n    }\n    /**\n     * Socket state\n     *\n     * @attribute state\n     *\n     * @return {String}\n     */\n\n\n    createClass(Socket, [{\n      key: 'joinAck',\n\n      /**\n       * Called when subscription is confirmed by the\n       * server\n       *\n       * @method joinAck\n       *\n       * @return {void}\n       */\n      value: function joinAck() {\n        var _this = this;\n\n        this.state = 'open';\n        this.emitter.emit('ready', this);\n        {\n          Debug('clearing emit buffer for %s topic after subscription ack', this.topic);\n        }\n        /**\n         * Process queued events\n         */\n\n        this._emitBuffer.forEach(function (buf) {\n          return _this.emit(buf.event, buf.data);\n        });\n\n        this._emitBuffer = [];\n      }\n      /**\n       * Called when subscription is rejected by the server\n       *\n       * @method joinError\n       *\n       * @param  {Object}  packet\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'joinError',\n      value: function joinError(packet) {\n        this.state = 'error';\n        this.emitter.emit('error', packet);\n        this.serverClose();\n      }\n      /**\n       * Called when subscription close is acknowledged\n       * by the server\n       *\n       * @method leaveAck\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'leaveAck',\n      value: function leaveAck() {\n        this.state = 'closed';\n        this.serverClose();\n      }\n      /**\n       * This method is invoked, when server rejects to close\n       * the subscription. The state of the socket should not\n       * change here\n       *\n       * @method leaveError\n       *\n       * @param  {Object}   packet\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'leaveError',\n      value: function leaveError(packet) {\n        this.emitter.emit('leaveError', packet);\n      }\n      /* istanbul-ignore */\n\n      /**\n       * Add an event listener\n       *\n       * @method on\n       */\n\n    }, {\n      key: 'on',\n      value: function on() {\n        var _emitter;\n\n        (_emitter = this.emitter).on.apply(_emitter, arguments);\n      }\n      /* istanbul-ignore */\n\n      /**\n       * Add an event listener for once only\n       *\n       * @method once\n       */\n\n    }, {\n      key: 'once',\n      value: function once() {\n        var _emitter2;\n\n        (_emitter2 = this.emitter).once.apply(_emitter2, arguments);\n      }\n      /* istanbul-ignore */\n\n      /**\n       * Remove event listener(s)\n       *\n       * @method off\n       */\n\n    }, {\n      key: 'off',\n      value: function off() {\n        var _emitter3;\n\n        (_emitter3 = this.emitter).off.apply(_emitter3, arguments);\n      }\n      /**\n       * Emit message on the subscription\n       *\n       * @method emit\n       *\n       * @param  {String} event\n       * @param  {Mixed} data\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'emit',\n      value: function emit(event, data) {\n        if (this.state === 'pending') {\n          this._emitBuffer.push({\n            event: event,\n            data: data\n          });\n\n          return;\n        }\n\n        this.connection.sendEvent(this.topic, event, data);\n      }\n      /**\n       * Closes the connection and removes all existing\n       * listeners\n       *\n       * @method serverClose\n       *\n       * @return {Promise}\n       */\n\n    }, {\n      key: 'serverClose',\n      value: function serverClose() {\n        var _this2 = this;\n\n        return this.emitter.emit('close', this).then(function () {\n          _this2._emitBuffer = [];\n\n          _this2.emitter.clearListeners();\n        }).catch(function () {\n          _this2._emitBuffer = [];\n\n          _this2.emitter.clearListeners();\n        });\n      }\n      /**\n       * Invoked when a new event is received from the server\n       *\n       * @method serverEvent\n       *\n       * @param  {String}    options.event\n       * @param  {Mixed}    options.data\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'serverEvent',\n      value: function serverEvent(_ref) {\n        var event = _ref.event,\n            data = _ref.data;\n        this.emitter.emit(event, data);\n      }\n      /**\n       * Received error on connection\n       *\n       * @method serverError\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'serverError',\n      value: function serverError() {\n        this.state = 'error';\n      }\n      /**\n       * Sends the request on server to close the subscription, we\n       * have to wait for acknowledgment too\n       *\n       * @method close\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        this.state = 'closing';\n        {\n          Debug('closing subscription for %s topic with server', this.topic);\n        }\n        this.connection.sendPacket(wsp_browser.leavePacket(this.topic));\n      }\n      /**\n       * Forcefully terminating the subscription\n       *\n       * @method terminate\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'terminate',\n      value: function terminate() {\n        this.leaveAck();\n      }\n    }, {\n      key: 'state',\n      get: function get$$1() {\n        return this._state;\n      }\n      /**\n       * Update socket state\n       */\n      ,\n      set: function set$$1(state) {\n        if (!this.constructor.states.indexOf(state) === -1) {\n          throw new Error(state + ' is not a valid socket state');\n        }\n\n        this._state = state;\n      }\n      /**\n       * A static array of internal states\n       *\n       * @method states\n       *\n       * @return {Array}\n       */\n\n    }], [{\n      key: 'states',\n      get: function get$$1() {\n        return ['pending', 'open', 'closed', 'closing', 'error'];\n      }\n    }]);\n    return Socket;\n  }();\n  /**\n   * adonis-websocket-client\n   *\n   * (c) Harminder Virk <virk@adonisjs.com>\n   *\n   * For the full copyright and license information, please view the LICENSE\n   * file that was distributed with this source code.\n  */\n\n  /**\n   * The default encoder to encode packets.\n   */\n\n\n  var JsonEncoder = {\n    name: 'json',\n\n    /**\n     * Encode a value by stringifying it\n     *\n     * @method encode\n     *\n     * @param  {Object}   payload\n     * @param  {Function} callback\n     *\n     * @return {void}\n     */\n    encode: function encode(payload, callback) {\n      var encoded = null;\n\n      try {\n        encoded = JSON.stringify(payload);\n      } catch (error) {\n        return callback(error);\n      }\n\n      callback(null, encoded);\n    },\n\n    /**\n     * Decode value by parsing it\n     *\n     * @method decode\n     *\n     * @param  {String}   payload\n     * @param  {Function} callback\n     *\n     * @return {void}\n     */\n    decode: function decode(payload, callback) {\n      var decoded = null;\n\n      try {\n        decoded = JSON.parse(payload);\n      } catch (error) {\n        return callback(error);\n      }\n\n      callback(null, decoded);\n    }\n  };\n  /**\n   * Returns the ws protocol based upon HTTP or HTTPS\n   *\n   * @returns {String}\n   *\n   */\n\n  var wsProtocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\n  /**\n   * Connection class is used to make a TCP/Socket connection\n   * with the server. It relies on Native Websocket browser\n   * support.\n   *\n   * @class Connection\n   *\n   * @param {String} url\n   * @param {Object} options\n   */\n\n  var Connection = function (_Emitter) {\n    inherits(Connection, _Emitter);\n\n    function Connection(url, options) {\n      classCallCheck(this, Connection);\n\n      var _this = possibleConstructorReturn(this, (Connection.__proto__ || Object.getPrototypeOf(Connection)).call(this));\n\n      url = url || wsProtocol + '://' + window.location.host;\n      /**\n       * Connection options\n       *\n       * @type {Object}\n       */\n\n      _this.options = _extends({\n        path: 'adonis-ws',\n        reconnection: true,\n        reconnectionAttempts: 10,\n        reconnectionDelay: 1000,\n        query: null,\n        encoder: JsonEncoder\n      }, options);\n      {\n        Debug('connection options %o', _this.options);\n      }\n      /**\n       * The state connection is in\n       *\n       * @type {String}\n       */\n\n      _this._connectionState = 'idle';\n      /**\n       * Number of reconnection attempts being made\n       *\n       * @type {Number}\n       */\n\n      _this._reconnectionAttempts = 0;\n      /**\n       * All packets are sent in sequence to the server. So we need to\n       * maintain a queue and process one at a time\n       *\n       * @type {Array}\n       */\n\n      _this._packetsQueue = [];\n      /**\n       * Whether or not the queue is in process\n       *\n       * @type {Boolean}\n       */\n\n      _this._processingQueue = false;\n      /**\n       * As per Adonis protocol, the client must ping\n       * the server after x interval\n       *\n       * @type {Timer}\n       */\n\n      _this._pingTimer = null;\n      /**\n       * Extended query is merged with the query params\n       * user pass\n       *\n       * @type {Object}\n       */\n\n      _this._extendedQuery = {};\n      /**\n       * Base URL for the websocket connection\n       *\n       * @type {String}\n       */\n\n      _this._url = url.replace(/\\/$/, '') + '/' + _this.options.path;\n      /**\n       * Subscriptions for a single connection\n       *\n       * @type {Object}\n       */\n\n      _this.subscriptions = {};\n      /**\n       * Handler called when `close` is emitted from the\n       * subscription\n       */\n\n      _this.removeSubscription = function (_ref) {\n        var topic = _ref.topic;\n        delete _this.subscriptions[topic];\n      };\n\n      return _this;\n    }\n    /**\n     * Computed value to decide, whether or not to reconnect\n     *\n     * @method shouldReconnect\n     *\n     * @return {Boolean}\n     */\n\n\n    createClass(Connection, [{\n      key: '_cleanup',\n\n      /**\n       * Clean references\n       *\n       * @method _cleanup\n       *\n       * @return {void}\n       *\n       * @private\n       */\n      value: function _cleanup() {\n        clearInterval(this._pingTimer);\n        this.ws = null;\n        this._pingTimer = null;\n      }\n      /**\n       * Calls a callback passing subscription to it\n       *\n       * @method _subscriptionsIterator\n       *\n       * @param  {Function}             callback\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_subscriptionsIterator',\n      value: function _subscriptionsIterator(callback) {\n        var _this2 = this;\n\n        Object.keys(this.subscriptions).forEach(function (sub) {\n          return callback(_this2.subscriptions[sub], sub);\n        });\n      }\n      /**\n       * Calls the callback when there is a subscription for\n       * the topic mentioned in the packet\n       *\n       * @method _ensureSubscription\n       *\n       * @param  {Object}            packet\n       * @param  {Function}          cb\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_ensureSubscription',\n      value: function _ensureSubscription(packet, cb) {\n        var socket = this.getSubscription(packet.d.topic);\n\n        if (!socket) {\n          {\n            Debug('cannot consume packet since %s topic has no active subscription %j', packet.d.topic, packet);\n          }\n          return;\n        }\n\n        cb(socket, packet);\n      }\n      /**\n       * Process the packets queue by sending one packet at a time\n       *\n       * @method _processQueue\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_processQueue',\n      value: function _processQueue() {\n        var _this3 = this;\n\n        if (this._processingQueue || !this._packetsQueue.length) {\n          return;\n        }\n        /**\n         * Turn on the processing flag\n         *\n         * @type {Boolean}\n         */\n\n\n        this._processingQueue = true;\n        this.options.encoder.encode(this._packetsQueue.shift(), function (error, payload) {\n          if (error) {\n            {\n              Debug('encode error %j', error);\n            }\n            return;\n          }\n\n          _this3.write(payload);\n          /**\n           * Turn off the processing flag and re call the processQueue to send\n           * the next message\n           *\n           * @type {Boolean}\n           */\n\n\n          _this3._processingQueue = false;\n\n          _this3._processQueue();\n        });\n      }\n      /**\n       * As soon as connection is ready, we start listening\n       * for new message\n       *\n       * @method _onOpen\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_onOpen',\n      value: function _onOpen() {\n        {\n          Debug('opened');\n        }\n      }\n      /**\n       * When received connection error\n       *\n       * @method _onError\n       *\n       * @param  {Event} event\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_onError',\n      value: function _onError(event) {\n        {\n          Debug('error %O', event);\n        }\n\n        this._subscriptionsIterator(function (subscription) {\n          return subscription.serverError();\n        });\n\n        this.emit('error', event);\n      }\n      /**\n       * Initiates reconnect with the server by moving\n       * all subscriptions to pending state\n       *\n       * @method _reconnect\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_reconnect',\n      value: function _reconnect() {\n        var _this4 = this;\n\n        this._reconnectionAttempts++;\n        this.emit('reconnect', this._reconnectionAttempts);\n        setTimeout(function () {\n          _this4._connectionState = 'reconnect';\n\n          _this4.connect();\n        }, this.options.reconnectionDelay * this._reconnectionAttempts);\n      }\n      /**\n       * When connection closes\n       *\n       * @method _onClose\n       *\n       * @param  {Event} event\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_onClose',\n      value: function _onClose(event) {\n        var _this5 = this;\n\n        {\n          Debug('closing from %s state', this._connectionState);\n        }\n\n        this._cleanup();\n        /**\n         * Force subscriptions to terminate\n         */\n\n\n        this._subscriptionsIterator(function (subscription) {\n          return subscription.terminate();\n        });\n\n        this.emit('close', this).then(function () {\n          _this5.shouldReconnect ? _this5._reconnect() : _this5.clearListeners();\n        }).catch(function () {\n          _this5.shouldReconnect ? _this5._reconnect() : _this5.clearListeners();\n        });\n      }\n      /**\n       * When a new message was received\n       *\n       * @method _onMessage\n       *\n       * @param  {Event}   event\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_onMessage',\n      value: function _onMessage(event) {\n        var _this6 = this;\n\n        this.options.encoder.decode(event.data, function (decodeError, packet) {\n          if (decodeError) {\n            {\n              Debug('packet dropped, decode error %o', decodeError);\n            }\n            return;\n          }\n\n          _this6._handleMessage(packet);\n        });\n      }\n      /**\n       * Handles the message packet based upon it's type\n       *\n       * @method _handleMessage\n       *\n       * @param  {Object}       packet\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleMessage',\n      value: function _handleMessage(packet) {\n        if (wsp_browser.isOpenPacket(packet)) {\n          {\n            Debug('open packet');\n          }\n\n          this._handleOpen(packet);\n\n          return;\n        }\n\n        if (wsp_browser.isJoinAckPacket(packet)) {\n          {\n            Debug('join ack packet');\n          }\n\n          this._handleJoinAck(packet);\n\n          return;\n        }\n\n        if (wsp_browser.isJoinErrorPacket(packet)) {\n          {\n            Debug('join error packet');\n          }\n\n          this._handleJoinError(packet);\n\n          return;\n        }\n\n        if (wsp_browser.isLeaveAckPacket(packet)) {\n          {\n            Debug('leave ack packet');\n          }\n\n          this._handleLeaveAck(packet);\n\n          return;\n        }\n\n        if (wsp_browser.isLeaveErrorPacket(packet)) {\n          {\n            Debug('leave error packet');\n          }\n\n          this._handleLeaveError(packet);\n\n          return;\n        }\n\n        if (wsp_browser.isLeavePacket(packet)) {\n          {\n            Debug('leave packet');\n          }\n\n          this._handleServerLeave(packet);\n\n          return;\n        }\n\n        if (wsp_browser.isEventPacket(packet)) {\n          {\n            Debug('event packet');\n          }\n\n          this._handleEvent(packet);\n\n          return;\n        }\n\n        if (wsp_browser.isPongPacket(packet)) {\n          {\n            Debug('pong packet');\n          }\n          return;\n        }\n\n        {\n          Debug('invalid packet type %d', packet.t);\n        }\n      }\n      /**\n       * Emits the open emit and send subscription packets\n       * for pre-existing subscriptions\n       *\n       * @method _handleOpen\n       *\n       * @param  {Object}    packet\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleOpen',\n      value: function _handleOpen(packet) {\n        var _this7 = this;\n\n        this._connectionState = 'open';\n        this.emit('open', packet.d);\n        /**\n         * Setup a timer to ping the server, telling\n         * client is awake\n         */\n\n        this._pingTimer = setInterval(function () {\n          _this7.sendPacket(wsp_browser.pingPacket());\n        }, packet.d.clientInterval);\n        /**\n         * Sending packets to make pending subscriptions\n         */\n\n        {\n          Debug('processing pre connection subscriptions %o', Object.keys(this.subscriptions));\n        }\n\n        this._subscriptionsIterator(function (subscription) {\n          _this7._sendSubscriptionPacket(subscription.topic);\n        });\n      }\n      /**\n       * Handles the join acknowledgement for a subscription\n       *\n       * @method _handleJoinAck\n       *\n       * @param  {Object}       packet\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleJoinAck',\n      value: function _handleJoinAck(packet) {\n        this._ensureSubscription(packet, function (socket) {\n          return socket.joinAck();\n        });\n      }\n      /**\n       * Handles the join error for a subscription\n       *\n       * @method _handleJoinError\n       *\n       * @param  {Object}         packet\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleJoinError',\n      value: function _handleJoinError(packet) {\n        this._ensureSubscription(packet, function (socket, packet) {\n          return socket.joinError(packet.d);\n        });\n      }\n      /**\n       * Acknowledges the subscription leave\n       *\n       * @method _handleLeaveAck\n       *\n       * @param  {Object}        packet\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleLeaveAck',\n      value: function _handleLeaveAck(packet) {\n        this._ensureSubscription(packet, function (socket) {\n          return socket.leaveAck();\n        });\n      }\n      /**\n       * Handles leave error for a subscription\n       *\n       * @method _handleLeaveError\n       *\n       * @param  {Object}          packet\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleLeaveError',\n      value: function _handleLeaveError(packet) {\n        this._ensureSubscription(packet, function (socket, packet) {\n          return socket.leaveError(packet.d);\n        });\n      }\n      /**\n       * Handles when server initiates the subscription leave\n       *\n       * @method _handleServerLeave\n       *\n       * @param  {Object}           packet\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleServerLeave',\n      value: function _handleServerLeave(packet) {\n        this._ensureSubscription(packet, function (socket, packet) {\n          return socket.leaveAck();\n        });\n      }\n      /**\n       * Handles the event packet for a subscription\n       *\n       * @method _handleEvent\n       *\n       * @param  {Object}     packet\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_handleEvent',\n      value: function _handleEvent(packet) {\n        this._ensureSubscription(packet, function (socket, packet) {\n          return socket.serverEvent(packet.d);\n        });\n      }\n      /**\n       * Sends the subscription packet for a given topic\n       *\n       * @method sendSubscriptionPacket\n       *\n       * @param  {String}               topic\n       *\n       * @return {void}\n       *\n       * @private\n       */\n\n    }, {\n      key: '_sendSubscriptionPacket',\n      value: function _sendSubscriptionPacket(topic) {\n        {\n          Debug('initiating subscription for %s topic with server', topic);\n        }\n        this.sendPacket(wsp_browser.joinPacket(topic));\n      }\n      /**\n       * Instantiate the websocket connection\n       *\n       * @method connect\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'connect',\n      value: function connect() {\n        var _this8 = this;\n\n        var query = stringify(_extends({}, this.options.query, this._extendedQuery));\n        var url = query ? this._url + '?' + query : this._url;\n        {\n          Debug('creating socket connection on %s url', url);\n        }\n        this.ws = new window.WebSocket(url);\n\n        this.ws.onclose = function (event) {\n          return _this8._onClose(event);\n        };\n\n        this.ws.onerror = function (event) {\n          return _this8._onError(event);\n        };\n\n        this.ws.onopen = function (event) {\n          return _this8._onOpen(event);\n        };\n\n        this.ws.onmessage = function (event) {\n          return _this8._onMessage(event);\n        };\n\n        return this;\n      }\n      /**\n       * Writes the payload on the open connection\n       *\n       * @method write\n       *\n       * @param  {String} payload\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'write',\n      value: function write(payload) {\n        if (this.ws.readyState !== window.WebSocket.OPEN) {\n          {\n            Debug('connection is not in open state, current state %s', this.ws.readyState);\n          }\n          return;\n        }\n\n        this.ws.send(payload);\n      }\n      /**\n       * Sends a packet by encoding it first\n       *\n       * @method _sendPacket\n       *\n       * @param  {Object}    packet\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'sendPacket',\n      value: function sendPacket(packet) {\n        this._packetsQueue.push(packet);\n\n        this._processQueue();\n      }\n      /**\n       * Returns the subscription instance for a given topic\n       *\n       * @method getSubscription\n       *\n       * @param  {String}        topic\n       *\n       * @return {Socket}\n       */\n\n    }, {\n      key: 'getSubscription',\n      value: function getSubscription(topic) {\n        return this.subscriptions[topic];\n      }\n      /**\n       * Returns a boolean telling, whether connection has\n       * a subscription for a given topic or not\n       *\n       * @method hasSubcription\n       *\n       * @param  {String}       topic\n       *\n       * @return {Boolean}\n       */\n\n    }, {\n      key: 'hasSubcription',\n      value: function hasSubcription(topic) {\n        return !!this.getSubscription(topic);\n      }\n      /**\n       * Create a new subscription with the server\n       *\n       * @method subscribe\n       *\n       * @param  {String}  topic\n       *\n       * @return {Socket}\n       */\n\n    }, {\n      key: 'subscribe',\n      value: function subscribe(topic) {\n        if (!topic || typeof topic !== 'string') {\n          throw new Error('subscribe method expects topic to be a valid string');\n        }\n\n        if (this.subscriptions[topic]) {\n          throw new Error('Cannot subscribe to same topic twice. Instead use getSubscription');\n        }\n\n        var socket = new Socket(topic, this);\n        socket.on('close', this.removeSubscription);\n        /**\n         * Storing reference to the socket\n         */\n\n        this.subscriptions[topic] = socket;\n        /**\n         * Sending join request to the server, the subscription will\n         * be considered ready, once server acknowledges it\n         */\n\n        if (this._connectionState === 'open') {\n          this._sendSubscriptionPacket(topic);\n        }\n\n        return socket;\n      }\n      /**\n       * Sends event for a given topic\n       *\n       * @method sendEvent\n       *\n       * @param  {String}  topic\n       * @param  {String}  event\n       * @param  {Mixed}  data\n       *\n       * @return {void}\n       *\n       * @throws {Error} If topic or event are not passed\n       * @throws {Error} If there is no active subscription for the given topic\n       */\n\n    }, {\n      key: 'sendEvent',\n      value: function sendEvent(topic, event, data) {\n        if (!topic || !event) {\n          throw new Error('topic and event name is required to call sendEvent method');\n        }\n        /**\n         * Make sure there is an active subscription for the topic. Though server will\n         * bounce the message, there is no point in hammering it\n         */\n\n\n        var subscription = this.getSubscription(topic);\n\n        if (!subscription) {\n          throw new Error('There is no active subscription for ' + topic + ' topic');\n        }\n        /**\n         * If subscription state is not open, then we should not publish\n         * messages.\n         *\n         * The reason we have this check on connection and not socket,\n         * is coz we don't want anyone to use the connection object\n         * and send packets, even when subscription is closed.\n         */\n\n\n        if (subscription.state !== 'open') {\n          throw new Error('Cannot emit since subscription socket is in ' + this.state + ' state');\n        }\n\n        {\n          Debug('sending event on %s topic', topic);\n        }\n        this.sendPacket(wsp_browser.eventPacket(topic, event, data));\n      }\n      /**\n       * Use JWT token to authenticate the user\n       *\n       * @method withJwtToken\n       *\n       * @param {String} token\n       *\n       * @chainable\n       */\n\n    }, {\n      key: 'withJwtToken',\n      value: function withJwtToken(token) {\n        this._extendedQuery.token = token;\n        return this;\n      }\n      /**\n       * Use basic auth credentials to login the user\n       *\n       * @method withBasicAuth\n       *\n       * @param  {String}  username\n       * @param  {String}  password\n       *\n       * @chainable\n       */\n\n    }, {\n      key: 'withBasicAuth',\n      value: function withBasicAuth(username, password) {\n        this._extendedQuery.basic = window.btoa(username + ':' + password);\n        return this;\n      }\n      /**\n       * Use personal API token to authenticate the user\n       *\n       * @method withApiToken\n       *\n       * @param {String} token\n       *\n       * @return {String}\n       */\n\n    }, {\n      key: 'withApiToken',\n      value: function withApiToken(token) {\n        this._extendedQuery.token = token;\n        return this;\n      }\n      /**\n       * Forcefully close the connection\n       *\n       * @method close\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        this._connectionState = 'terminated';\n        this.ws.close();\n      }\n    }, {\n      key: 'shouldReconnect',\n      get: function get$$1() {\n        return this._connectionState !== 'terminated' && this.options.reconnection && this.options.reconnectionAttempts > this._reconnectionAttempts;\n      }\n    }]);\n    return Connection;\n  }(emittery);\n\n  function index(url, options) {\n    return new Connection(url, options);\n  }\n\n  return index;\n});"],"sourceRoot":""}