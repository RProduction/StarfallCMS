{"version":3,"sources":["components/Document.js"],"names":["DialogCustom","lazy","Promise","all","__webpack_require__","e","then","bind","DocumentSchema","DocumentAdd","DocumentEdit","Document","props","dispatch","useDispatch","notification","useSelector","state","status","authStatus","_useState","useState","_useState2","Object","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","authorized","setAuthorized","useEffect","FIRST_BOOT","NOT_AUTHORIZED","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","category","title","content","dialogProps","open","onClose","HideNotificationDialog","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","path","component"],"mappings":"8JAOMA,EAAeC,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aAC1BC,EAAiBP,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aAC5BE,EAAcR,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aACzBG,EAAeT,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aAqCjBI,UAlCf,SAAkBC,GACd,IAAMC,EAAWC,cACXC,EAAeC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,eAE1CG,EAASF,YAAY,SAAAC,GAAK,OAAEA,EAAME,aAJpBC,EAKgBC,oBAAS,GALzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAKbK,EALaH,EAAA,GAKDI,EALCJ,EAAA,GAYpB,OALAK,oBAAU,WACHT,IAAWU,KAAcV,IAAWW,IAAgBH,GAAc,GAChEA,GAAc,IACpB,CAACR,IAGAY,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACKR,EACGK,EAAAC,EAAAC,cAAChC,EAAD,CACIkC,SAAS,eACTC,MAAOpB,EAAaoB,MACpBC,QAASrB,EAAaqB,QACtBC,YAAa,CACTC,KAA6B,KAAvBvB,EAAaoB,OAAyC,KAAzBpB,EAAaqB,QAChDG,QAAS,kBAAI1B,EAAS2B,mBAEzB,KAETV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,KAAK,2BAA2BC,UAAWnC,IAClDsB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,KAAK,wBAAwBC,UAAWlC,IAC/CqB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,KAAK,8BAA8BC,UAAWjC","file":"static/js/27.b0b2b056.chunk.js","sourcesContent":["import React, {lazy, useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {FIRST_BOOT, NOT_AUTHORIZED} from '../redux/actions/authorizationActions';\r\nimport {HideNotificationDialog} from '../redux/actions/globalActions';\r\n\r\nconst DialogCustom = lazy(() => import('./DialogCustom'));\r\nconst DocumentSchema = lazy(() => import('./DocumentSchema'));\r\nconst DocumentAdd = lazy(() => import('./DocumentAdd'));\r\nconst DocumentEdit = lazy(() => import('./DocumentEdit'));\r\n\r\n\r\nfunction Document(props){\r\n    const dispatch = useDispatch();\r\n    const notification = useSelector(state => state.notification);\r\n\r\n    const status = useSelector(state=>state.authStatus);\r\n    const [authorized, setAuthorized] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        if(status !== FIRST_BOOT && status !== NOT_AUTHORIZED) setAuthorized(true);\r\n        else setAuthorized(false);\r\n    }, [status]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {authorized ? \r\n                <DialogCustom\r\n                    category=\"notification\"\r\n                    title={notification.title} \r\n                    content={notification.content}\r\n                    dialogProps={{\r\n                        open: notification.title !== '' && notification.content !== '',\r\n                        onClose: ()=>dispatch(HideNotificationDialog())\r\n                    }}\r\n                /> : null\r\n            }\r\n            <Switch>\r\n                <Route path='/:project/:entity/schema' component={DocumentSchema} />\r\n                <Route path='/:project/:entity/add' component={DocumentAdd} />\r\n                <Route path='/:project/:entity/:document' component={DocumentEdit} />\r\n            </Switch>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Document;"],"sourceRoot":""}