{"version":3,"sources":["components/DialogCustomForm.js","components/DialogCustom.js","components/ContentContainer.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","components/AuthorizationForm.js","components/FormButton.js","SignUp.js"],"names":["DialogCustomForm","props","request","btn","category","_props$values","values","name","newName","confirmName","errors","touched","handleChange","isValid","setFieldTouched","change","e","persist","react_default","a","createElement","Grid","container","component","spacing","onSubmit","preventDefault","TextField","item","xs","id","label","onChange","bind","value","helperText","error","Boolean","Fragment","Button","type","disabled","size","addSchema","Yup","required","matches","message","excludeEmptyString","min","max","deleteSchema","oneOf","renameSchema","initialAdd","initialDelete","targetName","initialRename","DialogCustom","title","content","dialogProps","Dialog","DialogTitle","DialogContent","DialogContentText","formik_esm","validationSchema","initialValues","render","propsRender","components_DialogCustomForm","Object","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_2__","ContentContainer","minHeight","Container","maxWidth","children","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","forwardRef","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","root","StyledGrid","theme","boxSizing","display","flexWrap","width","margin","minWidth","direction-xs-column","flexDirection","direction-xs-column-reverse","direction-xs-row-reverse","wrap-xs-nowrap","wrap-xs-wrap-reverse","align-items-xs-center","align-items-xs-flex-start","align-items-xs-flex-end","align-items-xs-baseline","align-content-xs-center","align-content-xs-flex-start","align-content-xs-flex-end","align-content-xs-space-between","align-content-xs-space-around","justify-xs-center","justifyContent","justify-xs-flex-end","justify-xs-space-between","justify-xs-space-around","justify-xs-space-evenly","breakpoint","styles","forEach","themeSpacing","& > $item","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","Math","round","flexBasis","flexGrow","up","generateGrid","__webpack_exports__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_styles_makeStyles__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles_makeStyles__WEBPACK_IMPORTED_MODULE_2___default","formik__WEBPACK_IMPORTED_MODULE_3__","_ContentContainer__WEBPACK_IMPORTED_MODULE_4__","useStyle","makeStyles","position","top","left","right","bottom","backgroundColor","palette","background","dark","AuthorizationForm","style","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2__","FormButton","r","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_styles_makeStyles__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_styles_makeStyles__WEBPACK_IMPORTED_MODULE_5___default","react_redux__WEBPACK_IMPORTED_MODULE_6__","yup__WEBPACK_IMPORTED_MODULE_7__","_components_AuthorizationForm__WEBPACK_IMPORTED_MODULE_8__","_components_FormButton__WEBPACK_IMPORTED_MODULE_9__","_redux_actions_authorizationActions__WEBPACK_IMPORTED_MODULE_10__","_redux_actions_globalActions__WEBPACK_IMPORTED_MODULE_11__","_components_DialogCustom__WEBPACK_IMPORTED_MODULE_12__","& > div","marginTop","marginBottom","primary","PaperForm","React","innerRef","SignUp","dispatch","useDispatch","notification","useSelector","state","_status","authStatus","username","password","confirmPassword","NOT_AUTHORIZED","to","USER","open","onClose","HideNotificationDialog","elevation","AuthSignUp","variant","color","ValidationSchema","InitialValues","Validation"],"mappings":"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","file":"static/js/10.db94b41b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction DialogCustomForm(props){\r\n    const {\r\n        request, \r\n        btn,\r\n        category,\r\n\t\tvalues: { name, newName, confirmName },\r\n\t\terrors,\r\n\t\ttouched,\r\n\t\thandleChange,\r\n\t\tisValid,\r\n\t\tsetFieldTouched\r\n    } = props;\r\n    \r\n    const change = (name, e) => {\r\n\t\te.persist();\r\n\t\thandleChange(e);\r\n\t\tsetFieldTouched(name, true, false);\r\n    };\r\n\r\n\treturn(\r\n        <Grid container component=\"form\" spacing={1}\r\n            onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                request({ \r\n                    name: name, \r\n                    newName: newName, \r\n                    confirmName: confirmName \r\n                });\r\n            }}\r\n        >\r\n            {category === 'add' \r\n                ? <Grid component={TextField} item xs={12}\r\n                    id=\"name\" name=\"name\" label=\"Name\"\r\n                    onChange={change.bind(null, \"name\")}\r\n                    value={name}\r\n                    helperText={touched.name ? errors.name : \"\"}\r\n                    error={touched.name && Boolean(errors.name)}\r\n                /> : category === 'delete'\r\n                ? <Grid component={TextField} item xs={12}\r\n                    id=\"confirmName\" name=\"confirmName\" label=\"Confirm Name\"\r\n                    onChange={change.bind(null, \"confirmName\")}\r\n                    value={confirmName}\r\n                    helperText={touched.confirmName ? errors.confirmName : \"\"}\r\n                    error={touched.confirmName && Boolean(errors.confirmName)}\r\n                /> : category === 'rename'\r\n                ? <React.Fragment>\r\n                    <Grid component={TextField} item xs={12}\r\n                        id=\"newName\" name=\"newName\" label=\"New Name\"\r\n                        onChange={change.bind(null, \"newName\")}\r\n                        value={newName}\r\n                        helperText={touched.newName ? errors.newName : \"\"}\r\n                        error={touched.newName && Boolean(errors.newName)}\r\n                    />\r\n                    <Grid component={TextField} item xs={12}\r\n                        id=\"confirmName\" name=\"confirmName\" label=\"Confirm Name\"\r\n                        onChange={change.bind(null, \"confirmName\")}\r\n                        value={confirmName}\r\n                        helperText={touched.confirmName ? errors.confirmName : \"\"}\r\n                        error={touched.confirmName && Boolean(errors.confirmName)}\r\n                    />\r\n                </React.Fragment> : null\r\n            }\r\n            <Grid item xs={12} component={Button} \r\n                type=\"submit\" disabled={!isValid}\r\n                size=\"large\"\r\n            >\r\n                {btn}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DialogCustomForm;","import React from 'react';\r\n\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DialogCustomForm from './DialogCustomForm';\r\n\r\nconst addSchema = Yup.object({\r\n\tname: Yup.string().required('enter name')\r\n\t.matches(/^[a-zA-Z0-9_]+$/, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n\t}).min(1, 'name too short').max(50, 'name too long')\r\n});\r\n\r\nconst deleteSchema = Yup.object({\r\n    name: Yup.string(),\r\n\tconfirmName: Yup.string().required('re-enter name')\r\n\t.matches(/^[a-z0-9_]*$/i, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n\t}).oneOf([Yup.ref('name')], \"Confirm Name does not match\")\r\n});\r\n\r\nconst renameSchema = Yup.object({\r\n    name: Yup.string(),\r\n\tconfirmName: Yup.string().required('re-enter name')\r\n\t.oneOf([Yup.ref('name')], \"Confirm Name does not match\"),\r\n    newName: Yup.string().required('enter new name')\r\n\t.matches(/^[a-zA-Z0-9_]+$/, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n    }).min(1, 'new name too short').max(50, 'new name too long')\r\n});\r\n\r\nconst initialAdd = {\r\n    name: ''\r\n};\r\n\r\nconst initialDelete = targetName => ({\r\n    name: targetName,\r\n    confirmName: ''\r\n});\r\n\r\nconst initialRename = targetName => ({\r\n    name: targetName,\r\n    confirmName: '',\r\n    newName: ''\r\n});\r\n\r\n// will accept parameter of request, title, content, btn, targetName, and dialogProps\r\nfunction DialogCustom(props){\r\n    const {title, content, targetName, category, dialogProps} = props;\r\n\r\n    return(\r\n        <Dialog {...dialogProps}>\r\n            <DialogTitle id='dialog-title'>\r\n                {title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {category === 'add' || category === 'delete' || category === 'rename' \r\n                    ? <React.Fragment>\r\n                        {category === 'delete' \r\n                            ?   <React.Fragment>\r\n                                    <DialogContentText>\r\n                                        {content}\r\n                                    </DialogContentText>\r\n                                    <DialogContentText>\r\n                                        Please type in the name of the target to confirm\r\n                                    </DialogContentText>\r\n                                </React.Fragment>\r\n                            : null\r\n                        }\r\n                        <Formik \r\n                            validationSchema={category === 'add'\r\n                                ? addSchema : category === 'rename'\r\n                                ? renameSchema : category === 'delete'\r\n                                ? deleteSchema : {}\r\n                            }\r\n                            initialValues={category === 'add'\r\n                                ? initialAdd : category === 'rename'\r\n                                ? initialRename(targetName) : category === 'delete'\r\n                                ? initialDelete(targetName) : {}\r\n                            }\r\n                            render={(propsRender)=><DialogCustomForm \r\n                                {...props}\r\n                                {...propsRender}\r\n                            />}\r\n                        />\r\n                    </React.Fragment> : category === 'notification'\r\n                    ? <DialogContentText>\r\n                        {content}\r\n                    </DialogContentText> : null\r\n                }\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nDialogCustom.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    content: PropTypes.string,\r\n    btn: PropTypes.string,\r\n    targetName: PropTypes.string,\r\n    category: PropTypes.oneOf(['add', 'delete', 'rename', 'notification']).isRequired,\r\n    request: PropTypes.func,\r\n    dialogProps: PropTypes.shape({\r\n        ...Dialog.propTypes\r\n    }).isRequired\r\n}\r\n\r\nexport default DialogCustom;","import React from 'react';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction ContentContainer(props){\r\n    return(\r\n        <Box minHeight='100vh' component={Container} maxWidth=\"xl\" {...props}>\r\n            {\r\n                props.children\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContentContainer;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function (props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  // can't use named function expression since the function body references `Grid`\n  // which would point to the render function instead of the actual component\n  Grid.displayName = 'ForwardRef(Grid)';\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport {Formik} from 'formik';\r\n\r\nimport ContentContainer from './ContentContainer';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\tposition: 'absolute',\r\n\t\ttop: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\tbottom: 0,\r\n\t\tbackgroundColor: theme.palette.background.dark.dark\r\n\t}\r\n}));\r\n\r\nfunction AuthorizationForm(props){\r\n\tconst style = useStyle();\r\n\r\n\treturn (\r\n\t\t<ContentContainer>\r\n            <Grid container alignItems=\"center\" justify=\"center\" \r\n                className={style.root}\r\n\t\t\t>\r\n\t\t\t\t<Formik {...props}/>\r\n\t\t\t</Grid>\r\n\t\t</ContentContainer>\r\n  \t);\r\n}\r\n\r\nexport default AuthorizationForm;","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormButton(props){\r\n    return(\r\n        <Grid item component={Button} {...props}>\r\n            {props.children}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFormButton.propTypes = {\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    xs: PropTypes.oneOf(['auto',true,1,2,3,4,5,6,7,8,9,10,11,12]).isRequired,\r\n    color: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    classes: PropTypes.any\r\n}\r\n\r\nexport default FormButton;","import React from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport AuthorizationForm from './components/AuthorizationForm';\r\nimport FormButton from './components/FormButton';\r\nimport {AuthSignUp, USER, NOT_AUTHORIZED} from './redux/actions/authorizationActions';\r\nimport {HideNotificationDialog} from './redux/actions/globalActions';\r\nimport DialogCustom from './components/DialogCustom';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\tpadding: theme.spacing(2.5),\r\n\t\t'& > div':{\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: theme.spacing(1),\r\n\t\t}\r\n\t},\r\n\tbtn:{\r\n\t\tbackgroundColor: theme.palette.primary\r\n\t}\r\n}));\r\n\r\nconst PaperForm = React.forwardRef((props, ref)=>{\r\n\treturn <Paper component='form' {...props} innerRef={ref}/>\r\n});\r\n\r\nconst SignUp = (props)=>{\r\n\tconst style = useStyle();\r\n\tconst dispatch = useDispatch();\r\n\tconst notification = useSelector(state => state.notification);\r\n\tconst _status = useSelector(state => state.authStatus);\r\n\r\n\tconst {\r\n\t\tvalues: { username, password, confirmPassword },\r\n\t\terrors,\r\n\t\ttouched,\r\n\t\thandleChange,\r\n\t\tisValid,\r\n\t\tsetFieldTouched\r\n\t} = props;\r\n\r\n\tconst change = (name, e) => {\r\n\t\te.persist();\r\n\t\thandleChange(e);\r\n\t\tsetFieldTouched(name, true, false);\r\n\t};\r\n\r\n\tif(_status === NOT_AUTHORIZED)\r\n\t\treturn <Redirect to='/signin'/>;\r\n\telse if(_status === USER)\r\n\t\treturn <Redirect to='/'/>;\r\n\telse return (\r\n\t\t<React.Fragment>\r\n\t\t\t<DialogCustom\r\n\t\t\t\tcategory=\"notification\"\r\n\t\t\t\ttitle={notification.title} \r\n\t\t\t\tcontent={notification.content}\r\n\t\t\t\tdialogProps={{\r\n\t\t\t\t\topen: notification.title !== '' && notification.content !== '',\r\n\t\t\t\t\tonClose: ()=>dispatch(HideNotificationDialog())\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Grid component={PaperForm} container item\r\n\t\t\t\txs={8} sm={6} className={style.root}\r\n\t\t\t\televation={3}\r\n\t\t\t\tonSubmit={(e)=>{\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tdispatch(AuthSignUp(username, password));\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12} component={TextField} required \r\n\t\t\t\t\tid=\"username\" name=\"username\" label=\"Username\"\r\n\t\t\t\t\tonChange={change.bind(null, \"username\")}\r\n\t\t\t\t\tvalue={username} variant=\"outlined\" margin=\"dense\"\r\n\t\t\t\t\thelperText={touched.username ? errors.username : \"\"}\r\n\t\t\t\t\t\terror={touched.username && Boolean(errors.username)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Grid item xs={12} component={TextField} required id=\"password\" \r\n\t\t\t\t\tname=\"password\" label=\"Password\" type=\"password\"\r\n\t\t\t\t\tonChange={change.bind(null, \"password\")}\r\n\t\t\t\t\tvalue={password} variant=\"outlined\" margin=\"dense\"\r\n\t\t\t\t\thelperText={touched.password ? errors.password : \"\"}\r\n\t\t\t\t\t\terror={touched.password && Boolean(errors.password)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Grid item xs={12} component={TextField} required id=\"confirmPassword\" \r\n\t\t\t\t\tname=\"confirmPassword\" label=\"Confirm Password\" type=\"password\"\r\n\t\t\t\t\tonChange={change.bind(null, \"confirmPassword\")}\r\n\t\t\t\t\tvalue={confirmPassword} variant=\"outlined\" margin=\"dense\"\r\n\t\t\t\t\thelperText={touched.confirmPassword ? errors.confirmPassword : \"\"}\r\n\t\t\t\t\t\terror={touched.confirmPassword && Boolean(errors.confirmPassword)}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormButton type=\"submit\" disabled={!isValid} \r\n\t\t\t\t\txs={12} variant=\"contained\" color=\"secondary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSign Up\r\n\t\t\t\t</FormButton>\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst ValidationSchema = Yup.object({\r\n\tusername: Yup.string().required('enter username')\r\n\t.matches(/^[a-zA-Z0-9]*$/, {\r\n\t\tmessage: 'input letters and numbers only',\r\n\t\texcludeEmptyString: true,\r\n\t}).min(5, 'username too short').max(30, 'username too long'),\r\n\tpassword: Yup.string().required('enter password')\r\n\t.matches(/^[a-zA-Z0-9]*$/, {\r\n\t\tmessage: 'input letters and numbers only',\r\n\t\texcludeEmptyString: true,\r\n\t}).min(5, 'password too short').max(30, 'password too long'),\r\n\tconfirmPassword: Yup.string().required('re-enter your password')\r\n\t.oneOf([Yup.ref(\"password\")], \"password does not match\")\r\n});\r\n\r\nconst InitialValues = {\r\n\tusername: 'Username12345',\r\n\tpassword: '',\r\n\tconfirmPassword: ''\r\n};\r\n\r\nfunction Validation(){\r\n\treturn <AuthorizationForm \r\n\t\tvalidationSchema={ValidationSchema}\r\n\t\tinitialValues={InitialValues}\r\n\t\trender={(props)=><SignUp {...props}/>}\r\n\t/>\r\n}\r\n\r\nexport default Validation;"],"sourceRoot":""}