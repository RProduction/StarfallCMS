{"version":3,"sources":["WebsocketClient.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_adonisjs_websocket_client__WEBPACK_IMPORTED_MODULE_2__","_adonisjs_websocket_client__WEBPACK_IMPORTED_MODULE_2___default","n","_redux_actions_projectActions__WEBPACK_IMPORTED_MODULE_3__","_redux_actions_entityActions__WEBPACK_IMPORTED_MODULE_4__","_redux_actions_documentActions__WEBPACK_IMPORTED_MODULE_5__","_redux_actions_storageActions__WEBPACK_IMPORTED_MODULE_6__","WebsocketClient","props","dispatch","useDispatch","useEffect","ws","Ws","on","project","subscribe","entity","document","storage","msg","console","log","AddProjects","id","_id","name","img","img_url","created","created_at","updated","updated_at","publicKey","public_key","DeleteProject","RenameProject","ImgProject","err","AddEntities","projectId","project_id","schema","DeleteEntities","RenameEntity","SetEntitySchema","AddDocuments","entityId","entity_id","data","ModifyDocument","DeleteDocuments","ids","UploadStorage","path","files","FolderStorage","MoveStorage","targets","RenameStorage","new_name","DeleteStorage","paths","connect","close"],"mappings":"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","file":"static/js/26.1c657795.chunk.js","sourcesContent":["import {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport Ws from '@adonisjs/websocket-client';\r\nimport {AddProjects, DeleteProject, RenameProject, ImgProject} from './redux/actions/projectActions';\r\nimport {AddEntities, DeleteEntities, RenameEntity, SetEntitySchema} from './redux/actions/entityActions';\r\nimport {AddDocuments, ModifyDocument, DeleteDocuments} from './redux/actions/documentActions';\r\nimport {UploadStorage, FolderStorage, RenameStorage, MoveStorage, DeleteStorage} from './redux/actions/storageActions';\r\n\r\nfunction WebsocketClient(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        const ws = Ws(process.env.NODE_ENV === 'development' ? 'ws://localhost:3333/' : 'ws://');\r\n        \r\n        ws.on(\"open\", ()=>{\r\n            const project = ws.subscribe('project');\r\n            const entity = ws.subscribe('entity');\r\n            const document = ws.subscribe('document');\r\n            const storage = ws.subscribe('storage');\r\n            \r\n            // project socket listener\r\n            project.on('add', (msg)=>{\r\n                console.log(\"add project\");\r\n                console.log(msg);\r\n                dispatch(AddProjects([{\r\n                    id: msg._id,\r\n                    name: msg.name,\r\n                    img: msg.img_url,\r\n                    created: msg.created_at,\r\n                    updated: msg.updated_at,\r\n                    publicKey: msg.public_key\r\n                }]));\r\n            });\r\n            project.on('delete', (msg)=>{\r\n                console.log(\"delete project\");\r\n                console.log(msg);\r\n                dispatch(DeleteProject(msg._id));\r\n            });\r\n            project.on('rename', (msg)=>{\r\n                console.log(\"rename project\");\r\n                console.log(msg);\r\n                dispatch(RenameProject(\r\n                    msg._id, \r\n                    msg.name, \r\n                    msg.updated_at\r\n                ));\r\n            });\r\n            project.on('img', (msg)=>{\r\n                console.log(\"change image of project\");\r\n                console.log(msg);\r\n                dispatch(ImgProject(\r\n                    msg._id, \r\n                    msg.img_url, \r\n                    msg.updated_at\r\n                ));\r\n            });\r\n            project.on(\"error\", (err)=>{\r\n                console.log(err);\r\n            });\r\n\r\n            // entity socket listener\r\n            entity.on('add', (msg)=>{\r\n                console.log(\"add entity\");\r\n                console.log(msg);\r\n                dispatch(AddEntities([{\r\n                    id: msg._id,\r\n                    projectId:msg.project_id,\r\n                    name: msg.name,\r\n                    created: msg.created_at,\r\n                    updated: msg.updated_at,\r\n                    schema: msg.schema\r\n                }]));\r\n            });\r\n            entity.on('delete', (msg)=>{\r\n                console.log(\"delete entity\");\r\n                console.log(msg);\r\n                dispatch(DeleteEntities([msg._id]));\r\n            });\r\n            entity.on('rename', (msg)=>{\r\n                console.log(\"rename entity\");\r\n                console.log(msg);\r\n                dispatch(RenameEntity(\r\n                    msg._id,\r\n                    msg.name, \r\n                    msg.updated_at\r\n                ));\r\n            });\r\n            entity.on('schema', (msg)=>{\r\n                console.log(\"set entity schema\");\r\n                console.log(msg);\r\n                dispatch(SetEntitySchema(\r\n                    msg._id,\r\n                    msg.schema, \r\n                    msg.updated_at\r\n                ));\r\n            });\r\n            entity.on(\"error\", (err)=>{\r\n                console.log(err);\r\n            });\r\n\r\n            // document socket listener\r\n            document.on('add', (msg)=>{\r\n                console.log(\"add document\");\r\n                console.log(msg);\r\n                dispatch(AddDocuments([{\r\n                    id: msg._id,\r\n                    entityId: msg.entity_id,\r\n                    created: msg.created_at,\r\n                    updated: msg.updated_at,\r\n                    data: msg.data\r\n                }]));\r\n            });\r\n            document.on('modify', (msg)=>{\r\n                console.log(\"modify document\");\r\n                console.log(msg);\r\n                dispatch(ModifyDocument(\r\n                    msg._id,\r\n                    msg.updated_at,\r\n                    msg.data\r\n                ));\r\n            });\r\n            document.on('delete', (msg)=>{\r\n                console.log(\"delete documents\");\r\n                console.log(msg);\r\n                dispatch(DeleteDocuments(msg.ids));\r\n            });\r\n\r\n            // storage socket listener\r\n            storage.on('upload', (msg)=>{\r\n                console.log(\"upload into storage\");\r\n                console.log(msg);\r\n                dispatch(UploadStorage(msg._id, msg.path, msg.files));\r\n            });\r\n            storage.on('folder', (msg)=>{\r\n                console.log(\"new folder into storage\");\r\n                console.log(msg);\r\n                dispatch(FolderStorage(msg._id, msg.path));\r\n            });\r\n            storage.on('move', (msg)=>{\r\n                console.log(\"move storage\");\r\n                console.log(msg);\r\n                dispatch(MoveStorage(msg._id, msg.path, msg.targets));\r\n            });\r\n            storage.on('rename', (msg)=>{\r\n                console.log(\"rename storage\");\r\n                console.log(msg);\r\n                dispatch(RenameStorage(msg._id, msg.path, msg.name, msg.new_name));\r\n            });\r\n            storage.on('delete', (msg)=>{\r\n                console.log(\"delete storage\");\r\n                console.log(msg);\r\n                dispatch(DeleteStorage(msg._id, msg.paths));\r\n            });\r\n        });\r\n\r\n        ws.on(\"close\", ()=>{\r\n                \r\n        });\r\n\r\n        ws.on(\"error\", (err)=>{\r\n            console.log(err);\r\n        });\r\n\r\n        ws.connect();\r\n\r\n        return ()=>{\r\n            ws.close();\r\n        }\r\n    }, []);\r\n\r\n\treturn null;\r\n}\r\n\r\nexport default WebsocketClient;"],"sourceRoot":""}