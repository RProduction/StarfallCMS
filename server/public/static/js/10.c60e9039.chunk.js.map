{"version":3,"sources":["components/FormButton.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/DocumentField.js","../node_modules/@material-ui/icons/esm/Add.js","components/DocumentObject.js","components/DocumentArray.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/icons/esm/Delete.js","components/DocumentEdit.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","FormButton","props","a","createElement","Object","assign","item","component","Button","children","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","__webpack_exports__","DocumentField","keys","category","arrayKeys","arrayValues","dispatch","useDispatch","select","useMemo","selectCurrentDocumentValue","value","useSelector","state","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","container","xs","alignItems","Typography","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","checked","onChange","e","SetField","target","inputProps","aria-label","TextField","step","type","multiline","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","color","concat","onClick","temp","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","splice","edge","_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","useStyle","makeStyles","theme","root","marginLeft","spacing","DocumentObject","style","selectKeys","selectCurrentDocumentKeys","curKeys","Fragment","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_7__","direction","className","map","key","_DocumentArray__WEBPACK_IMPORTED_MODULE_11__","_DocumentField__WEBPACK_IMPORTED_MODULE_10__","DocumentArray","selectValues","values","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","newValue","_material_ui_icons__WEBPACK_IMPORTED_MODULE_6__","index","_DocumentObject__WEBPACK_IMPORTED_MODULE_11__","SwitchBase_SwitchBase","react_default","forwardRef","ref","autoFocus","checkedProp","checkedIcon","classes","classNameProp","defaultChecked","disabledProp","disabled","icon","id","inputRef","name","onBlur","onFocus","readOnly","required","tabIndex","other","objectWithoutProperties","isControlled","useRef","current","_React$useState","useState","Boolean","checkedState","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","esm_extends","clsx_m","role","undefined","event","input","internal_SwitchBase","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","helpers","data-indeterminate","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","& > *","marginTop","marginBottom","DocumentEdit","history","_props$match$params","match","params","document","entity","project","selectEntity","selectEntityByName","_entity","_document","selectDocument","currentValue","selectCurrentDocumentData","_useState","_useState2","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","generate","setGenerate","useEffect","GenerateField","schema","data","push","react__WEBPACK_IMPORTED_MODULE_3___default","sm","md","lg","_DocumentArray__WEBPACK_IMPORTED_MODULE_12__","_DocumentField__WEBPACK_IMPORTED_MODULE_13__","_FormButton__WEBPACK_IMPORTED_MODULE_7__","variant","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","Axios","post","ShowNotificationDialog","t0","stop"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAsBeK,IAlBf,SAAoBC,GAChB,OACIL,EAAAM,EAAAC,cAACL,EAAA,EAADM,OAAAC,OAAA,CAAMC,MAAI,EAACC,UAAWC,KAAYP,GAC7BA,EAAMQ,6CCJJ,SAAAC,EAAAC,GACf,OCJe,SAAAA,GACf,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAAiDF,EAAAH,EAAAK,OAAgBF,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GDFSE,CAAiBN,IEJX,SAAAO,GACf,GAAAC,OAAAC,YAAAhB,OAAAc,IAAA,uBAAAd,OAAAiB,UAAAC,SAAAC,KAAAL,GAAA,OAAAN,MAAAY,KAAAN,GFGmCO,CAAed,IGJnC,WACf,UAAAe,UAAA,mDHG2DC,GAJ3DhC,EAAAiC,EAAAC,EAAA,sBAAAnB,mJIwEeoB,IAhEf,SAAuB7B,GAAM,IAClB8B,EAA0C9B,EAA1C8B,KAAMC,EAAoC/B,EAApC+B,SAAUC,EAA0BhC,EAA1BgC,UAAWC,EAAejC,EAAfiC,YAC5BC,EAAWC,cACXC,EAASC,kBAAQC,IAA4B,IAC7CC,EAAQC,YAAY,SAAAC,GAAK,OAAIL,EAAOK,EAAOX,KAEjD,OACIY,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CAAMC,WAAS,EAACvC,MAAI,EAACwC,GAAI,GAAIC,WAAW,UACpCJ,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CAAMtC,MAAI,EAACC,UAAWyC,IAAYF,GAAI,GAAIf,EAAKA,EAAKf,OAAS,IAE5C,YAAbgB,EACIW,EAAAzC,EAAAC,cAAC8C,EAAA,EAAD,CACIC,QAASV,EACTW,SAAU,SAACC,GAAD,OAAOjB,EAASkB,YAAStB,EAAMqB,EAAEE,OAAOJ,WAClDV,MAAOT,EAAKA,EAAKf,OAAS,GAC1BuC,WAAY,CACZC,aAAc,sBAEb,KAGI,YAAbxB,GAAuC,UAAbA,EACtBW,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CAAMtC,MAAI,EAACC,UAAWkD,IAAWX,IAAE,EAC/BN,MAAOA,EACPkB,KAAmB,UAAb1B,EAAuB,MAAQ,EACrC2B,KAAK,SACLR,SAAU,SAACC,GAAD,OAAOjB,EAASkB,YAAStB,EAAMqB,EAAEE,OAAOd,WACjD,KAGI,WAAbR,EACIW,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CAAMtC,MAAI,EAACC,UAAWkD,IAAWX,IAAE,EAC/BN,MAAOA,EACPoB,WAAS,EACTT,SAAU,SAACC,GAAD,OAAOjB,EAASkB,YAAStB,EAAMqB,EAAEE,OAAOd,WACjD,KAGTP,GAAaC,EAAcS,EAAAzC,EAAAC,cAAC0D,EAAA,EAAD,CACvBC,MAAM,UACNN,aAAA,UAAAO,OAAsBhC,EAAKA,EAAKf,OAAS,IACzCgD,QAAS,WACL,IAAMC,EAAI7D,OAAA8D,EAAA,EAAA9D,CAAO8B,GACjB+B,EAAKE,OAAOpC,EAAKA,EAAKf,OAAS,GAAI,GACnCmB,EAASkB,YAASpB,EAAWgC,KAEjCG,KAAK,OAELzB,EAAAzC,EAAAC,cAACkE,EAAA,EAAD,OACW,yCCzD/B,IAAA3E,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAA4E,EAAA3E,EAAA,KAEekC,EAAA,EAAAzB,OAAAkE,EAAA,GAAc1E,EAAAM,EAAKC,cAAA,QAClCyB,EAAA,wCACC,8JCOK2C,EAAWC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,CACEC,WAAYF,EAAMG,QAAQ,OAgEnBC,IA5Df,SAASA,EAAe5E,GACpB,IAAM6E,EAAQP,IACPxC,EAAgC9B,EAAhC8B,KAAMG,EAA0BjC,EAA1BiC,YAAaD,EAAahC,EAAbgC,UACpBE,EAAWC,cACX2C,EAAazC,kBAAQ0C,IAA2B,IAChDC,EAAUxC,YAAY,SAAAC,GAAK,OAAIqC,EAAWrC,EAAOX,KAEvD,OACIY,EAAAzC,EAAAC,cAACwC,EAAAzC,EAAMgF,SAAP,KACIvC,EAAAzC,EAAAC,cAACgF,EAAA,EAAD,CAAMtC,WAAS,EAACvC,MAAI,EAACwC,GAAI,GAAIC,WAAW,UACpCJ,EAAAzC,EAAAC,cAACgF,EAAA,EAAD,CAAM7E,MAAI,EAACC,UAAWyC,IAAYF,IAAE,GAC/Bf,EAAKA,EAAKf,OAAS,IAGpBiB,GAAaC,EAAcS,EAAAzC,EAAAC,cAACiF,EAAA,EAAD,CACvBtB,MAAM,UACNN,aAAA,UAAAO,OAAsBhC,EAAKA,EAAKf,OAAS,IACzCgD,QAAS,WACL,IAAMC,EAAI7D,OAAA8D,EAAA,EAAA9D,CAAO8B,GACjB+B,EAAKE,OAAOpC,EAAKA,EAAKf,OAAS,GAAI,GACnCmB,EAASkB,YAASpB,EAAWgC,KAEjCG,KAAK,OAELzB,EAAAzC,EAAAC,cAACkF,EAAA,EAAD,OACW,MAGvB1C,EAAAzC,EAAAC,cAACgF,EAAA,EAAD,CAAMtC,WAAS,EAACvC,MAAI,EAACwC,GAAI,GAAIwC,UAAU,SAASC,UAAWT,EAAMJ,MAEzDO,EAAQO,IAAI,SAAAhD,GAAS,IACViD,EAAajD,EAAbiD,IAAK9B,EAAQnB,EAARmB,KACNM,EAAI,GAAAF,OAAA3D,OAAA8D,EAAA,EAAA9D,CAAO2B,GAAP,CAAa0D,IACvB,MAAY,WAAT9B,EAEKhB,EAAAzC,EAAAC,cAAC0E,EAAD,CAAgBY,IAAKA,EAAK1D,KAAMkC,IAGvB,UAATN,EAEAhB,EAAAzC,EAAAC,cAACuF,EAAA,EAAD,CAAeD,IAAKA,EAAK1D,KAAMkC,IAI/BtB,EAAAzC,EAAAC,cAACwF,EAAA,EAAD,CAAeF,IAAKA,EAAK1D,KAAMkC,EAAMjC,SAAU2B,iKC2ChEiC,IA7Ff,SAASA,EAAc3F,GAAM,IAClB8B,EAAgC9B,EAAhC8B,KAAMG,EAA0BjC,EAA1BiC,YAAaD,EAAahC,EAAbgC,UACpBE,EAAWC,cACX2C,EAAazC,kBAAQ0C,IAA2B,IAChDC,EAAUxC,YAAY,SAAAC,GAAK,OAAIqC,EAAWrC,EAAOX,KACjD8D,EAAevD,kBAAQC,IAA4B,IACnDuD,EAASrD,YAAY,SAAAC,GAAK,OAAImD,EAAanD,EAAOX,KAExD,OACIY,EAAAzC,EAAAC,cAACwC,EAAAzC,EAAMgF,SAAP,KACIvC,EAAAzC,EAAAC,cAAC4F,EAAA,EAAD,CAAMlD,WAAS,EAACvC,MAAI,EAACwC,GAAI,GAAIC,WAAW,UACpCJ,EAAAzC,EAAAC,cAAC4F,EAAA,EAAD,CAAMzF,MAAI,EAACC,UAAWyC,IAAYF,IAAE,GAC/Bf,EAAKA,EAAKf,OAAS,IAExB2B,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CACIkB,MAAM,UACNN,aAAW,gBACXQ,QAAS,WAAM,IACJL,EAAQsB,EAARtB,KACHqC,EAAW,GACH,YAATrC,EACCqC,EAAQ,GAAAjC,OAAA3D,OAAA8D,EAAA,EAAA9D,CAAO0F,GAAP,CAAe,IAEV,UAATnC,EACJqC,EAAQ,GAAAjC,OAAA3D,OAAA8D,EAAA,EAAA9D,CAAO0F,GAAP,CAAe,IAEV,WAATnC,EACJqC,EAAQ,GAAAjC,OAAA3D,OAAA8D,EAAA,EAAA9D,CAAO0F,GAAP,CAAe,KAEV,YAATnC,EACJqC,EAAQ,GAAAjC,OAAA3D,OAAA8D,EAAA,EAAA9D,CAAO0F,GAAP,EAAe,IAEV,WAATnC,EACJqC,EAAQ,GAAAjC,OAAA3D,OAAA8D,EAAA,EAAA9D,CAAO0F,GAAP,CAAe,KAEX,SAARnC,IACJqC,EAAQ,GAAAjC,OAAA3D,OAAA8D,EAAA,EAAA9D,CAAO0F,GAAP,CAAe,MAE3B3D,EAASkB,YAAStB,EAAMiE,KAE5B5B,KAAK,OAELzB,EAAAzC,EAAAC,cAAC8F,EAAA,EAAD,OAGAhE,GAAaC,EAAcS,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CACvBkB,MAAM,UACNN,aAAA,UAAAO,OAAsBhC,EAAKA,EAAKf,OAAS,IACzCgD,QAAS,WACL,IAAMC,EAAI7D,OAAA8D,EAAA,EAAA9D,CAAO8B,GACjB+B,EAAKE,OAAOpC,EAAKA,EAAKf,OAAS,GAAI,GACnCmB,EAASkB,YAASpB,EAAWgC,KAEjCG,KAAK,OAELzB,EAAAzC,EAAAC,cAACkF,EAAA,EAAD,OACW,MAInBS,EAAON,IAAI,SAAChD,EAAO0D,GAAQ,IAChBvC,EAAQsB,EAARtB,KACDM,EAAI,GAAAF,OAAA3D,OAAA8D,EAAA,EAAA9D,CAAO2B,GAAP,CAAamE,IACvB,MAAY,WAATvC,EAEKhB,EAAAzC,EAAAC,cAACgG,EAAA,EAAD,CAAgBV,IAAKS,EAAOnE,KAAMkC,EAC9BhC,UAAWF,EAAMG,YAAa4D,IAGzB,UAATnC,EAEAhB,EAAAzC,EAAAC,cAACyF,EAAD,CAAeH,IAAKS,EAAOnE,KAAMkC,EAC7BhC,UAAWF,EAAMG,YAAa4D,IAIlCnD,EAAAzC,EAAAC,cAACwF,EAAA,EAAD,CAAeF,IAAKS,EAAOnE,KAAMkC,EAAMjC,SAAU2B,EAC7C1B,UAAWF,EAAMG,YAAa4D,wHC1D1DM,EAAaC,EAAAnG,EAAKoG,WAAA,SAAArG,EAAAsG,GACtB,IAAAC,EAAAvG,EAAAuG,UACAC,EAAAxG,EAAAiD,QACAwD,EAAAzG,EAAAyG,YACAC,EAAA1G,EAAA0G,QACAC,EAAA3G,EAAAsF,UACAsB,EAAA5G,EAAA4G,eACAC,EAAA7G,EAAA8G,SACAC,EAAA/G,EAAA+G,KACAC,EAAAhH,EAAAgH,GACA1D,EAAAtD,EAAAsD,WACA2D,EAAAjH,EAAAiH,SACAC,EAAAlH,EAAAkH,KACAC,EAAAnH,EAAAmH,OACAjE,EAAAlD,EAAAkD,SACAkE,EAAApH,EAAAoH,QACAC,EAAArH,EAAAqH,SACAC,EAAAtH,EAAAsH,SACAC,EAAAvH,EAAAuH,SACA7D,EAAA1D,EAAA0D,KACAnB,EAAAvC,EAAAuC,MACAiF,EAAcrH,OAAAsH,EAAA,EAAAtH,CAAwBH,EAAA,kNAGtC0H,EADsBtB,EAAAnG,EAAK0H,OAAA,MAAAnB,GAC3BoB,QAEAC,EAAwBzB,EAAAnG,EAAK6H,SAAAC,QAAAnB,IAC7BoB,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GAEAK,EAAuB/H,OAAAgI,EAAA,EAAAhI,GAkCvB2G,EAAAD,EAEAqB,GACA,qBAAApB,IACAA,EAAAoB,EAAApB,UAIA,IAAA7D,EAAAyE,EAAAlB,EAAAwB,EACAI,EAAA,aAAA1E,GAAA,UAAAA,EACA,OAAS0C,EAAAnG,EAAKC,cAAemI,EAAA,EAAYlI,OAAAmI,EAAA,EAAAnI,CAAQ,CACjDG,UAAA,OACAgF,UAAenF,OAAAoI,EAAA,EAAApI,CAAIuG,EAAAjC,KAAAkC,EAAA1D,GAAAyD,EAAAzD,QAAA6D,GAAAJ,EAAAI,UACnBA,WACAS,SAAA,KACAiB,UAAAC,EACArB,QAhDA,SAAAsB,GACAtB,GACAA,EAAAsB,GAGAR,KAAAd,SACAc,EAAAd,QAAAsB,IA2CAvB,OAvCA,SAAAuB,GACAvB,GACAA,EAAAuB,GAGAR,KAAAf,QACAe,EAAAf,OAAAuB,IAkCApC,OACGkB,GAAAvE,EAAAwD,EAAAM,EAAwCX,EAAAnG,EAAKC,cAAA,QAAwBC,OAAAmI,EAAA,EAAAnI,CAAQ,CAChFoG,YACAtD,QAAAuD,EACAI,iBACAtB,UAAAoB,EAAAiC,MACA7B,WACAE,GAAAoB,GAAApB,EACAE,OACAhE,SAvCA,SAAAwF,GACA,IAAAzF,EAAAyF,EAAArF,OAAAJ,QAEAyE,GACAO,EAAAhF,GAGAC,GACAA,EAAAwF,EAAAzF,IAgCAoE,WACAf,IAAAW,EACAK,WACAC,WACA7D,OACAnB,SACGe,OA+GYsF,EAAAzI,OAAA0I,EAAA,EAAA1I,CAvOE,CACjBsE,KAAA,CACAqE,QAAA,GAEA7F,QAAA,GACA6D,SAAA,GACA6B,MAAA,CACAI,OAAA,UACAC,SAAA,WACAC,QAAA,EACAC,MAAA,OACAC,OAAA,OACAC,IAAA,EACAC,KAAA,EACAC,OAAA,EACAR,QAAA,IAwNgC,CAChC5B,KAAA,qBADe,CAEZf,YC3OYoD,EAAApJ,OAAAqJ,EAAA,GAAcpD,EAAAnG,EAAKC,cAAA,QAClCyB,EAAA,+FACC,wBCFc8H,EAAAtJ,OAAAqJ,EAAA,GAAcpD,EAAAnG,EAAKC,cAAA,QAClCyB,EAAA,wIACC,oBCFc+H,EAAAvJ,OAAAqJ,EAAA,GAAcpD,EAAAnG,EAAKC,cAAA,QAClCyB,EAAA,kGACC,kCCuDDgI,EAAyBvD,EAAAnG,EAAKC,cAAeuJ,EAAY,MACzDG,EAAkBxD,EAAAnG,EAAKC,cAAeqJ,EAAwB,MAC9DM,EAA+BzD,EAAAnG,EAAKC,cAAewJ,EAAyB,MACxEI,EAAW1D,EAAAnG,EAAKoG,WAAA,SAAArG,EAAAsG,GACpB,IAAAyD,EAAA/J,EAAAyG,YACAA,OAAA,IAAAsD,EAAAJ,EAAAI,EACArD,EAAA1G,EAAA0G,QACAsD,EAAAhK,EAAA6D,MACAA,OAAA,IAAAmG,EAAA,YAAAA,EACAC,EAAAjK,EAAA+G,KACAA,OAAA,IAAAkD,EAAAL,EAAAK,EACAC,EAAAlK,EAAAmK,cACAA,OAAA,IAAAD,KACAE,EAAApK,EAAAqK,kBACAA,OAAA,IAAAD,EAAAP,EAAAO,EACA9G,EAAAtD,EAAAsD,WACAkE,EAAcrH,OAAAsH,EAAA,EAAAtH,CAAwBH,EAAA,2FAEtC,OAASoG,EAAAnG,EAAKC,cAAe0I,EAAYzI,OAAAmI,EAAA,EAAAnI,CAAQ,CACjDuD,KAAA,WACA+C,YAAA0D,EAAAE,EAAA5D,EACAC,QAAA,CACAjC,KAAYtE,OAAAoI,EAAA,EAAApI,CAAIuG,EAAAjC,KAAAiC,EAAA,QAAA5C,OAAsC3D,OAAAmK,EAAA,EAAAnK,CAAU0D,KAAAsG,GAAAzD,EAAAyD,eAChElH,QAAAyD,EAAAzD,QACA6D,SAAAJ,EAAAI,UAEAjD,QACAP,WAAgBnD,OAAAmI,EAAA,EAAAnI,CAAQ,CACxBoK,qBAAAJ,GACK7G,GACLyD,KAAAoD,EAAAE,EAAAtD,EACAT,OACGkB,MA2FY5F,EAAA,EAAAzB,OAAA0I,EAAA,EAAA1I,CA9KE,SAAAqE,GACjB,OAEAC,KAAA,CACAZ,MAAAW,EAAAgG,QAAAC,KAAAC,WAIAzH,QAAA,GAGA6D,SAAA,GAGAqD,cAAA,GAGAQ,aAAA,CACAC,YAAA,CACA/G,MAAAW,EAAAgG,QAAAK,QAAAC,KACAC,UAAA,CACAC,gBAA2B7K,OAAA8K,EAAA,EAAA9K,CAAIqE,EAAAgG,QAAAK,QAAAC,KAAAtG,EAAAgG,QAAAU,OAAAC,cAE/BC,uBAAA,CACAJ,gBAAA,iBAIAK,aAAA,CACAxH,MAAAW,EAAAgG,QAAAU,OAAApE,WAKAwE,eAAA,CACAV,YAAA,CACA/G,MAAAW,EAAAgG,QAAAE,UAAAI,KACAC,UAAA,CACAC,gBAA2B7K,OAAA8K,EAAA,EAAA9K,CAAIqE,EAAAgG,QAAAE,UAAAI,KAAAtG,EAAAgG,QAAAU,OAAAC,cAE/BC,uBAAA,CACAJ,gBAAA,iBAIAK,aAAA,CACAxH,MAAAW,EAAAgG,QAAAU,OAAApE,aAgIgC,CAChCI,KAAA,eADe,CAEZ4C,qCC5LH,IAAArK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAA4E,EAAA3E,EAAA,KAEekC,EAAA,EAAAzB,OAAAkE,EAAA,GAAc1E,EAAAM,EAAKC,cAAA,QAClCyB,EAAA,kFACC,gNCYK2C,EAAWC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,CACJ8G,QAAQ,CACPC,UAAWhH,EAAMG,QAAQ,IAChB8G,aAAcjH,EAAMG,QAAQ,SAmFzB+G,UA9Ef,SAAsB1L,GAClB,IAAM6E,EAAQP,IACRpC,EAAWC,cACVwJ,EAAW3L,EAAX2L,QAHiBC,EAIY5L,EAAM6L,MAAMC,OAAzCC,EAJiBH,EAIjBG,SAAUC,EAJOJ,EAIPI,OAAQC,EAJDL,EAICK,QAEnBC,EAAe7J,kBAAQ8J,IAAoB,IAC3CC,EAAU5J,YAAY,SAAAC,GAAK,OAAIyJ,EAAazJ,EAAOuJ,KACnDK,EAAY7J,YAAY,SAAAC,GAAK,OAAI6J,YAAe7J,EAAOsJ,KACvDjH,EAAazC,kBAAQ0C,IAA2B,IAChDjD,EAAOU,YAAY,SAAAC,GAAK,OAAIqC,EAAWrC,KAEvC8J,EAAe/J,YAAYgK,KAZTC,EAcQ3E,oBAAS,GAdjB4E,EAAAvM,OAAAwM,EAAA,EAAAxM,CAAAsM,EAAA,GAcjBG,EAdiBF,EAAA,GAcPG,EAdOH,EAAA,GA2BxB,OAXAI,oBAAU,WACFT,EAGIA,GAAaD,IAEjBlK,EAAS6K,YAAcX,EAAQY,OAAQX,EAAUY,OACjDJ,GAAY,IALZlB,EAAQuB,KAAR,IAAApJ,OAAiBmI,EAAjB,KAAAnI,OAA4BkI,KAOjC,CAACK,EAAWD,IAEXQ,EAGAO,EAAAlN,EAAAC,cAACiF,EAAA,EAAD,CAAMvC,WAAS,EAAC0C,UAAWT,EAAMJ,KAAMY,UAAU,UAC7C8H,EAAAlN,EAAAC,cAACiF,EAAA,EAAD,CAAMvC,WAAS,EAACvC,MAAI,EAACgF,UAAU,SAASxC,GAAI,GAAIuK,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAE1DxL,EAAKyD,IAAI,SAAAhD,GAAS,IACPiD,EAAajD,EAAbiD,IAAK9B,EAAQnB,EAARmB,KACNM,EAAO,CAACwB,GACd,MAAY,WAAT9B,EAEKyJ,EAAAlN,EAAAC,cAACgG,EAAA,EAAD,CAAgBV,IAAKA,EAAK1D,KAAMkC,IAGvB,UAATN,EAEAyJ,EAAAlN,EAAAC,cAACqN,EAAA,EAAD,CAAe/H,IAAKA,EAAK1D,KAAMkC,IAI/BmJ,EAAAlN,EAAAC,cAACsN,EAAA,EAAD,CAAehI,IAAKA,EAAK1D,KAAMkC,EAAMjC,SAAU2B,OAMnEyJ,EAAAlN,EAAAC,cAACuN,EAAA,EAAD,CAAY5K,GAAI,GAAIgB,MAAM,YAAY6J,QAAQ,YAC1C3J,QAAO5D,OAAAwN,EAAA,EAAAxN,CAAAyN,EAAA3N,EAAA4N,KAAE,SAAAC,IAAA,OAAAF,EAAA3N,EAAA8N,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKC,IAAMC,KAAN,YAAAtK,OAAuBiI,EAAvB,WAA0C,CAC5CkB,KAAMV,IAHT,OAMDrK,EAASmM,YACL,gBACA,6BARHL,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAWD9L,EAASmM,YACL,gBAD2B,4BAAAvK,OAAAkK,EAAAM,MAX9B,wBAAAN,EAAAO,SAAAT,EAAA,kBADb,WA1Ba","file":"static/js/10.c60e9039.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Grid, Button} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormButton(props){\r\n    return(\r\n        <Grid item component={Button} {...props}>\r\n            {props.children}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFormButton.propTypes = {\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    xs: PropTypes.oneOf(['auto',true,1,2,3,4,5,6,7,8,9,10,11,12]).isRequired,\r\n    color: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    classes: PropTypes.any\r\n}\r\n\r\nexport default FormButton;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, {useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SetField} from '../redux/actions/documentActions';\r\nimport {selectCurrentDocumentValue} from '../redux/selectors/documentSelectors';\r\nimport {Grid, TextField, Typography, Checkbox, IconButton, Input} from '@material-ui/core';\r\nimport {Delete} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentField(props){\r\n    const {keys, category, arrayKeys, arrayValues} = props;\r\n    const dispatch = useDispatch();\r\n    const select = useMemo(selectCurrentDocumentValue, []);\r\n    const value = useSelector(state => select(state, keys));\r\n\r\n    return(\r\n        <Grid container item xs={12} alignItems=\"center\">\r\n            <Grid item component={Typography} xs={4}>{keys[keys.length - 1]}</Grid>\r\n            {\r\n                category === 'boolean' \r\n                ?   <Checkbox\r\n                        checked={value}\r\n                        onChange={(e) => dispatch(SetField(keys, e.target.checked))}\r\n                        value={keys[keys.length - 1]}\r\n                        inputProps={{\r\n                        'aria-label': 'primary checkbox',\r\n                        }}\r\n                    /> : null\r\n            }\r\n            {\r\n                category === 'integer' || category === 'float'\r\n                ?   <Grid item component={TextField} xs\r\n                        value={value}\r\n                        step={category === 'float' ? 'any' : 1}\r\n                        type='number'\r\n                        onChange={(e) => dispatch(SetField(keys, e.target.value))}\r\n                    /> : null\r\n            }\r\n            {\r\n                category === 'string' \r\n                ?   <Grid item component={TextField} xs\r\n                        value={value}\r\n                        multiline\r\n                        onChange={(e) => dispatch(SetField(keys, e.target.value))}\r\n                    /> : null\r\n            }\r\n            {\r\n                arrayKeys && arrayValues ? <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                    onClick={() => {\r\n                        const temp = [...arrayValues];\r\n                        temp.splice(keys[keys.length - 1], 1);\r\n                        dispatch(SetField(arrayKeys, temp));\r\n                    }}\r\n                    edge=\"end\"\r\n                >\r\n                    <Delete/>\r\n                </IconButton>: null\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nDocumentField.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    category: PropTypes.oneOf([\r\n        'integer', 'float', 'string', 'boolean'\r\n    ]).isRequired,\r\n    arrayKeys: PropTypes.array,\r\n    arrayValues: PropTypes.array\r\n}\r\n\r\nexport default DocumentField;","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, {useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, Typography, IconButton, makeStyles} from '@material-ui/core';\r\nimport {Delete} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {SetField} from '../redux/actions/documentActions';\r\nimport {selectCurrentDocumentKeys} from '../redux/selectors/documentSelectors';\r\nimport DocumentField from './DocumentField';\r\nimport DocumentArray from './DocumentArray';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n        marginLeft: theme.spacing(3)\r\n\t}\r\n}));\r\n\r\nfunction DocumentObject(props){\r\n    const style = useStyle();\r\n    const {keys, arrayValues, arrayKeys} = props;\r\n    const dispatch = useDispatch();\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const curKeys = useSelector(state => selectKeys(state, keys));\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container item xs={12} alignItems=\"center\">\r\n                <Grid item component={Typography} xs>\r\n                    {keys[keys.length - 1]}\r\n                </Grid>\r\n                {\r\n                    arrayKeys && arrayValues ? <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                        onClick={() => {\r\n                            const temp = [...arrayValues];\r\n                            temp.splice(keys[keys.length - 1], 1);\r\n                            dispatch(SetField(arrayKeys, temp));\r\n                        }}\r\n                        edge=\"end\"\r\n                    >\r\n                        <Delete/>\r\n                    </IconButton>: null\r\n                }\r\n            </Grid>\r\n            <Grid container item xs={12} direction=\"column\" className={style.root}>\r\n                {\r\n                    curKeys.map(value => {\r\n                        const {key, type} = value;\r\n                        const temp = [...keys, key];\r\n                        if(type === 'object'){\r\n                            return(\r\n                                <DocumentObject key={key} keys={temp}/>\r\n                            )\r\n                        }\r\n                        else if(type === 'array'){\r\n                            return(\r\n                                <DocumentArray key={key} keys={temp}/>\r\n                            )\r\n                        }else{\r\n                            return(\r\n                                <DocumentField key={key} keys={temp} category={type}/>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nDocumentObject.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    arrayKeys: PropTypes.array,\r\n    arrayValues: PropTypes.array\r\n}\r\n\r\nexport default DocumentObject;","import React, {useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, Typography, IconButton} from '@material-ui/core';\r\nimport {Delete, Add} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {SetField} from '../redux/actions/documentActions';\r\nimport {selectCurrentDocumentKeys, selectCurrentDocumentValue} from '../redux/selectors/documentSelectors';\r\nimport DocumentField from './DocumentField';\r\nimport DocumentObject from './DocumentObject';\r\n\r\nfunction DocumentArray(props){\r\n    const {keys, arrayValues, arrayKeys} = props;\r\n    const dispatch = useDispatch();\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const curKeys = useSelector(state => selectKeys(state, keys));\r\n    const selectValues = useMemo(selectCurrentDocumentValue, []);\r\n    const values = useSelector(state => selectValues(state, keys));\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container item xs={12} alignItems=\"center\">\r\n                <Grid item component={Typography} xs>\r\n                    {keys[keys.length - 1]}\r\n                </Grid>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label='Add new field'\r\n                    onClick={() => {\r\n                        const {type} = curKeys;\r\n                        let newValue = [];\r\n                        if(type === 'integer'){\r\n                            newValue = [...values, 0];\r\n                        }\r\n                        else if(type === 'float'){\r\n                            newValue = [...values, 0];\r\n                        }\r\n                        else if(type === 'string'){\r\n                            newValue = [...values, ''];\r\n                        }\r\n                        else if(type === 'boolean'){\r\n                            newValue = [...values, false];\r\n                        }\r\n                        else if(type === 'object'){\r\n                            newValue = [...values, {}];\r\n                        }\r\n                        else if(type == 'array'){    \r\n                            newValue = [...values, []];\r\n                        }\r\n                        dispatch(SetField(keys, newValue));\r\n                    }}\r\n                    edge=\"end\"\r\n                >\r\n                    <Add/>\r\n                </IconButton>\r\n                {\r\n                    arrayKeys && arrayValues ? <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                        onClick={() => {\r\n                            const temp = [...arrayValues];\r\n                            temp.splice(keys[keys.length - 1], 1);\r\n                            dispatch(SetField(arrayKeys, temp));\r\n                        }}\r\n                        edge=\"end\"\r\n                    >\r\n                        <Delete/>\r\n                    </IconButton>: null\r\n                }\r\n            </Grid>\r\n            {\r\n                values.map((value, index)=>{\r\n                    const {type} = curKeys;\r\n                    const temp = [...keys, index];\r\n                    if(type === 'object'){\r\n                        return(\r\n                            <DocumentObject key={index} keys={temp}\r\n                                arrayKeys={keys} arrayValues={values}/>\r\n                        )\r\n                    }\r\n                    else if(type === 'array'){\r\n                        return(\r\n                            <DocumentArray key={index} keys={temp}\r\n                                arrayKeys={keys} arrayValues={values}/>\r\n                        )\r\n                    }else{\r\n                        return(\r\n                            <DocumentField key={index} keys={temp} category={type} \r\n                                arrayKeys={keys} arrayValues={values}\r\n                            />\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nDocumentArray.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    arrayKeys: PropTypes.array,\r\n    arrayValues: PropTypes.array\r\n}\r\n\r\nexport default DocumentArray;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      checkedState = _React$useState[0],\n      setCheckedState = _React$useState[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, classNameProp, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), checked ? checkedIcon : icon, React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React, {useMemo, useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, makeStyles} from '@material-ui/core';\r\nimport FormButton from './FormButton';\r\nimport {ShowNotificationDialog} from '../redux/actions/globalActions';\r\n\r\nimport {selectDocument, selectCurrentDocumentKeys, selectCurrentDocumentData} from '../redux/selectors/documentSelectors';\r\nimport {GenerateField} from '../redux/actions/documentActions';\r\n\r\nimport DocumentObject from './DocumentObject';\r\nimport DocumentArray from './DocumentArray';\r\nimport DocumentField from './DocumentField';\r\n\r\nimport {selectEntityByName} from '../redux/selectors/entitySelectors';\r\nimport Axios from '../Axios';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\t'& > *':{\r\n\t\t\tmarginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5)\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction DocumentEdit(props){\r\n    const style = useStyle()\r\n    const dispatch = useDispatch();\r\n    const {history} = props;\r\n    const {document, entity, project} = props.match.params;\r\n\r\n    const selectEntity = useMemo(selectEntityByName, []);\r\n    const _entity = useSelector(state => selectEntity(state, entity));\r\n    const _document = useSelector(state => selectDocument(state, document));\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const keys = useSelector(state => selectKeys(state));\r\n\r\n    const currentValue = useSelector(selectCurrentDocumentData);\r\n\r\n    const [generate, setGenerate] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(!_document){\r\n            history.push(`/${project}/${entity}`);\r\n        }\r\n        else if(_document && _entity){\r\n            // _document exist then generate currentDocument topology \r\n            dispatch(GenerateField(_entity.schema, _document.data));\r\n            setGenerate(true);\r\n        }\r\n    }, [_document, _entity]);\r\n\r\n    if(!generate) return null;\r\n    \r\n    return(\r\n        <Grid container className={style.root} direction=\"column\">\r\n            <Grid container item direction=\"column\" xs={12} sm={6} md={8} lg={6}>\r\n                {\r\n                    keys.map(value => {\r\n                        const {key, type} = value;\r\n                        const temp = [key];\r\n                        if(type === 'object'){\r\n                            return(\r\n                                <DocumentObject key={key} keys={temp}/>\r\n                            )\r\n                        }\r\n                        else if(type === 'array'){\r\n                            return(\r\n                                <DocumentArray key={key} keys={temp}/>\r\n                            )\r\n                        }else{\r\n                            return(\r\n                                <DocumentField key={key} keys={temp} category={type}/>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </Grid>\r\n            <FormButton xs={12} color=\"secondary\" variant=\"contained\"\r\n                onClick={async() => {\r\n                    try{\r\n                        await Axios.post(`document/${document}/modify`, {\r\n                            data: currentValue\r\n                        });\r\n\r\n                        dispatch(ShowNotificationDialog(\r\n                            'Edit Document', \r\n                            'Succeed editing document'\r\n                        ));\r\n                    }catch(err){\r\n                        dispatch(ShowNotificationDialog(\r\n                            'Edit Document', \r\n                            `Failed editing document, ${err}`\r\n                        ));\r\n                    }\r\n                }}\r\n            >\r\n                Modify\r\n            </FormButton>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DocumentEdit;"],"sourceRoot":""}