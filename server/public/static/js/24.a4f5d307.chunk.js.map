{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Add.js","components/Entity.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","Object","a","createElement","d","DialogCustom","lazy","Promise","all","e","then","bind","columns","title","field","searchable","hidden","export","render","rowData","id","projectName","entityName","react__WEBPACK_IMPORTED_MODULE_3___default","react_router_dom__WEBPACK_IMPORTED_MODULE_16__","style","color","to","concat","type","Entity","props","dispatch","useDispatch","_props$match$params","match","params","project","entity","status","useSelector","state","authStatus","_useState","useState","_useState2","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","authorized","setAuthorized","notification","_useState3","_useState4","redirect","setRedirect","select","useMemo","selectDocumentsInEntityByName","documents","_useState5","_useState6","datas","setDatas","useEffect","FIRST_BOOT","NOT_AUTHORIZED","map","value","index","#","createdAt","created","updatedAt","updated","react_router_dom__WEBPACK_IMPORTED_MODULE_17__","Fragment","category","content","dialogProps","open","onClose","HideNotificationDialog","material_table__WEBPACK_IMPORTED_MODULE_5___default","data","actions","icon","_material_ui_icons__WEBPACK_IMPORTED_MODULE_6__","tooltip","isFreeAction","onClick","_material_ui_icons__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__","_onClick","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","rowDatas","ids","wrap","_context","prev","next","Axios","delete","sent","ShowNotificationDialog","t0","stop","_x","_x2","apply","this","arguments","icons","Search","ResetSearch","Clear","FirstPage","PreviousPage","ArrowBack","NextPage","ArrowForward","LastPage","options","pageSize","pageSizeOptions","search","selection","actionsColumnIndex"],"mappings":"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","file":"static/js/24.a4f5d307.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, {useState, useEffect, useMemo, lazy} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport {Search, Clear, ArrowForward, ArrowBack, FirstPage, LastPage, DeleteForever, Add, Create} from '@material-ui/icons'\r\nimport {FIRST_BOOT, NOT_AUTHORIZED} from '../redux/actions/authorizationActions';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {selectDocumentsInEntityByName} from '../redux/selectors/documentSelectors';\r\nimport Axios from '../Axios';\r\n\r\nimport {ShowNotificationDialog, HideNotificationDialog} from '../redux/actions/globalActions';\r\n\r\nconst DialogCustom = lazy(() => import('./DialogCustom'));\r\n\r\nconst columns = [\r\n    {\r\n        title: \"#\", \r\n        field: \"#\", \r\n        searchable: false\r\n    },\r\n    {\r\n        field: \"projectName\", \r\n        searchable: false, \r\n        hidden: true, \r\n        export: false\r\n    },\r\n    {\r\n        field: \"entityName\", \r\n        searchable: false, \r\n        hidden: true, \r\n        export: false\r\n    },\r\n    {\r\n        title: \"ID\", \r\n        field: \"id\", \r\n        searchable: false, \r\n        render: (rowData)=>{\r\n            const {id, projectName, entityName} = rowData;\r\n            return(\r\n                <Link style={{color: 'black'}} to={`/${projectName}/${entityName}/${id}`}>\r\n                    {id}\r\n                </Link>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        title: \"Created At\", \r\n        field: \"createdAt\", \r\n        searchable: false,\r\n        type: 'datetime'\r\n    },\r\n    {   \r\n        title: \"Updated At\", \r\n        field: \"updatedAt\", \r\n        searchable: false,\r\n        type: 'datetime'\r\n    }\r\n]\r\n\r\n// fetch authStatus from redux store and setAuthorized(true) if creator, manager, user\r\n// Any actions in Entity will affect Document and need to be signin\r\nfunction Entity(props){\r\n    const dispatch = useDispatch();\r\n    const {project, entity} = props.match.params;\r\n    \r\n    const status = useSelector(state=>state.authStatus);\r\n    const [authorized, setAuthorized] = useState(false);\r\n\r\n    const notification = useSelector(state => state.notification);\r\n\r\n    const [redirect, setRedirect] = useState('');\r\n    const select = useMemo(selectDocumentsInEntityByName, []);\r\n    const documents = useSelector(state => select(state, entity));\r\n\r\n    const [datas, setDatas] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        if(status !== FIRST_BOOT && status !== NOT_AUTHORIZED) setAuthorized(true);\r\n        else setAuthorized(false);\r\n    }, [status]);\r\n\r\n    useEffect(()=>{\r\n        if(documents.documents){\r\n            setDatas(documents.documents.map((value, index) => ({\r\n                \"#\": (index+1),\r\n                id: value.id,\r\n                projectName: project,\r\n                entityName: entity,\r\n                createdAt: value.created,\r\n                updatedAt: value.updated\r\n            })));\r\n        }\r\n    }, [documents]);\r\n\r\n    // view all documents within entity and their attribute\r\n    // document id\r\n    // document last modified\r\n    if(redirect === 'add') return <Redirect to={`/${project}/${entity}/add`}/>;\r\n    else if(redirect === 'schema') return <Redirect to={`/${project}/${entity}/schema`}/>;\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {authorized ? \r\n                <DialogCustom\r\n                    category=\"notification\" \r\n                    title={notification.title} \r\n                    content={notification.content}\r\n                    dialogProps={{\r\n                        open: notification.title !== '' && notification.content !== '',\r\n                        onClose: ()=>dispatch(HideNotificationDialog())\r\n                    }}\r\n                /> : null\r\n            }\r\n            <MaterialTable \r\n                title=\"Documents\" \r\n                columns={columns} \r\n                data={datas}\r\n                actions={authorized ? [\r\n                    {\r\n                        icon: ()=><Add/>,\r\n                        tooltip: \"Add Document\",\r\n                        isFreeAction: true,\r\n                        onClick: (e)=>{\r\n                            // go to document page to create\r\n                            setRedirect('add');\r\n                        }\r\n                    },\r\n                    {\r\n                        icon: ()=><Create/>,\r\n                        tooltip: \"Edit Schema\",\r\n                        isFreeAction: true,\r\n                        onClick: (e)=>{\r\n                            // go to document schema page to edit\r\n                            setRedirect('schema');\r\n                        }\r\n                    },\r\n                    {\r\n                        icon: ()=><DeleteForever/>, \r\n                        tooltip: \"Delete Documents\",\r\n                        onClick: async(e, rowDatas)=>{\r\n                            // get selected row and delete batch\r\n                            const ids = rowDatas.map(value => value.id);\r\n                            try{\r\n                                const res = await Axios.delete('document', {\r\n                                    data: {ids: ids}\r\n                                });\r\n                                dispatch(ShowNotificationDialog(\r\n                                    'Delete Documents',\r\n                                    'Succeed deleting documents'\r\n                                ));\r\n                            }catch(err){\r\n                                dispatch(ShowNotificationDialog(\r\n                                    'Delete Documents',\r\n                                    `Failed deleting documents, ${err}`\r\n                                ));\r\n                            }\r\n                        }\r\n                    }\r\n                ]: []}\r\n                icons={{\r\n                    Search: Search,\r\n                    ResetSearch: Clear,\r\n                    FirstPage: FirstPage,\r\n                    PreviousPage: ArrowBack,\r\n                    NextPage: ArrowForward,\r\n                    LastPage: LastPage\r\n                }}\r\n                options={{\r\n                    pageSize: 100,\r\n                    pageSizeOptions: [100,500,1000],\r\n                    search: true,\r\n                    selection: true,\r\n                    actionsColumnIndex: -1\r\n                }}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Entity;"],"sourceRoot":""}