{"version":3,"sources":["../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","components/OverviewCard.js","components/Overview.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","Avatar","a","forwardRef","props","ref","alt","childrenProp","children","childrenClassNameProp","childrenClassName","classes","classNameProp","className","_props$component","component","Component","imgProps","sizes","src","srcSet","other","Object","img","createElement","isValidElement","cloneElement","root","system","colorDefault","__webpack_exports__","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","textAlign","objectFit","name","Card_Card","react_default","_props$raised","raised","objectWithoutProperties","Paper","esm_extends","clsx_m","elevation","esm_Card_Card","withStyles","CardContent_CardContent","esm_CardContent_CardContent","padding","&:last-child","paddingBottom","CardHeader_CardHeader","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","Typography","variant","content","esm_CardHeader_CardHeader","flex","marginRight","alignSelf","marginTop","MEDIA_COMPONENTS","CardMedia_CardMedia","image","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","undefined","esm_CardMedia_CardMedia","backgroundSize","backgroundRepeat","backgroundPosition","OverviewCardAction","lazy","e","then","bind","Index","_ref","index","Title","_ref2","useStyle","makeStyles","spacing","paddingTop","horizontal","paddingLeft","paddingRight","OverviewCard","id","updated","created","publicKey","authorized","Grid","item","container","xs","justify","Box","Card","bgcolor","my","OverviewCard_Index","OverviewCard_Title","CardMedia","TextField","value","inputProps","onClick","target","select","setSelectionRange","document","execCommand","alert","OverviewAuthorized","Promise","all","Overview","status","useSelector","state","authStatus","projects","selectAllProjects","_useState","useState","_useState2","slicedToArray","setAuthorized","useEffect","CREATOR","map","components_OverviewCard","assign","key"],"mappings":"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","file":"static/js/20.b7b9dc9c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      childrenClassNameProp = props.childrenClassName,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"childrenClassName\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\"]);\n\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenClassNameProp && React.isValidElement(childrenProp)) {\n    children = React.cloneElement(childrenProp, {\n      className: clsx(childrenClassNameProp, childrenProp.props.className)\n    });\n  } else {\n    children = childrenProp;\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classNameProp, !img && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   * The className of the child element.\n   * Used by Chip and ListItemIcon to style the Avatar icon.\n   */\n  childrenClassName: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classNameProp),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport warning from 'warning';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%',\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  process.env.NODE_ENV !== \"production\" ? warning('children' in other || Boolean(image || src), 'Material-UI: either `children`, `image` or `src` prop must be specified.') : void 0;\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React, {lazy} from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst OverviewCardAction = lazy(() => import('./OverviewCardAction'));\r\n\r\nconst Index = ({index}) => <Avatar>{index}</Avatar>;\r\nconst Title = ({name}) => <Typography variant=\"h4\" style={{ color: \"black\" }}>{name}</Typography>\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        paddingBottom: theme.spacing(0.5),\r\n        paddingTop: theme.spacing(0.5)\r\n    },\r\n    horizontal: {\r\n        paddingLeft: theme.spacing(0.5),\r\n        paddingRight: theme.spacing(0.5)\r\n    }\r\n}));\r\n\r\n// Overview Card actions will only available for creator\r\n// actions consist of renaming and deleting Project\r\n// and those action need Creator Authorization\r\nfunction OverviewCard(props){\r\n    const {name, index, id, img, updated, created, publicKey, authorized} = props;\r\n    const style = useStyle();\r\n    \r\n    return(\r\n        <Grid item container xs={12} justify=\"center\">\r\n            <Box component={Card} bgcolor='#fafafa' my={1.5} width={1} elevation={3}>\r\n                <CardHeader \r\n                    avatar={<Index index={index}/>} \r\n                    title={<Title name={name}/>}\r\n                    action={authorized \r\n                        ? <OverviewCardAction id={id} name={name}/> \r\n                        : null\r\n                    }\r\n                />\r\n                <Box component={CardMedia} height={250} title={name}\r\n                    image={img}\r\n                />\r\n                <CardContent component={Grid} container>\r\n                    <Grid xs={12} container item \r\n                        alignItems=\"center\" className={style.root}\r\n                    >\r\n                        <Grid component={Typography} item xs={\"auto\"}>\r\n                            Public Key:\r\n                        </Grid>\r\n                        <Grid component={TextField} item xs className={style.horizontal}\r\n                            value={publicKey} variant=\"outlined\"\r\n                            inputProps={{\r\n                                onClick: (e) => {\r\n                                    e.target.select();\r\n                                    e.target.setSelectionRange(0, 99999);\r\n                                    document.execCommand(\"copy\");\r\n                                    alert(\"Copied Public Key\");\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={12} item component={Typography} className={style.root}>\r\n                        {`Created At: ${created}`}\r\n                    </Grid>\r\n                    <Grid xs={12} item component={Typography} className={style.root}>\r\n                        {`Updated At: ${updated}`}\r\n                    </Grid>\r\n                </CardContent>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OverviewCard;","import React, {useEffect, useState, lazy} from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport OverviewCard from './OverviewCard';\r\nimport {CREATOR} from '../redux/actions/authorizationActions';\r\nimport {selectAllProjects} from '../redux/selectors/projectSelectors';\r\n\r\nconst OverviewAuthorized = lazy(() => import('./OverviewAuthorized'));\r\n\r\n// fetch authStatus from redux store and setAuthorized(true) if creator\r\n// Any actions in Overview will affect Project and need Creator level Authorization\r\nfunction Overview(props){\r\n    const status = useSelector(state=>state.authStatus);\r\n    const projects = useSelector(selectAllProjects);\r\n    const [authorized, setAuthorized] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(status === CREATOR) setAuthorized(true);\r\n        else setAuthorized(false);\r\n    }, [status]);\r\n\r\n    // view all projects within CMS and their attribute\r\n    // project name\r\n    // project thumbnail\r\n    // project last modified\r\n    // how many entity\r\n    // list of entity and their last modified\r\n\r\n    return(\r\n        <Grid container>\r\n            {authorized ? <OverviewAuthorized/> : null}\r\n            {\r\n                projects.map((value, index)=>{\r\n                    return(\r\n                        <OverviewCard key={value.id} index={index+1} \r\n                            {...value} authorized={authorized}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Overview;"],"sourceRoot":""}