{"version":3,"sources":["components/FormButton.js","../node_modules/@material-ui/core/esm/Button/Button.js","components/DocumentSaveButton.js","components/DocumentCancelButton.js","components/DocumentAddButton.js","components/DocumentSchemaAuthorized.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","FormButton","props","a","createElement","Object","assign","item","component","Button","children","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_ButtonBase__WEBPACK_IMPORTED_MODULE_7__","_utils_helpers__WEBPACK_IMPORTED_MODULE_8__","forwardRef","ref","classes","classNameProp","className","_props$color","color","_props$component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","_props$type","type","_props$variant","variant","other","text","outlined","contained","primary","secondary","root","textPrimary","textSecondary","outlinedPrimary","outlinedSecondary","containedPrimary","containedSecondary","concat","inherit","colorInherit","focusRipple","focusVisible","label","__webpack_exports__","theme","lineHeight","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","transition","transitions","create","duration","short","&:hover","textDecoration","backgroundColor","action","hoverOpacity","@media (hover: none)","&$disabled","width","display","alignItems","justifyContent","main","border","getContrastText","grey","boxShadow","shadows","&$focusVisible","&:active","disabledBackground","A100","contrastText","dark","borderColor","sizeSmall","fontSize","pxToRem","sizeLarge","name","DocumentSaveButton","save","react_default","xs","onClick","DocumentCancelButton","cancel","DocumentAddButton","add","useStyle","makeStyles","& > *","marginTop","spacing","marginBottom","DocumentSchemaAuthorized","style","dispatch","useDispatch","history","id","_props$match$params","match","params","entity","project","currentDocumentSchema","useSelector","selectCurrentDocumentType","_useState","useState","_useState2","slicedToArray","setAdd","Grid","container","justify","DocumentAddField","keys","components_DocumentAddButton","components_DocumentCancelButton","push","components_DocumentSaveButton","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Axios","post","schema","ShowNotificationDialog","t0","stop"],"mappings":"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","file":"static/js/21.7718cf2e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Grid, Button} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormButton(props){\r\n    return(\r\n        <Grid item component={Button} {...props}>\r\n            {props.children}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFormButton.propTypes = {\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    xs: PropTypes.oneOf(['auto',true,1,2,3,4,5,6,7,8,9,10,11,12]).isRequired,\r\n    color: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    classes: PropTypes.any\r\n}\r\n\r\nexport default FormButton;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      lineHeight: 1.75\n    }, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 16px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: '8px 24px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"type\", \"variant\"]);\n\n  var text = variant === 'text';\n  var outlined = variant === 'outlined';\n  var contained = variant === 'contained';\n  var primary = color === 'primary';\n  var secondary = color === 'secondary';\n  var className = clsx(classes.root, classNameProp, text && [classes.text, primary && classes.textPrimary, secondary && classes.textSecondary], outlined && [classes.outlined, primary && classes.outlinedPrimary, secondary && classes.outlinedSecondary], contained && [classes.contained, primary && classes.containedPrimary, secondary && classes.containedSecondary], size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, fullWidth && classes.fullWidth, {\n    inherit: classes.colorInherit\n  }[color]);\n  return React.createElement(ButtonBase, _extends({\n    className: className,\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React from 'react';\r\nimport FormButton from './FormButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentSaveButton(props){\r\n    const {save} = props;\r\n\r\n    return(\r\n        <FormButton xs={5} onClick={()=>save()} \r\n            variant=\"contained\" color=\"secondary\"\r\n        >\r\n            Save Schema\r\n        </FormButton>\r\n    )\r\n}\r\n\r\nDocumentSaveButton.propTypes = {\r\n    save: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DocumentSaveButton;","import React from 'react';\r\nimport FormButton from './FormButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentCancelButton(props){\r\n    const {cancel} = props;\r\n\r\n    return(\r\n        <FormButton xs={5} onClick={()=>cancel()} color=\"error\" variant=\"contained\">\r\n            Cancel\r\n        </FormButton>\r\n    )\r\n}\r\n\r\nDocumentCancelButton.propTypes = {\r\n    cancel: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DocumentCancelButton;","import React from 'react';\r\nimport FormButton from './FormButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentAddButton(props){\r\n    const {add} = props;\r\n\r\n    return(\r\n        <FormButton xs={10} onClick={()=>add()} variant=\"contained\">\r\n            New Field\r\n        </FormButton>\r\n    )\r\n}\r\n\r\nDocumentAddButton.propTypes = {\r\n    add: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DocumentAddButton;","import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, makeStyles} from '@material-ui/core';\r\n\r\nimport {selectCurrentDocumentType} from '../redux/selectors/documentSelectors';\r\nimport {ShowNotificationDialog} from '../redux/actions/globalActions';\r\n\r\nimport DocumentAddField from './DocumentAddField';\r\nimport DocumentSaveButton from './DocumentSaveButton';\r\nimport DocumentCancelButton from './DocumentCancelButton';\r\nimport DocumentAddButton from './DocumentAddButton';\r\nimport Axios from '../Axios';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\t'& > *':{\r\n\t\t\tmarginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5)\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction DocumentSchemaAuthorized(props){\r\n    const style = useStyle();\r\n    const dispatch = useDispatch();\r\n    const {history, id} = props;\r\n    const {entity, project} = props.match.params;\r\n    const currentDocumentSchema = useSelector(selectCurrentDocumentType);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    return(\r\n        <Grid container item xs={12} justify=\"space-evenly\" className={style.root}>\r\n            {\r\n                add \r\n                ? <DocumentAddField keys={[]} cancel={() => setAdd(false)}/> \r\n                : null\r\n            }\r\n            <DocumentAddButton add={() => setAdd(true)}/>\r\n            <DocumentCancelButton cancel={() => history.push(`/${project}/${entity}`)}/>\r\n            <DocumentSaveButton save={async() => {\r\n                try{\r\n                    await Axios.post(`entity/${id}/schema`, {\r\n                        schema: currentDocumentSchema\r\n                    });\r\n                    dispatch(\r\n                        ShowNotificationDialog(\r\n                            'Save Schema', \r\n                            'Succeed saving schema'\r\n                        )\r\n                    );\r\n                }catch(err){\r\n                    dispatch(\r\n                        ShowNotificationDialog(\r\n                            'Save Schema', \r\n                            `Fail saving schema, ${err}`\r\n                        )\r\n                    );\r\n                }\r\n            }}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DocumentSchemaAuthorized;"],"sourceRoot":""}