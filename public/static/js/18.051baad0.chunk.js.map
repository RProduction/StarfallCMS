{"version":3,"sources":["components/DialogCustomForm.js","components/DialogCustom.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","components/ProjectAuthorized.js"],"names":["DialogCustomForm","props","request","btn","category","_props$values","values","name","newName","confirmName","errors","touched","handleChange","isValid","setFieldTouched","change","e","persist","react_default","a","createElement","Grid","container","component","spacing","onSubmit","preventDefault","TextField","item","xs","id","label","onChange","bind","value","helperText","error","Boolean","Fragment","Button","type","disabled","size","addSchema","Yup","required","matches","message","excludeEmptyString","min","max","deleteSchema","oneOf","renameSchema","initialAdd","initialDelete","targetName","initialRename","DialogCustom","title","content","dialogProps","Dialog","DialogTitle","DialogContent","DialogContentText","formik_esm","validationSchema","initialValues","render","propsRender","components_DialogCustomForm","Object","assign","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_6__","forwardRef","ref","children","classes","className","_props$disableTypogra","disableTypography","other","root","variant","__webpack_exports__","margin","padding","flex","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_styles_withStyles__WEBPACK_IMPORTED_MODULE_3__","_Typography__WEBPACK_IMPORTED_MODULE_4__","color","marginBottom","ProjectAuthorized","dispatch","useDispatch","target","useSelector","state","dialogType","dialog","notification","_DialogCustom__WEBPACK_IMPORTED_MODULE_5__","open","ADD_DIALOG","onClose","HideDialog","_ref2","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","_ref","wrap","_context","prev","next","Axios","post","concat","ShowNotificationDialog","t0","stop","_x","apply","this","arguments","DELETE_DIALOG","_ref4","_callee2","_ref3","_context2","delete","_x2","RENAME_DIALOG","_ref6","_callee3","_ref5","_context3","_x3","HideNotificationDialog"],"mappings":"0MA2EeA,MAxEf,SAA0BC,GAAM,IAExBC,EASAD,EATAC,QACAC,EAQAF,EARAE,IACAC,EAOAH,EAPAG,SAJwBC,EAWxBJ,EANNK,OAAUC,EALoBF,EAKpBE,KAAMC,EALcH,EAKdG,QAASC,EALKJ,EAKLI,YACzBC,EAKMT,EALNS,OACAC,EAIMV,EAJNU,QACAC,EAGMX,EAHNW,aACAC,EAEMZ,EAFNY,QACAC,EACMb,EADNa,gBAGQC,EAAS,SAACR,EAAMS,GACxBA,EAAEC,UACFL,EAAaI,GACbF,EAAgBP,GAAM,GAAM,IAG7B,OACOW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,QAAS,EACtCC,SAAU,SAACT,GACPA,EAAEU,iBACFxB,EAAQ,CACJK,KAAMA,EACNC,QAASA,EACTC,YAAaA,MAIP,QAAbL,EACKc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,UAAWI,IAAWC,MAAI,EAACC,GAAI,GACnCC,GAAG,OAAOvB,KAAK,OAAOwB,MAAM,OAC5BC,SAAUjB,EAAOkB,KAAK,KAAM,QAC5BC,MAAO3B,EACP4B,WAAYxB,EAAQJ,KAAOG,EAAOH,KAAO,GACzC6B,MAAOzB,EAAQJ,MAAQ8B,QAAQ3B,EAAOH,QACxB,WAAbH,EACHc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,UAAWI,IAAWC,MAAI,EAACC,GAAI,GACnCC,GAAG,cAAcvB,KAAK,cAAcwB,MAAM,eAC1CC,SAAUjB,EAAOkB,KAAK,KAAM,eAC5BC,MAAOzB,EACP0B,WAAYxB,EAAQF,YAAcC,EAAOD,YAAc,GACvD2B,MAAOzB,EAAQF,aAAe4B,QAAQ3B,EAAOD,eAC/B,WAAbL,EACHc,EAAAC,EAAAC,cAACF,EAAAC,EAAMmB,SAAP,KACEpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,UAAWI,IAAWC,MAAI,EAACC,GAAI,GACjCC,GAAG,UAAUvB,KAAK,UAAUwB,MAAM,WAClCC,SAAUjB,EAAOkB,KAAK,KAAM,WAC5BC,MAAO1B,EACP2B,WAAYxB,EAAQH,QAAUE,EAAOF,QAAU,GAC/C4B,MAAOzB,EAAQH,SAAW6B,QAAQ3B,EAAOF,WAE7CU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,UAAWI,IAAWC,MAAI,EAACC,GAAI,GACjCC,GAAG,cAAcvB,KAAK,cAAcwB,MAAM,eAC1CC,SAAUjB,EAAOkB,KAAK,KAAM,eAC5BC,MAAOzB,EACP0B,WAAYxB,EAAQF,YAAcC,EAAOD,YAAc,GACvD2B,MAAOzB,EAAQF,aAAe4B,QAAQ3B,EAAOD,gBAEjC,KAExBS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIN,UAAWgB,IAC1BC,KAAK,SAASC,UAAW5B,EACzB6B,KAAK,SAEJvC,KC9DXwC,EAAYC,SAAW,CAC5BrC,KAAMqC,WAAaC,SAAS,cAC3BC,QAAQ,kBAAmB,CAC3BC,QAAS,8CACTC,oBAAoB,IAClBC,IAAI,EAAG,kBAAkBC,IAAI,GAAI,mBAG/BC,EAAeP,SAAW,CAC5BrC,KAAMqC,WACTnC,YAAamC,WAAaC,SAAS,iBAClCC,QAAQ,gBAAiB,CACzBC,QAAS,8CACTC,oBAAoB,IAClBI,MAAM,CAACR,MAAQ,SAAU,iCAGvBS,EAAeT,SAAW,CAC5BrC,KAAMqC,WACTnC,YAAamC,WAAaC,SAAS,iBAClCO,MAAM,CAACR,MAAQ,SAAU,+BACvBpC,QAASoC,WAAaC,SAAS,kBACjCC,QAAQ,kBAAmB,CAC3BC,QAAS,8CACTC,oBAAoB,IACfC,IAAI,EAAG,sBAAsBC,IAAI,GAAI,uBAGtCI,EAAa,CACf/C,KAAM,IAGJgD,EAAgB,SAAAC,GAAU,MAAK,CACjCjD,KAAMiD,EACN/C,YAAa,KAGXgD,EAAgB,SAAAD,GAAU,MAAK,CACjCjD,KAAMiD,EACN/C,YAAa,GACbD,QAAS,KAgEEkD,UA5Df,SAAsBzD,GAAM,IACjB0D,EAAqD1D,EAArD0D,MAAOC,EAA8C3D,EAA9C2D,QAASJ,EAAqCvD,EAArCuD,WAAYpD,EAAyBH,EAAzBG,SAAUyD,EAAe5D,EAAf4D,YAE7C,OACI3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAWD,EACR3C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAajC,GAAG,gBACX6B,GAELzC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACkB,QAAb5D,GAAmC,WAAbA,GAAsC,WAAbA,EAC1Cc,EAAAC,EAAAC,cAACF,EAAAC,EAAMmB,SAAP,KACgB,WAAblC,EACOc,EAAAC,EAAAC,cAACF,EAAAC,EAAMmB,SAAP,KACIpB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACKL,GAEL1C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,0DAIN,KAEN/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACIC,iBAA+B,QAAb/D,EACZuC,EAAyB,WAAbvC,EACZiD,EAA4B,WAAbjD,EACf+C,EAAe,GAErBiB,cAA4B,QAAbhE,EACTkD,EAA0B,WAAblD,EACbqD,EAAcD,GAA2B,WAAbpD,EAC5BmD,EAAcC,GAAc,GAElCa,OAAQ,SAACC,GAAD,OAAepD,EAAAC,EAAAC,cAACmD,EAADC,OAAAC,OAAA,GACfxE,EACAqE,QAGiB,iBAAblE,EAClBc,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACGL,GACkB,0CC5F3C,IAAAc,EAAAC,EAAA,GAAAC,EAAAD,EAAA,IAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAAI,EAAAF,GAAAG,GAAAL,EAAA,GAAAA,EAAA,MAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAeAZ,EAAkBe,EAAA3D,EAAKgE,WAAA,SAAAlF,EAAAmF,GACvB,IAAAC,EAAApF,EAAAoF,SACAC,EAAArF,EAAAqF,QACAC,EAAAtF,EAAAsF,UACAC,EAAAvF,EAAAwF,kBACAA,OAAA,IAAAD,KACAE,EAAclB,OAAAI,EAAA,EAAAJ,CAAwBvE,EAAA,wDAEtC,OAAS6E,EAAA3D,EAAKC,cAAA,MAAsBoD,OAAAE,EAAA,EAAAF,CAAQ,CAC5Ce,UAAef,OAAAQ,EAAA,EAAAR,CAAIc,EAAAK,KAAAJ,GACnBH,OACGM,GAAAD,EAAAJ,EAAyCP,EAAA3D,EAAKC,cAAe8D,EAAA,EAAU,CAC1E3D,UAAA,KACAqE,QAAA,MACGP,MAyBYQ,EAAA,EAAArB,OAAAS,EAAA,EAAAT,CA/CR,CAEPmB,KAAA,CACAG,OAAA,EACAC,QAAA,YACAC,KAAA,aA0CyB,CACzBzF,KAAA,kBADe,CAEdwD,qCCxDD,IAAAW,EAAAC,EAAA,GAAAsB,EAAAtB,EAAA,GAAAuB,EAAAvB,EAAAI,EAAAkB,GAAAE,GAAAxB,EAAA,GAAAA,EAAA,MAAAyB,EAAAzB,EAAA,KAWAV,EAAwBiC,EAAA/E,EAAKgE,WAAA,SAAAlF,EAAAmF,GAC7B,OAASc,EAAA/E,EAAKC,cAAegF,EAAA,EAAY5B,OAAAE,EAAA,EAAAF,CAAQ,CACjDjD,UAAA,IACAqE,QAAA,QACAS,MAAA,gBACAjB,OACGnF,MAcY4F,EAAA,EAAArB,OAAA2B,EAAA,EAAA3B,CA1BR,CAEPmB,KAAA,CACAW,aAAA,KAuByB,CACzB/F,KAAA,wBADe,CAEd0D,0HC8EcsC,UAvGf,SAA2BtG,GACvB,IAAMuG,EAAWC,cACXC,EAASC,YAAY,SAAAC,GAAK,OAAIA,EAAMF,SACpCG,EAAaF,YAAY,SAAAC,GAAK,OAAIA,EAAME,SACxCC,EAAeJ,YAAY,SAAAC,GAAK,OAAIA,EAAMG,eAEhD,OACIjC,EAAA3D,EAAAC,cAAC0D,EAAA3D,EAAMmB,SAAP,KACIwC,EAAA3D,EAAAC,cAAC4F,EAAA,QAAD,CACInD,YAAa,CACToD,KAAMJ,IAAeK,IACrBC,QAAS,kBAAMX,EAASY,iBAE5BhH,SAAS,MACTuD,MAAM,iBACNxD,IAAI,iBACJD,QAAO,eAAAmH,EAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAApG,EAAAqG,KAAE,SAAAC,EAAAC,GAAA,IAAAnH,EAAA,OAAAgH,EAAApG,EAAAwG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAOvH,EAAPmH,EAAOnH,KAAPqH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKC,IAAMC,KAAN,UAAAC,OAAqBvB,EAAO5E,IAAM,CACpCvB,KAAMA,IAHT,OAKDiG,EAASY,eACTZ,EAAS0B,YAAsB,kBAAAD,OACT1H,GADS,6BAAA0H,OAEE1H,KARhCqH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAWDpB,EAASY,eACTZ,EAAS0B,YAAsB,kBAAAD,OACT1H,GADS,0BAAA0H,OAED1H,EAFC,aAAA0H,OAAAL,EAAAO,MAZ9B,yBAAAP,EAAAQ,SAAAX,EAAA,iBAAF,gBAAAY,GAAA,OAAAhB,EAAAiB,MAAAC,KAAAC,YAAA,KAmBX1D,EAAA3D,EAAAC,cAAC4F,EAAA,QAAD,CACInD,YAAa,CACToD,KAAMJ,IAAe4B,IACrBtB,QAAS,kBAAMX,EAASY,iBAE5BhH,SAAS,SACTuD,MAAK,uBAAAsE,OAAyBvB,EAAOnG,KAAhC,KACLJ,IAAG,uBAAA8H,OAAyBvB,EAAOnG,KAAhC,KACHqD,QAAO,wCAAAqE,OAA0CvB,EAAOnG,KAAjD,4BACPiD,WAAYkD,EAAOnG,KACnBL,QAAO,eAAAwI,EAAAlE,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAApG,EAAAqG,KAAE,SAAAmB,EAAAC,GAAA,IAAArI,EAAA,OAAAgH,EAAApG,EAAAwG,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAOvH,EAAPqI,EAAOrI,KAAPsI,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAEKC,IAAMe,OAAN,UAAAb,OAAuBvB,EAAO5E,KAFnC,OAGD0E,EAASY,eACTZ,EAAS0B,YAAsB,iBAAAD,OACV1H,GADU,2BAAA0H,OAEA1H,KAN9BsI,EAAAf,KAAA,gBAAAe,EAAAhB,KAAA,EAAAgB,EAAAV,GAAAU,EAAA,SASDrC,EAASY,eACTZ,EAAS0B,YAAsB,iBAAAD,OACV1H,GADU,wBAAA0H,OAEH1H,EAFG,aAAA0H,OAAAY,EAAAV,MAV9B,yBAAAU,EAAAT,SAAAO,EAAA,iBAAF,gBAAAI,GAAA,OAAAL,EAAAJ,MAAAC,KAAAC,YAAA,KAiBX1D,EAAA3D,EAAAC,cAAC4F,EAAA,QAAD,CACInD,YAAa,CACToD,KAAMJ,IAAemC,IACrB7B,QAAS,kBAAMX,EAASY,iBAE5BhH,SAAS,SACTuD,MAAK,WAAAsE,OAAavB,EAAOnG,KAApB,KACLJ,IAAG,WAAA8H,OAAavB,EAAOnG,KAApB,KACHiD,WAAYkD,EAAOnG,KACnBL,QAAO,eAAA+I,EAAAzE,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAApG,EAAAqG,KAAE,SAAA0B,EAAAC,GAAA,IAAA5I,EAAAC,EAAA,OAAA+G,EAAApG,EAAAwG,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAOvH,EAAP4I,EAAO5I,KAAMC,EAAb2I,EAAa3I,QAAb4I,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAEKC,IAAMC,KAAN,UAAAC,OAAqBvB,EAAO5E,GAA5B,WAAyC,CAC3CvB,KAAMC,IAHT,OAKDgG,EAASY,eACTZ,EAAS0B,YAAsB,iBAAAD,OACV1H,GADU,2BAAA0H,OAEA1H,EAFA,UAAA0H,OAEazH,KAR3C4I,EAAAtB,KAAA,gBAAAsB,EAAAvB,KAAA,EAAAuB,EAAAjB,GAAAiB,EAAA,SAWD5C,EAASY,eACTZ,EAAS0B,YAAsB,iBAAAD,OACV1H,GADU,wBAAA0H,OAEH1H,EAFG,UAAA0H,OAEUzH,EAFV,aAAAyH,OAAAmB,EAAAjB,MAZ9B,yBAAAiB,EAAAhB,SAAAc,EAAA,iBAAF,gBAAAG,GAAA,OAAAJ,EAAAX,MAAAC,KAAAC,YAAA,KAmBX1D,EAAA3D,EAAAC,cAAC4F,EAAA,QAAD,CACI5G,SAAS,eACTuD,MAAOoD,EAAapD,MACpBC,QAASmD,EAAanD,QACtBC,YAAa,CACToD,KAA6B,KAAvBF,EAAapD,OAAyC,KAAzBoD,EAAanD,QAChDuD,QAAS,kBAAIX,EAAS8C","file":"static/js/18.051baad0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {TextField, Button, Grid} from '@material-ui/core';\r\n\r\nfunction DialogCustomForm(props){\r\n    const {\r\n        request, \r\n        btn,\r\n        category,\r\n\t\tvalues: { name, newName, confirmName },\r\n\t\terrors,\r\n\t\ttouched,\r\n\t\thandleChange,\r\n\t\tisValid,\r\n\t\tsetFieldTouched\r\n    } = props;\r\n    \r\n    const change = (name, e) => {\r\n\t\te.persist();\r\n\t\thandleChange(e);\r\n\t\tsetFieldTouched(name, true, false);\r\n    };\r\n\r\n\treturn(\r\n        <Grid container component=\"form\" spacing={1}\r\n            onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                request({ \r\n                    name: name, \r\n                    newName: newName, \r\n                    confirmName: confirmName \r\n                });\r\n            }}\r\n        >\r\n            {category === 'add' \r\n                ? <Grid component={TextField} item xs={12}\r\n                    id=\"name\" name=\"name\" label=\"Name\"\r\n                    onChange={change.bind(null, \"name\")}\r\n                    value={name}\r\n                    helperText={touched.name ? errors.name : \"\"}\r\n                    error={touched.name && Boolean(errors.name)}\r\n                /> : category === 'delete'\r\n                ? <Grid component={TextField} item xs={12}\r\n                    id=\"confirmName\" name=\"confirmName\" label=\"Confirm Name\"\r\n                    onChange={change.bind(null, \"confirmName\")}\r\n                    value={confirmName}\r\n                    helperText={touched.confirmName ? errors.confirmName : \"\"}\r\n                    error={touched.confirmName && Boolean(errors.confirmName)}\r\n                /> : category === 'rename'\r\n                ? <React.Fragment>\r\n                    <Grid component={TextField} item xs={12}\r\n                        id=\"newName\" name=\"newName\" label=\"New Name\"\r\n                        onChange={change.bind(null, \"newName\")}\r\n                        value={newName}\r\n                        helperText={touched.newName ? errors.newName : \"\"}\r\n                        error={touched.newName && Boolean(errors.newName)}\r\n                    />\r\n                    <Grid component={TextField} item xs={12}\r\n                        id=\"confirmName\" name=\"confirmName\" label=\"Confirm Name\"\r\n                        onChange={change.bind(null, \"confirmName\")}\r\n                        value={confirmName}\r\n                        helperText={touched.confirmName ? errors.confirmName : \"\"}\r\n                        error={touched.confirmName && Boolean(errors.confirmName)}\r\n                    />\r\n                </React.Fragment> : null\r\n            }\r\n            <Grid item xs={12} component={Button} \r\n                type=\"submit\" disabled={!isValid}\r\n                size=\"large\"\r\n            >\r\n                {btn}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DialogCustomForm;","import React from 'react';\r\nimport {Dialog, DialogTitle, DialogContent, DialogContentText} from '@material-ui/core';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport DialogCustomForm from './DialogCustomForm';\r\n\r\nconst addSchema = Yup.object({\r\n\tname: Yup.string().required('enter name')\r\n\t.matches(/^[a-zA-Z0-9_]+$/, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n\t}).min(1, 'name too short').max(50, 'name too long')\r\n});\r\n\r\nconst deleteSchema = Yup.object({\r\n    name: Yup.string(),\r\n\tconfirmName: Yup.string().required('re-enter name')\r\n\t.matches(/^[a-z0-9_]*$/i, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n\t}).oneOf([Yup.ref('name')], \"Confirm Name does not match\")\r\n});\r\n\r\nconst renameSchema = Yup.object({\r\n    name: Yup.string(),\r\n\tconfirmName: Yup.string().required('re-enter name')\r\n\t.oneOf([Yup.ref('name')], \"Confirm Name does not match\"),\r\n    newName: Yup.string().required('enter new name')\r\n\t.matches(/^[a-zA-Z0-9_]+$/, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n    }).min(1, 'new name too short').max(50, 'new name too long')\r\n});\r\n\r\nconst initialAdd = {\r\n    name: ''\r\n};\r\n\r\nconst initialDelete = targetName => ({\r\n    name: targetName,\r\n    confirmName: ''\r\n});\r\n\r\nconst initialRename = targetName => ({\r\n    name: targetName,\r\n    confirmName: '',\r\n    newName: ''\r\n});\r\n\r\n// will accept parameter of request, title, content, btn, targetName, and dialogProps\r\nfunction DialogCustom(props){\r\n    const {title, content, targetName, category, dialogProps} = props;\r\n\r\n    return(\r\n        <Dialog {...dialogProps}>\r\n            <DialogTitle id='dialog-title'>\r\n                {title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {category === 'add' || category === 'delete' || category === 'rename' \r\n                    ? <React.Fragment>\r\n                        {category === 'delete' \r\n                            ?   <React.Fragment>\r\n                                    <DialogContentText>\r\n                                        {content}\r\n                                    </DialogContentText>\r\n                                    <DialogContentText>\r\n                                        Please type in the name of the target to confirm\r\n                                    </DialogContentText>\r\n                                </React.Fragment>\r\n                            : null\r\n                        }\r\n                        <Formik \r\n                            validationSchema={category === 'add'\r\n                                ? addSchema : category === 'rename'\r\n                                ? renameSchema : category === 'delete'\r\n                                ? deleteSchema : {}\r\n                            }\r\n                            initialValues={category === 'add'\r\n                                ? initialAdd : category === 'rename'\r\n                                ? initialRename(targetName) : category === 'delete'\r\n                                ? initialDelete(targetName) : {}\r\n                            }\r\n                            render={(propsRender)=><DialogCustomForm \r\n                                {...props}\r\n                                {...propsRender}\r\n                            />}\r\n                        />\r\n                    </React.Fragment> : category === 'notification'\r\n                    ? <DialogContentText>\r\n                        {content}\r\n                    </DialogContentText> : null\r\n                }\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nDialogCustom.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    content: PropTypes.string,\r\n    btn: PropTypes.string,\r\n    targetName: PropTypes.string,\r\n    category: PropTypes.oneOf(['add', 'delete', 'rename', 'notification']).isRequired,\r\n    request: PropTypes.func,\r\n    dialogProps: PropTypes.shape({\r\n        ...Dialog.propTypes\r\n    }).isRequired\r\n}\r\n\r\nexport default DialogCustom;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = React.forwardRef(function DialogContentText(props, ref) {\n  return React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport { ADD_DIALOG, DELETE_DIALOG, RENAME_DIALOG, HideDialog\r\n    , ShowNotificationDialog, HideNotificationDialog} from '../redux/actions/globalActions';\r\nimport DialogCustom from './DialogCustom';\r\nimport Axios from '../Axios';\r\n\r\nfunction ProjectAuthorized(props){\r\n    const dispatch = useDispatch();\r\n    const target = useSelector(state => state.target);\r\n    const dialogType = useSelector(state => state.dialog);\r\n    const notification = useSelector(state => state.notification);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <DialogCustom\r\n                dialogProps={{\r\n                    open: dialogType === ADD_DIALOG,\r\n                    onClose: () => dispatch(HideDialog())\r\n                }}\r\n                category=\"add\"\r\n                title=\"Add New Entity\"\r\n                btn=\"Add New Entity\"\r\n                request={async({name})=>{\r\n                    try{\r\n                        await Axios.post(`entity/${target.id}`, {\r\n                            name: name\r\n                        });\r\n                        dispatch(HideDialog());\r\n                        dispatch(ShowNotificationDialog(\r\n                            `Add New Entity ${name}`, \r\n                            `Succeed adding new entity ${name}`\r\n                        ));\r\n                    }catch(err){\r\n                        dispatch(HideDialog());\r\n                        dispatch(ShowNotificationDialog(\r\n                            `Add New Entity ${name}`, \r\n                            `Fail adding new entity ${name}, error: ${err}`\r\n                        ));\r\n                    }\r\n                }}\r\n            />\r\n            <DialogCustom\r\n                dialogProps={{\r\n                    open: dialogType === DELETE_DIALOG,\r\n                    onClose: () => dispatch(HideDialog())\r\n                }}\r\n                category=\"delete\"\r\n                title={`PERMANENTLY DELETE \"${target.name}\"`}\r\n                btn={`PERMANENTLY DELETE \"${target.name}\"`}\r\n                content={`This action will PERMANENTLY DELETE \"${target.name}\". Proceed with caution!`}\r\n                targetName={target.name}\r\n                request={async({name})=>{\r\n                    try{\r\n                        await Axios.delete(`entity/${target.id}`);\r\n                        dispatch(HideDialog());\r\n                        dispatch(ShowNotificationDialog(\r\n                            `Delete Entity ${name}`, \r\n                            `Succeed deleting entity ${name}`\r\n                        ));\r\n                    }catch(err){\r\n                        dispatch(HideDialog());\r\n                        dispatch(ShowNotificationDialog(\r\n                            `Delete Entity ${name}`, \r\n                            `Fail deleting entity ${name}, error: ${err}`\r\n                        ));\r\n                    }\r\n                }}\r\n            />\r\n            <DialogCustom\r\n                dialogProps={{\r\n                    open: dialogType === RENAME_DIALOG,\r\n                    onClose: () => dispatch(HideDialog())\r\n                }}\r\n                category=\"rename\"\r\n                title={`Rename \"${target.name}\"`}\r\n                btn={`Rename \"${target.name}\"`}\r\n                targetName={target.name}\r\n                request={async({name, newName})=>{\r\n                    try{\r\n                        await Axios.post(`entity/${target.id}/rename`, {\r\n                            name: newName\r\n                        });\r\n                        dispatch(HideDialog());\r\n                        dispatch(ShowNotificationDialog(\r\n                            `Rename Entity ${name}`, \r\n                            `Succeed renaming entity ${name} into ${newName}`\r\n                        ));\r\n                    }catch(err){\r\n                        dispatch(HideDialog());\r\n                        dispatch(ShowNotificationDialog(\r\n                            `Rename Entity ${name}`, \r\n                            `Fail renaming entity ${name} into ${newName}, error: ${err}`\r\n                        ));\r\n                    }\r\n                }}\r\n            />\r\n            <DialogCustom\r\n                category=\"notification\"\r\n                title={notification.title} \r\n                content={notification.content}\r\n                dialogProps={{\r\n                    open: notification.title !== '' && notification.content !== '',\r\n                    onClose: ()=>dispatch(HideNotificationDialog())\r\n                }}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProjectAuthorized;"],"sourceRoot":""}