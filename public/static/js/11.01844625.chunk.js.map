{"version":3,"sources":["components/FormButton.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/icons/esm/Add.js","components/DocumentConstant.js","../node_modules/@material-ui/icons/esm/Delete.js","components/DocumentAddField.js","components/DocumentSchemaArray.js","components/DocumentSchemaField.js","components/DocumentSchemaObject.js","components/DocumentSaveButton.js","components/DocumentCancelButton.js","components/DocumentAddButton.js","components/DocumentSchemaButtons.js","components/DocumentSchema.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","FormButton","props","a","createElement","Object","assign","item","component","Button","children","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","__webpack_exports__","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","fieldTypes","GenerateDefaultFromType","type","defaultValue","entries","forEach","_ref","_ref2","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","key","value","constructor","DocumentAddField","keys","cancel","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","setKey","_useState3","_useState4","setType","react_default","Grid","container","xs","alignItems","justify","TextField","md","onChange","e","target","required","select","margin","map","option","MenuItem","IconButton","color","aria-label","concat","onClick","temp","toConsumableArray","AddField","edge","Add","Delete","Conditional","curKey","components_DocumentSchemaObject","fromArray","DocumentSchemaArray","selectKeys","useMemo","selectCurrentDocumentKeys","curKeys","useSelector","state","Fragment","Typography","DeleteField","DocumentSchemaField","category","useStyle","makeStyles","theme","root","marginLeft","spacing","DocumentSchemaObject","style","add","setAdd","direction","className","components_DocumentSchemaArray","components_DocumentSchemaField","components_DocumentAddField","DocumentSaveButton","save","variant","DocumentCancelButton","DocumentAddButton","& > *","marginTop","marginBottom","DocumentSchemaAuthorized","history","id","_props$match$params","match","params","entity","project","currentDocumentSchema","selectCurrentDocumentType","components_DocumentAddButton","components_DocumentCancelButton","push","components_DocumentSaveButton","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Axios","post","schema","ShowNotificationDialog","t0","stop","DocumentSchema","selectEntity","selectEntityByName","_entity","useEffect","GenerateField","sm","lg","DocumentSchemaButtons"],"mappings":"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","file":"static/js/11.01844625.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Grid, Button} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormButton(props){\r\n    return(\r\n        <Grid item component={Button} {...props}>\r\n            {props.children}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFormButton.propTypes = {\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    xs: PropTypes.oneOf(['auto',true,1,2,3,4,5,6,7,8,9,10,11,12]).isRequired,\r\n    color: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    classes: PropTypes.any\r\n}\r\n\r\nexport default FormButton;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","export const fieldTypes = ['integer', 'float', 'string', 'boolean', 'object', 'array'];\r\n\r\n//receive type as blueprint and generate default value for it\r\nexport const GenerateDefaultFromType = (type, defaultValue)=>{\r\n    Object.entries(type).forEach(([key, value])=>{\r\n        // check type and assign\r\n        if(value === 'integer'){\r\n            defaultValue[key] = 0;\r\n        }\r\n        else if(value === 'float'){\r\n            defaultValue[key] = 0;\r\n        }\r\n        else if(value === 'string'){\r\n            defaultValue[key] = '';\r\n        }\r\n        else if(value === 'boolean'){\r\n            defaultValue[key] = false;\r\n        }\r\n        else if(value.constructor === Object){\r\n            defaultValue[key] = {};\r\n\r\n            // traverse object\r\n            GenerateDefaultFromType(type[key], defaultValue[key]);\r\n        }\r\n        else if(value.constructor === Array){    \r\n            defaultValue[key] = [];\r\n        }\r\n    });\r\n};","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {AddField} from '../redux/actions/documentActions';\r\nimport {Grid, TextField, IconButton, MenuItem} from '@material-ui/core';\r\nimport {Delete, Add} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport {fieldTypes} from './DocumentConstant';\r\n\r\nfunction DocumentAddField(props){\r\n    const {keys, cancel} = props;\r\n    const dispatch = useDispatch();\r\n    const [key, setKey] = useState('');\r\n    const [type, setType] = useState(fieldTypes[0]);\r\n\r\n    return(\r\n        <Grid container item xs={12} alignItems=\"center\" justify=\"space-evenly\">\r\n            <Grid item component={TextField} xs={3} md={4} value={key}\r\n                onChange={(e) => setKey(e.target.value)}\r\n            />\r\n            <Grid item component={TextField} xs={5} md={6}\r\n                required select margin=\"normal\" value={type}\r\n                onChange={(e) => setType(e.target.value)}\r\n            >\r\n                {fieldTypes.map(option => (\r\n                    <MenuItem key={option} value={option}>\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Grid>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label={`Add ${key}`}\r\n                onClick={() => {\r\n                    const temp = [...keys, key];\r\n                    dispatch(AddField(temp, type));\r\n                    cancel();\r\n                }}\r\n                edge=\"end\"\r\n            >\r\n                <Add/>\r\n            </IconButton>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label={`Cancel adding ${key}`}\r\n                onClick={() => cancel()}\r\n                edge=\"end\"\r\n            >\r\n                <Delete/>\r\n            </IconButton>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nDocumentAddField.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    cancel: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DocumentAddField;","import React, {useState, useMemo, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {DeleteField} from '../redux/actions/documentActions';\r\nimport {Grid, Typography, IconButton, TextField, MenuItem} from '@material-ui/core';\r\nimport {Delete} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {AddField} from '../redux/actions/documentActions';\r\nimport {selectCurrentDocumentKeys} from '../redux/selectors/documentSelectors';\r\nimport DocumentSchemaObject from './DocumentSchemaObject';\r\nimport {fieldTypes} from './DocumentConstant';\r\n\r\nfunction Conditional(props){\r\n    const {keys, curKey, type} = props;\r\n    const temp = [...keys, curKey];\r\n    if(type === 'object'){\r\n        return(\r\n            <DocumentSchemaObject fromArray keys={temp}/>\r\n        )\r\n    }\r\n    else if(type === 'array'){\r\n        return(\r\n            <DocumentSchemaArray fromArray keys={temp}/>\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction DocumentSchemaArray(props){\r\n    const {keys, fromArray} = props;\r\n    const dispatch = useDispatch();\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const curKeys = useSelector(state => selectKeys(state, keys));\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container item xs={12} alignItems=\"center\">\r\n                <Grid item component={Typography} xs={4}>\r\n                    {fromArray ? 'Root' : keys[keys.length - 1]}\r\n                </Grid>\r\n                <Grid item component={TextField} xs\r\n                    required select margin=\"normal\"\r\n                    value={curKeys.type}\r\n                    onChange={(e) => {\r\n                        const {key} = curKeys;\r\n                        const temp = [...keys, key];\r\n                        dispatch(AddField(temp, e.target.value));\r\n                    }}\r\n                >\r\n                    {fieldTypes.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Grid>\r\n                {\r\n                    !fromArray ? \r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                            onClick={() => dispatch(DeleteField(keys))}\r\n                            edge=\"end\"\r\n                        >\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    : null\r\n                }\r\n            </Grid>\r\n            <Conditional type={curKeys.type} curKey={curKeys.key} keys={keys}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nDocumentSchemaArray.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    fromArray: PropTypes.bool\r\n}\r\n\r\nexport default DocumentSchemaArray;","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {DeleteField} from '../redux/actions/documentActions';\r\nimport {Grid, Typography, IconButton} from '@material-ui/core';\r\nimport {Delete} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentSchemaField(props){\r\n    const {keys, category} = props;\r\n    const dispatch = useDispatch();\r\n\r\n    return(\r\n        <Grid container item xs={12} alignItems=\"center\">\r\n            <Grid item component={Typography} xs={4}>\r\n                {keys[keys.length - 1]}\r\n            </Grid>\r\n            <Grid item component={Typography} xs>\r\n                {category}\r\n            </Grid>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                onClick={() => dispatch(DeleteField(keys))}\r\n                edge=\"end\"\r\n            >\r\n                <Delete/>\r\n            </IconButton>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nDocumentSchemaField.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    category: PropTypes.oneOf([\r\n        'integer', 'float', 'string', 'boolean'\r\n    ]).isRequired\r\n}\r\n\r\nexport default DocumentSchemaField;","import React, {useState, useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {DeleteField} from '../redux/actions/documentActions';\r\nimport {Grid, Typography, IconButton, makeStyles} from '@material-ui/core';\r\nimport {Delete, Add} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {selectCurrentDocumentKeys} from '../redux/selectors/documentSelectors';\r\nimport DocumentAddField from './DocumentAddField';\r\nimport DocumentSchemaArray from './DocumentSchemaArray';\r\nimport DocumentSchemaField from './DocumentSchemaField';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n        marginLeft: theme.spacing(3)\r\n\t}\r\n}));\r\n\r\nfunction DocumentSchemaObject(props){\r\n    const style = useStyle();\r\n    const {keys, fromArray} = props;\r\n    const dispatch = useDispatch();\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const curKeys = useSelector(state => selectKeys(state, keys));\r\n    const [add, setAdd] = useState(false);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container item xs={12} alignItems=\"center\">\r\n                <Grid item component={Typography} xs>\r\n                    {fromArray ? 'Root' : keys[keys.length - 1]}\r\n                </Grid>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label='Add new field'\r\n                    onClick={() => setAdd(true)}\r\n                    edge=\"end\"\r\n                >\r\n                    <Add/>\r\n                </IconButton>\r\n                {\r\n                    !fromArray ? \r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                            onClick={() => dispatch(DeleteField(keys))}\r\n                            edge=\"end\"\r\n                        >\r\n                            <Delete/>\r\n                        </IconButton> \r\n                    : null\r\n                }\r\n            </Grid>\r\n            <Grid container item xs={12} direction=\"column\" className={style.root}>\r\n                {\r\n                    curKeys.map(value => {\r\n                        const {key, type} = value;\r\n                        const temp = [...keys, key];\r\n                        if(type === 'object'){\r\n                            return(\r\n                                <DocumentSchemaObject key={key} keys={temp}/>\r\n                            )\r\n                        }\r\n                        else if(type === 'array'){\r\n                            return(\r\n                                <DocumentSchemaArray key={key} keys={temp}/>\r\n                            )\r\n                        }else{\r\n                            return(\r\n                                <DocumentSchemaField key={key} keys={temp} category={type}/>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                {\r\n                    add \r\n                    ? <DocumentAddField keys={keys} cancel={() => setAdd(false)}/> \r\n                    : null\r\n                }\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nDocumentSchemaObject.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    fromArray: PropTypes.bool\r\n}\r\n\r\nexport default DocumentSchemaObject;","import React from 'react';\r\nimport FormButton from './FormButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentSaveButton(props){\r\n    const {save} = props;\r\n\r\n    return(\r\n        <FormButton xs={5} onClick={()=>save()} \r\n            variant=\"contained\" color=\"secondary\"\r\n        >\r\n            Save Schema\r\n        </FormButton>\r\n    )\r\n}\r\n\r\nDocumentSaveButton.propTypes = {\r\n    save: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DocumentSaveButton;","import React from 'react';\r\nimport FormButton from './FormButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentCancelButton(props){\r\n    const {cancel} = props;\r\n\r\n    return(\r\n        <FormButton xs={5} onClick={()=>cancel()} color=\"error\" variant=\"contained\">\r\n            Cancel\r\n        </FormButton>\r\n    )\r\n}\r\n\r\nDocumentCancelButton.propTypes = {\r\n    cancel: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DocumentCancelButton;","import React from 'react';\r\nimport FormButton from './FormButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentAddButton(props){\r\n    const {add} = props;\r\n\r\n    return(\r\n        <FormButton xs={10} onClick={()=>add()} variant=\"contained\">\r\n            New Field\r\n        </FormButton>\r\n    )\r\n}\r\n\r\nDocumentAddButton.propTypes = {\r\n    add: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DocumentAddButton;","import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, makeStyles} from '@material-ui/core';\r\n\r\nimport {selectCurrentDocumentType} from '../redux/selectors/documentSelectors';\r\nimport {ShowNotificationDialog} from '../redux/actions/globalActions';\r\n\r\nimport DocumentAddField from './DocumentAddField';\r\nimport DocumentSaveButton from './DocumentSaveButton';\r\nimport DocumentCancelButton from './DocumentCancelButton';\r\nimport DocumentAddButton from './DocumentAddButton';\r\nimport Axios from '../Axios';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\t'& > *':{\r\n\t\t\tmarginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5)\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction DocumentSchemaAuthorized(props){\r\n    const style = useStyle();\r\n    const dispatch = useDispatch();\r\n    const {history, id} = props;\r\n    const {entity, project} = props.match.params;\r\n    const currentDocumentSchema = useSelector(selectCurrentDocumentType);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    return(\r\n        <Grid container item xs={12} justify=\"space-evenly\" className={style.root}>\r\n            {\r\n                add \r\n                ? <DocumentAddField keys={[]} cancel={() => setAdd(false)}/> \r\n                : null\r\n            }\r\n            <DocumentAddButton add={() => setAdd(true)}/>\r\n            <DocumentCancelButton cancel={() => history.push(`/${project}/${entity}`)}/>\r\n            <DocumentSaveButton save={async() => {\r\n                try{\r\n                    await Axios.post(`entity/${id}/schema`, {\r\n                        schema: currentDocumentSchema\r\n                    });\r\n                    dispatch(\r\n                        ShowNotificationDialog(\r\n                            'Save Schema', \r\n                            'Succeed saving schema'\r\n                        )\r\n                    );\r\n                }catch(err){\r\n                    dispatch(\r\n                        ShowNotificationDialog(\r\n                            'Save Schema', \r\n                            `Fail saving schema, ${err}`\r\n                        )\r\n                    );\r\n                }\r\n            }}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DocumentSchemaAuthorized;","import React, {useEffect, useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, makeStyles} from '@material-ui/core';\r\n\r\nimport {selectEntityByName} from '../redux/selectors/entitySelectors';\r\nimport {selectCurrentDocumentKeys} from '../redux/selectors/documentSelectors';\r\n\r\nimport DocumentSchemaObject from './DocumentSchemaObject';\r\nimport DocumentSchemaArray from './DocumentSchemaArray';\r\nimport DocumentSchemaField from './DocumentSchemaField';\r\nimport { GenerateField } from '../redux/actions/documentActions';\r\n\r\nimport DocumentSchemaButtons from './DocumentSchemaButtons';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\t'& > *':{\r\n\t\t\tmarginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5)\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction DocumentSchema(props){\r\n    const style = useStyle();\r\n    const dispatch = useDispatch();\r\n    const {entity} = props.match.params;\r\n\r\n    const selectEntity = useMemo(selectEntityByName, []);\r\n    const _entity = useSelector(state => selectEntity(state, entity));\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const keys = useSelector(selectKeys);\r\n\r\n    useEffect(()=>{\r\n        // generate schema\r\n        if(_entity) dispatch(GenerateField(_entity.schema));\r\n    }, [_entity]);\r\n\r\n    return(\r\n        <Grid container className={style.root} direction=\"column\">\r\n            <Grid container item direction=\"column\" xs={12} sm={6} md={8} lg={6}>\r\n                {\r\n                    keys.map(value => {\r\n                        const {key, type} = value;\r\n                        const temp = [key];\r\n                        if(type === 'object'){\r\n                            return(\r\n                                <DocumentSchemaObject key={key} keys={temp}/>\r\n                            )\r\n                        }\r\n                        else if(type === 'array'){\r\n                            return(\r\n                                <DocumentSchemaArray key={key} keys={temp}/>\r\n                            )\r\n                        }else{\r\n                            return(\r\n                                <DocumentSchemaField key={key} keys={temp} category={type}/>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </Grid>\r\n            <DocumentSchemaButtons id={_entity ? _entity.id : 0} {...props}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DocumentSchema;"],"sourceRoot":""}