{"version":3,"sources":["components/FormButton.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/DocumentField.js","../node_modules/@material-ui/icons/esm/Add.js","components/DocumentObject.js","components/DocumentArray.js","components/DocumentConstant.js","../node_modules/@material-ui/icons/esm/Delete.js","components/DocumentAdd.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","FormButton","props","a","createElement","Object","assign","item","component","Button","children","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","__webpack_exports__","DocumentField","keys","category","arrayKeys","arrayValues","dispatch","useDispatch","select","useMemo","selectCurrentDocumentValue","value","useSelector","state","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","container","xs","alignItems","Typography","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","checked","onChange","e","SetField","target","inputProps","aria-label","TextField","step","type","multiline","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","color","concat","onClick","temp","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","splice","edge","_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","useStyle","makeStyles","theme","root","marginLeft","spacing","DocumentObject","style","selectKeys","selectCurrentDocumentKeys","curKeys","Fragment","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_7__","direction","className","map","key","_DocumentArray__WEBPACK_IMPORTED_MODULE_11__","_DocumentField__WEBPACK_IMPORTED_MODULE_10__","DocumentArray","selectValues","values","newValue","_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__","index","_DocumentObject__WEBPACK_IMPORTED_MODULE_12__","_DocumentField__WEBPACK_IMPORTED_MODULE_11__","fieldTypes","GenerateDefaultFromType","defaultValue","entries","forEach","_ref","_ref2","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","constructor","& > *","marginTop","marginBottom","DocumentAdd","entity","match","params","selectEntity","selectEntityByName","_entity","currentValue","selectCurrentDocumentData","_useState","useState","_useState2","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","generate","setGenerate","useEffect","schema","GenerateField","react__WEBPACK_IMPORTED_MODULE_3___default","sm","md","lg","_DocumentObject__WEBPACK_IMPORTED_MODULE_11__","_DocumentArray__WEBPACK_IMPORTED_MODULE_12__","_DocumentField__WEBPACK_IMPORTED_MODULE_13__","_FormButton__WEBPACK_IMPORTED_MODULE_7__","variant","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","Axios","post","id","data","ShowNotificationDialog","t0","stop"],"mappings":"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","file":"static/js/12.5b359bde.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Grid, Button} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormButton(props){\r\n    return(\r\n        <Grid item component={Button} {...props}>\r\n            {props.children}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFormButton.propTypes = {\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    xs: PropTypes.oneOf(['auto',true,1,2,3,4,5,6,7,8,9,10,11,12]).isRequired,\r\n    color: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    classes: PropTypes.any\r\n}\r\n\r\nexport default FormButton;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, {useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SetField} from '../redux/actions/documentActions';\r\nimport {selectCurrentDocumentValue} from '../redux/selectors/documentSelectors';\r\nimport {Grid, TextField, Typography, Checkbox, IconButton, Input} from '@material-ui/core';\r\nimport {Delete} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DocumentField(props){\r\n    const {keys, category, arrayKeys, arrayValues} = props;\r\n    const dispatch = useDispatch();\r\n    const select = useMemo(selectCurrentDocumentValue, []);\r\n    const value = useSelector(state => select(state, keys));\r\n\r\n    return(\r\n        <Grid container item xs={12} alignItems=\"center\">\r\n            <Grid item component={Typography} xs={4}>{keys[keys.length - 1]}</Grid>\r\n            {\r\n                category === 'boolean' \r\n                ?   <Checkbox\r\n                        checked={value}\r\n                        onChange={(e) => dispatch(SetField(keys, e.target.checked))}\r\n                        value={keys[keys.length - 1]}\r\n                        inputProps={{\r\n                        'aria-label': 'primary checkbox',\r\n                        }}\r\n                    /> : null\r\n            }\r\n            {\r\n                category === 'integer' || category === 'float'\r\n                ?   <Grid item component={TextField} xs\r\n                        value={value}\r\n                        step={category === 'float' ? 'any' : 1}\r\n                        type='number'\r\n                        onChange={(e) => dispatch(SetField(keys, e.target.value))}\r\n                    /> : null\r\n            }\r\n            {\r\n                category === 'string' \r\n                ?   <Grid item component={TextField} xs\r\n                        value={value}\r\n                        multiline\r\n                        onChange={(e) => dispatch(SetField(keys, e.target.value))}\r\n                    /> : null\r\n            }\r\n            {\r\n                arrayKeys && arrayValues ? <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                    onClick={() => {\r\n                        const temp = [...arrayValues];\r\n                        temp.splice(keys[keys.length - 1], 1);\r\n                        dispatch(SetField(arrayKeys, temp));\r\n                    }}\r\n                    edge=\"end\"\r\n                >\r\n                    <Delete/>\r\n                </IconButton>: null\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nDocumentField.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    category: PropTypes.oneOf([\r\n        'integer', 'float', 'string', 'boolean'\r\n    ]).isRequired,\r\n    arrayKeys: PropTypes.array,\r\n    arrayValues: PropTypes.array\r\n}\r\n\r\nexport default DocumentField;","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, {useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, Typography, IconButton, makeStyles} from '@material-ui/core';\r\nimport {Delete} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {SetField} from '../redux/actions/documentActions';\r\nimport {selectCurrentDocumentKeys} from '../redux/selectors/documentSelectors';\r\nimport DocumentField from './DocumentField';\r\nimport DocumentArray from './DocumentArray';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n        marginLeft: theme.spacing(3)\r\n\t}\r\n}));\r\n\r\nfunction DocumentObject(props){\r\n    const style = useStyle();\r\n    const {keys, arrayValues, arrayKeys} = props;\r\n    const dispatch = useDispatch();\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const curKeys = useSelector(state => selectKeys(state, keys));\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container item xs={12} alignItems=\"center\">\r\n                <Grid item component={Typography} xs>\r\n                    {keys[keys.length - 1]}\r\n                </Grid>\r\n                {\r\n                    arrayKeys && arrayValues ? <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                        onClick={() => {\r\n                            const temp = [...arrayValues];\r\n                            temp.splice(keys[keys.length - 1], 1);\r\n                            dispatch(SetField(arrayKeys, temp));\r\n                        }}\r\n                        edge=\"end\"\r\n                    >\r\n                        <Delete/>\r\n                    </IconButton>: null\r\n                }\r\n            </Grid>\r\n            <Grid container item xs={12} direction=\"column\" className={style.root}>\r\n                {\r\n                    curKeys.map(value => {\r\n                        const {key, type} = value;\r\n                        const temp = [...keys, key];\r\n                        if(type === 'object'){\r\n                            return(\r\n                                <DocumentObject key={key} keys={temp}/>\r\n                            )\r\n                        }\r\n                        else if(type === 'array'){\r\n                            return(\r\n                                <DocumentArray key={key} keys={temp}/>\r\n                            )\r\n                        }else{\r\n                            return(\r\n                                <DocumentField key={key} keys={temp} category={type}/>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nDocumentObject.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    arrayKeys: PropTypes.array,\r\n    arrayValues: PropTypes.array\r\n}\r\n\r\nexport default DocumentObject;","import React, {useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, Typography, IconButton, makeStyles} from '@material-ui/core';\r\nimport {Delete, Add} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {SetField} from '../redux/actions/documentActions';\r\nimport {selectCurrentDocumentKeys, selectCurrentDocumentValue} from '../redux/selectors/documentSelectors';\r\nimport DocumentField from './DocumentField';\r\nimport DocumentObject from './DocumentObject';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n        marginLeft: theme.spacing(3)\r\n\t}\r\n}));\r\n\r\nfunction DocumentArray(props){\r\n    const style = useStyle();\r\n    const {keys, arrayValues, arrayKeys} = props;\r\n    const dispatch = useDispatch();\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const curKeys = useSelector(state => selectKeys(state, keys));\r\n    const selectValues = useMemo(selectCurrentDocumentValue, []);\r\n    const values = useSelector(state => selectValues(state, keys));\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container item xs={12} alignItems=\"center\">\r\n                <Grid item component={Typography} xs>\r\n                    {keys[keys.length - 1]}\r\n                </Grid>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label='Add new field'\r\n                    onClick={() => {\r\n                        const {type} = curKeys;\r\n                        let newValue = [];\r\n                        if(type === 'integer'){\r\n                            newValue = [...values, 0];\r\n                        }\r\n                        else if(type === 'float'){\r\n                            newValue = [...values, 0];\r\n                        }\r\n                        else if(type === 'string'){\r\n                            newValue = [...values, ''];\r\n                        }\r\n                        else if(type === 'boolean'){\r\n                            newValue = [...values, false];\r\n                        }\r\n                        else if(type === 'object'){\r\n                            newValue = [...values, {}];\r\n                        }\r\n                        else if(type == 'array'){    \r\n                            newValue = [...values, []];\r\n                        }\r\n                        dispatch(SetField(keys, newValue));\r\n                    }}\r\n                    edge=\"end\"\r\n                >\r\n                    <Add/>\r\n                </IconButton>\r\n                {\r\n                    arrayKeys && arrayValues ? <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label={`Delete ${keys[keys.length - 1]}`}\r\n                        onClick={() => {\r\n                            const temp = [...arrayValues];\r\n                            temp.splice(keys[keys.length - 1], 1);\r\n                            dispatch(SetField(arrayKeys, temp));\r\n                        }}\r\n                        edge=\"end\"\r\n                    >\r\n                        <Delete/>\r\n                    </IconButton>: null\r\n                }\r\n            </Grid>\r\n            <Grid container item className={style.root} xs={12}>\r\n                {\r\n                    values.map((value, index)=>{\r\n                        const {type} = curKeys;\r\n                        const temp = [...keys, index];\r\n                        if(type === 'object'){\r\n                            return(\r\n                                <DocumentObject key={index} keys={temp}\r\n                                    arrayKeys={keys} arrayValues={values}/>\r\n                            )\r\n                        }\r\n                        else if(type === 'array'){\r\n                            return(\r\n                                <DocumentArray key={index} keys={temp}\r\n                                    arrayKeys={keys} arrayValues={values}/>\r\n                            )\r\n                        }else{\r\n                            return(\r\n                                <DocumentField key={index} keys={temp} category={type} \r\n                                    arrayKeys={keys} arrayValues={values}\r\n                                />\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nDocumentArray.propTypes = {\r\n    keys: PropTypes.array.isRequired,\r\n    arrayKeys: PropTypes.array,\r\n    arrayValues: PropTypes.array\r\n}\r\n\r\nexport default DocumentArray;","export const fieldTypes = ['integer', 'float', 'string', 'boolean', 'object', 'array'];\r\n\r\n//receive type as blueprint and generate default value for it\r\nexport const GenerateDefaultFromType = (type, defaultValue)=>{\r\n    Object.entries(type).forEach(([key, value])=>{\r\n        // check type and assign\r\n        if(value === 'integer'){\r\n            defaultValue[key] = 0;\r\n        }\r\n        else if(value === 'float'){\r\n            defaultValue[key] = 0;\r\n        }\r\n        else if(value === 'string'){\r\n            defaultValue[key] = '';\r\n        }\r\n        else if(value === 'boolean'){\r\n            defaultValue[key] = false;\r\n        }\r\n        else if(value.constructor === Object){\r\n            defaultValue[key] = {};\r\n\r\n            // traverse object\r\n            GenerateDefaultFromType(type[key], defaultValue[key]);\r\n        }\r\n        else if(value.constructor === Array){    \r\n            defaultValue[key] = [];\r\n        }\r\n    });\r\n};","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import React, {useMemo, useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Grid, makeStyles} from '@material-ui/core';\r\nimport FormButton from './FormButton';\r\nimport {ShowNotificationDialog} from '../redux/actions/globalActions';\r\n\r\nimport {selectCurrentDocumentKeys, selectCurrentDocumentData} from '../redux/selectors/documentSelectors';\r\nimport {GenerateField} from '../redux/actions/documentActions';\r\n\r\nimport DocumentObject from './DocumentObject';\r\nimport DocumentArray from './DocumentArray';\r\nimport DocumentField from './DocumentField';\r\n\r\nimport {selectEntityByName} from '../redux/selectors/entitySelectors';\r\nimport Axios from '../Axios';\r\n\r\nimport {GenerateDefaultFromType} from './DocumentConstant';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\t'& > *':{\r\n\t\t\tmarginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5)\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction DocumentAdd(props){\r\n    const style = useStyle();\r\n    const dispatch = useDispatch();\r\n    const {entity} = props.match.params;\r\n\r\n    const selectEntity = useMemo(selectEntityByName, []);\r\n    const _entity = useSelector(state => selectEntity(state, entity));\r\n    const selectKeys = useMemo(selectCurrentDocumentKeys, []);\r\n    const keys = useSelector(state => selectKeys(state));\r\n\r\n    const currentValue = useSelector(selectCurrentDocumentData);\r\n\r\n    const [generate, setGenerate] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(_entity){\r\n            let defaultValue = {};\r\n            GenerateDefaultFromType(_entity.schema, defaultValue);\r\n            dispatch(GenerateField(_entity.schema, defaultValue));\r\n            setGenerate(true);\r\n        }\r\n    }, [_entity]);\r\n\r\n    if(!generate) return null;\r\n    \r\n    return(\r\n        <Grid container className={style.root} direction=\"column\">\r\n            <Grid container item direction=\"column\" xs={12} sm={6} md={8} lg={6}>\r\n                {\r\n                    keys.map(value => {\r\n                        const {key, type} = value;\r\n                        const temp = [key];\r\n                        if(type === 'object'){\r\n                            return(\r\n                                <DocumentObject key={key} keys={temp}/>\r\n                            )\r\n                        }\r\n                        else if(type === 'array'){\r\n                            return(\r\n                                <DocumentArray key={key} keys={temp}/>\r\n                            )\r\n                        }else{\r\n                            return(\r\n                                <DocumentField key={key} keys={temp} category={type}/>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </Grid>\r\n            <FormButton color=\"secondary\" variant=\"contained\" xs={12} \r\n                onClick={async () => {\r\n                    try{\r\n                        await Axios.post(`document/${_entity.id}`, {\r\n                            data: currentValue\r\n                        });\r\n                        \r\n                        dispatch(ShowNotificationDialog(\r\n                            'Add Document', \r\n                            'Succeed adding new document'\r\n                        ));\r\n                    }catch(err){\r\n                        dispatch(ShowNotificationDialog(\r\n                            'Add Document', \r\n                            `Failed adding new document, ${err}`\r\n                        ));\r\n                    }\r\n                }}\r\n            >\r\n                Add\r\n            </FormButton>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DocumentAdd;"],"sourceRoot":""}