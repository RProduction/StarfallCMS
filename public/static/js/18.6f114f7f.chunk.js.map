{"version":3,"sources":["components/DocumentJSONEditor.js","components/DocumentAdd.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_1__","react_ace__WEBPACK_IMPORTED_MODULE_2__","react_ace__WEBPACK_IMPORTED_MODULE_2___default","DocumentJSONEditor","props","data","onChange","onValidation","readonly","minLines","fontSize","a","createElement","item","container","xs","placeholder","mode","theme","name","onValidate","width","maxLines","Infinity","showPrintMargin","showGutter","highlightActiveLine","value","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","wrapEnabled","readOnly","editorProps","$blockScrolling","useStyle","makeStyles","root","& > *","marginTop","spacing","marginBottom","DocumentAdd","style","dispatch","useDispatch","_props$match$params","match","params","project","entity","selectEntity","useMemo","selectEntityInProjectByName","_entity","useSelector","state","_useState","useState","_useState2","Object","D_Project_VScode_Web_StarfallCMS_Client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setData","_useState3","_useState4","valid","setValid","react__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_5__","className","direction","_DocumentJSONEditor__WEBPACK_IMPORTED_MODULE_12__","annotations","length","component","Button","color","variant","disabled","onClick","D_Project_VScode_Web_StarfallCMS_Client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Project_VScode_Web_StarfallCMS_Client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","Axios","post","concat","id","JSON","parse","ShowNotificationDialog","t0","stop","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","to"],"mappings":"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","file":"static/js/18.6f114f7f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport AceEditor from \"react-ace\";\r\nimport 'brace/ext/language_tools';\r\nimport 'brace/mode/json';\r\nimport 'brace/theme/github';\r\n\r\nfunction DocumentJSONEditor(props){\r\n    const {data, onChange, onValidation, readonly, minLines, fontSize} = props;\r\n\r\n    return(\r\n        <Grid item container xs={12}>\r\n            <AceEditor\r\n                placeholder=\"\" \r\n                mode=\"json\" \r\n                theme=\"github\"\r\n                name=\"json-editor\"\r\n                onChange={onChange}\r\n                onValidate={onValidation}\r\n                width=\"100%\"\r\n                minLines={minLines}\r\n                maxLines={Infinity}\r\n                fontSize={fontSize}\r\n                showPrintMargin={true}\r\n                showGutter={true}\r\n                highlightActiveLine={true}\r\n                value={data}\r\n                enableBasicAutocompletion={true}\r\n                enableLiveAutocompletion={true}\r\n                enableSnippets={false}\r\n                showLineNumbers={true}\r\n                tabSize={4}\r\n                wrapEnabled={true}\r\n                readOnly={readonly}\r\n                editorProps={{$blockScrolling: Infinity}}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DocumentJSONEditor;","import React, {useMemo, useState} from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport Axios from '../Axios';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {ShowNotificationDialog} from '../redux/actions/globalActions';\r\nimport {selectEntityInProjectByName} from '../redux/selectors/entitySelectors';\r\n\r\nimport DocumentJSONEditor from './DocumentJSONEditor';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\t'& > *':{\r\n\t\t\tmarginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5)\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction DocumentAdd(props){\r\n    const style = useStyle();\r\n    const dispatch = useDispatch();\r\n    const {project, entity} = props.match.params;\r\n\r\n    const selectEntity = useMemo(selectEntityInProjectByName, []);\r\n    const _entity = useSelector(state => selectEntity(state, project, entity));\r\n    \r\n    const [data, setData] = useState('{}');\r\n    const [valid, setValid] = useState(false);\r\n\r\n    if(!_entity)\r\n        return <Redirect to=\"/\"/>\r\n    else return(\r\n        <Grid container className={style.root} direction=\"column\">\r\n            <DocumentJSONEditor \r\n                readonly={false}\r\n                minLines={20}\r\n                fontSize={22}\r\n                data={data} \r\n                onChange={(value) => setData(value)}\r\n                onValidation={(annotations) => setValid(annotations.length === 0)}\r\n            />\r\n            <Grid item component={Button} color=\"secondary\" \r\n                variant=\"contained\" xs={12} disabled={!valid}\r\n                onClick={async () => {\r\n                    try{\r\n                        await Axios.post(`document/${_entity.id}`, {\r\n                            data: JSON.parse(data)\r\n                        });\r\n                        \r\n                        dispatch(ShowNotificationDialog(\r\n                            'Add Document', \r\n                            'Succeed adding new document'\r\n                        ));\r\n                    }catch(err){\r\n                        dispatch(ShowNotificationDialog(\r\n                            'Add Document', \r\n                            `Failed adding new document, ${err}`\r\n                        ));\r\n                    }\r\n                }}\r\n            >\r\n                Add\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DocumentAdd;"],"sourceRoot":""}