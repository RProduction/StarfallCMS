{"version":3,"sources":["components/FormButton.js","components/ContentContainer.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","components/AuthorizationForm.js","SignIn.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","FormButton","props","a","createElement","Object","assign","item","component","Button","children","ContentContainer","minHeight","Container","maxWidth","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","forwardRef","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","Component","_props$container","container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","StyledGrid","theme","boxSizing","display","flexWrap","width","margin","minWidth","direction-xs-column","flexDirection","direction-xs-column-reverse","direction-xs-row-reverse","wrap-xs-nowrap","wrap-xs-wrap-reverse","align-items-xs-center","align-items-xs-flex-start","align-items-xs-flex-end","align-items-xs-baseline","align-content-xs-center","align-content-xs-flex-start","align-content-xs-flex-end","align-content-xs-space-between","align-content-xs-space-around","justify-xs-center","justifyContent","justify-xs-flex-end","justify-xs-space-between","justify-xs-space-around","justify-xs-space-evenly","breakpoint","styles","forEach","themeSpacing","& > $item","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","up","generateGrid","name","__webpack_exports__","_ContentContainer__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","formik__WEBPACK_IMPORTED_MODULE_4__","useStyle","makeStyles","position","top","left","right","bottom","backgroundColor","palette","background","dark","AuthorizationForm","style","r","_components_AuthorizationForm__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","react_redux__WEBPACK_IMPORTED_MODULE_6__","_redux_actions_authorizationActions__WEBPACK_IMPORTED_MODULE_7__","yup__WEBPACK_IMPORTED_MODULE_8__","_components_FormButton__WEBPACK_IMPORTED_MODULE_9__","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","& > div","marginTop","marginBottom","btn","primary","PaperForm","React","innerRef","SignIn","dispatch","useDispatch","_status","useSelector","state","authStatus","_props$values","values","username","password","errors","touched","handleChange","isValid","setFieldTouched","change","e","persist","FIRST_BOOT","to","CREATOR","USER","elevation","onSubmit","preventDefault","AuthSignIn","TextField","required","id","label","onChange","bind","value","variant","helperText","error","Boolean","type","disabled","color","ValidationSchema","Yup","matches","message","excludeEmptyString","InitialValues","Validation","validationSchema","initialValues","render"],"mappings":"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","file":"static/js/12.b51c6519.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Grid, Button} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormButton(props){\r\n    return(\r\n        <Grid item component={Button} {...props}>\r\n            {props.children}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFormButton.propTypes = {\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    xs: PropTypes.oneOf(['auto',true,1,2,3,4,5,6,7,8,9,10,11,12]).isRequired,\r\n    color: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    classes: PropTypes.any\r\n}\r\n\r\nexport default FormButton;","import React from 'react';\r\nimport {Container, Box} from '@material-ui/core';\r\n\r\nfunction ContentContainer(props){\r\n    return(\r\n        <Box minHeight='100vh' component={Container} maxWidth=\"xl\" {...props}>\r\n            {\r\n                props.children\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContentContainer;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function (props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  // can't use named function expression since the function body references `Grid`\n  // which would point to the render function instead of the actual component\n  Grid.displayName = 'ForwardRef(Grid)';\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React from 'react';\r\nimport ContentContainer from './ContentContainer';\r\nimport {Grid, makeStyles} from '@material-ui/core';\r\nimport {Formik} from 'formik';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\tposition: 'absolute',\r\n\t\ttop: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\tbottom: 0,\r\n\t\tbackgroundColor: theme.palette.background.dark.dark\r\n\t}\r\n}));\r\n\r\nfunction AuthorizationForm(props){\r\n\tconst style = useStyle();\r\n\r\n\treturn (\r\n\t\t<ContentContainer>\r\n            <Grid container alignItems=\"center\" justify=\"center\" \r\n                className={style.root}\r\n\t\t\t>\r\n\t\t\t\t<Formik {...props}/>\r\n\t\t\t</Grid>\r\n\t\t</ContentContainer>\r\n  \t);\r\n}\r\n\r\nexport default AuthorizationForm;","import React from 'react';\r\nimport AuthorizationForm from './components/AuthorizationForm';\r\nimport {TextField, Grid, Paper, makeStyles} from '@material-ui/core';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AuthSignIn, FIRST_BOOT, CREATOR, USER} from './redux/actions/authorizationActions';\r\nimport * as Yup from 'yup';\r\nimport FormButton from './components/FormButton';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\tpadding: theme.spacing(2.5),\r\n\t\t'& > div':{\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: theme.spacing(1),\r\n\t\t}\r\n\t},\r\n\tbtn:{\r\n\t\tbackgroundColor: theme.palette.primary\r\n\t}\r\n}));\r\n\r\nconst PaperForm = React.forwardRef((props, ref)=>{\r\n\treturn <Paper component='form' {...props} innerRef={ref}/>\r\n});\r\n\r\nfunction SignIn(props) {\r\n\tconst style = useStyle();\r\n\tconst dispatch = useDispatch();\r\n\tconst _status = useSelector(state => state.authStatus);\r\n\r\n\tconst {\r\n\t\tvalues: { username, password },\r\n\t\terrors,\r\n\t\ttouched,\r\n\t\thandleChange,\r\n\t\tisValid,\r\n\t\tsetFieldTouched\r\n\t} = props;\r\n\r\n\tconst change = (name, e) => {\r\n\t\te.persist();\r\n\t\thandleChange(e);\r\n\t\tsetFieldTouched(name, true, false);\r\n\t};\r\n\r\n\tif(_status === FIRST_BOOT)\r\n\t\treturn <Redirect to='/signup'/>\r\n\telse if(_status === CREATOR || _status === USER)\r\n\t\treturn <Redirect to='/'/>\r\n\telse return (\r\n\t\t<Grid component={PaperForm} container item\r\n\t\t\txs={8} sm={6} className={style.root}\r\n\t\t\televation={3}\r\n\t\t\tonSubmit={(e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tdispatch(AuthSignIn(username, password));\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Grid item xs={12} component={TextField} required\r\n\t\t\t\tid=\"username\" name=\"username\" label=\"Username\"\r\n\t\t\t\tonChange={change.bind(null, \"username\")}\r\n\t\t\t\tvalue={username} variant=\"outlined\" margin=\"dense\"\r\n\t\t\t\thelperText={touched.username ? errors.username : \"\"}\r\n\t\t\t\terror={touched.username && Boolean(errors.username)}\r\n\t\t\t/>\r\n\t\t\t<Grid item xs={12} component={TextField} required id=\"password\"\r\n\t\t\t\tname=\"password\" label=\"Password\" type=\"password\"\r\n\t\t\t\tonChange={change.bind(null, \"password\")}\r\n\t\t\t\tvalue={password} variant=\"outlined\" margin=\"dense\"\r\n\t\t\t\thelperText={touched.password ? errors.password : \"\"}\r\n\t\t\t\terror={touched.password && Boolean(errors.password)}\r\n\t\t\t/>\r\n\t\t\t<FormButton type=\"submit\" disabled={!isValid}\r\n\t\t\t\txs={12} color=\"secondary\" variant=\"contained\"\r\n\t\t\t>\r\n\t\t\t\tSign In\r\n\t\t\t</FormButton>\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nconst ValidationSchema = Yup.object({\r\n\tusername: Yup.string().required('enter username')\r\n\t.matches(/^[a-zA-Z0-9]*$/, {\r\n\t\tmessage: 'input letters and numbers only',\r\n\t\texcludeEmptyString: true,\r\n\t}),\r\n\tpassword: Yup.string().required('enter password')\r\n\t.matches(/^[a-zA-Z0-9]*$/, {\r\n\t\tmessage: 'input letters and numbers only',\r\n\t\texcludeEmptyString: true,\r\n\t})\r\n});\r\n\r\nconst InitialValues = {\r\n\tusername: 'Username12345',\r\n\tpassword: ''\r\n};\r\n\r\nfunction Validation(){\r\n\treturn <AuthorizationForm \r\n\t\tvalidationSchema={ValidationSchema}\r\n\t\tinitialValues={InitialValues}\r\n\t\trender={(props)=><SignIn {...props}/>}\r\n\t/>\r\n}\r\n\r\nexport default Validation;"],"sourceRoot":""}