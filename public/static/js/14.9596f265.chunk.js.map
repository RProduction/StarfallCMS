{"version":3,"sources":["components/DialogCustomForm.js","components/DialogCustom.js","components/ContentContainer.js","components/AuthorizationForm.js","components/FormButton.js","SignIn.js"],"names":["DialogCustomForm","props","request","btn","category","_props$values","values","name","newName","confirmName","errors","touched","handleChange","isValid","setFieldTouched","change","e","persist","react_default","a","createElement","Grid","container","component","spacing","onSubmit","preventDefault","TextField","item","xs","id","label","onChange","bind","value","helperText","error","Boolean","Fragment","Button","type","disabled","size","addSchema","Yup","required","matches","message","excludeEmptyString","min","max","deleteSchema","oneOf","renameSchema","initialAdd","initialDelete","targetName","initialRename","DialogCustom","title","content","dialogProps","Dialog","DialogTitle","DialogContent","DialogContentText","formik_esm","validationSchema","initialValues","render","propsRender","components_DialogCustomForm","Object","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_2__","ContentContainer","minHeight","Container","maxWidth","children","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_styles_makeStyles__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles_makeStyles__WEBPACK_IMPORTED_MODULE_2___default","formik__WEBPACK_IMPORTED_MODULE_3__","_ContentContainer__WEBPACK_IMPORTED_MODULE_4__","useStyle","makeStyles","theme","root","position","top","left","right","bottom","backgroundColor","palette","background","dark","AuthorizationForm","style","alignItems","justify","className","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2__","FormButton","r","__webpack_exports__","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_styles_makeStyles__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_styles_makeStyles__WEBPACK_IMPORTED_MODULE_5___default","react_redux__WEBPACK_IMPORTED_MODULE_6__","yup__WEBPACK_IMPORTED_MODULE_7__","_components_AuthorizationForm__WEBPACK_IMPORTED_MODULE_8__","_redux_actions_authorizationActions__WEBPACK_IMPORTED_MODULE_9__","_redux_actions_globalActions__WEBPACK_IMPORTED_MODULE_10__","_components_FormButton__WEBPACK_IMPORTED_MODULE_11__","_components_DialogCustom__WEBPACK_IMPORTED_MODULE_12__","padding","& > div","marginTop","marginBottom","primary","PaperForm","React","forwardRef","ref","innerRef","SignIn","dispatch","useDispatch","notification","useSelector","state","_status","authStatus","username","password","FIRST_BOOT","to","CREATOR","USER","open","onClose","HideNotificationDialog","sm","elevation","AuthSignIn","variant","margin","placeholder","color","ValidationSchema","Validation"],"mappings":"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","file":"static/js/14.9596f265.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction DialogCustomForm(props){\r\n    const {\r\n        request, \r\n        btn,\r\n        category,\r\n\t\tvalues: { name, newName, confirmName },\r\n\t\terrors,\r\n\t\ttouched,\r\n\t\thandleChange,\r\n\t\tisValid,\r\n\t\tsetFieldTouched\r\n    } = props;\r\n    \r\n    const change = (name, e) => {\r\n\t\te.persist();\r\n\t\thandleChange(e);\r\n\t\tsetFieldTouched(name, true, false);\r\n    };\r\n\r\n\treturn(\r\n        <Grid container component=\"form\" spacing={1}\r\n            onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                request({ \r\n                    name: name, \r\n                    newName: newName, \r\n                    confirmName: confirmName \r\n                });\r\n            }}\r\n        >\r\n            {category === 'add' \r\n                ? <Grid component={TextField} item xs={12}\r\n                    id=\"name\" name=\"name\" label=\"Name\"\r\n                    onChange={change.bind(null, \"name\")}\r\n                    value={name}\r\n                    helperText={touched.name ? errors.name : \"\"}\r\n                    error={touched.name && Boolean(errors.name)}\r\n                /> : category === 'delete'\r\n                ? <Grid component={TextField} item xs={12}\r\n                    id=\"confirmName\" name=\"confirmName\" label=\"Confirm Name\"\r\n                    onChange={change.bind(null, \"confirmName\")}\r\n                    value={confirmName}\r\n                    helperText={touched.confirmName ? errors.confirmName : \"\"}\r\n                    error={touched.confirmName && Boolean(errors.confirmName)}\r\n                /> : category === 'rename'\r\n                ? <React.Fragment>\r\n                    <Grid component={TextField} item xs={12}\r\n                        id=\"newName\" name=\"newName\" label=\"New Name\"\r\n                        onChange={change.bind(null, \"newName\")}\r\n                        value={newName}\r\n                        helperText={touched.newName ? errors.newName : \"\"}\r\n                        error={touched.newName && Boolean(errors.newName)}\r\n                    />\r\n                    <Grid component={TextField} item xs={12}\r\n                        id=\"confirmName\" name=\"confirmName\" label=\"Confirm Name\"\r\n                        onChange={change.bind(null, \"confirmName\")}\r\n                        value={confirmName}\r\n                        helperText={touched.confirmName ? errors.confirmName : \"\"}\r\n                        error={touched.confirmName && Boolean(errors.confirmName)}\r\n                    />\r\n                </React.Fragment> : null\r\n            }\r\n            <Grid item xs={12} component={Button} \r\n                type=\"submit\" disabled={!isValid}\r\n                size=\"large\"\r\n            >\r\n                {btn}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DialogCustomForm;","import React from 'react';\r\n\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DialogCustomForm from './DialogCustomForm';\r\n\r\nconst addSchema = Yup.object({\r\n\tname: Yup.string().required('enter name')\r\n\t.matches(/^[a-zA-Z0-9_]+$/, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n\t}).min(1, 'name too short').max(50, 'name too long')\r\n});\r\n\r\nconst deleteSchema = Yup.object({\r\n    name: Yup.string(),\r\n\tconfirmName: Yup.string().required('re-enter name')\r\n\t.matches(/^[a-z0-9_]*$/i, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n\t}).oneOf([Yup.ref('name')], \"Confirm Name does not match\")\r\n});\r\n\r\nconst renameSchema = Yup.object({\r\n    name: Yup.string(),\r\n\tconfirmName: Yup.string().required('re-enter name')\r\n\t.oneOf([Yup.ref('name')], \"Confirm Name does not match\"),\r\n    newName: Yup.string().required('enter new name')\r\n\t.matches(/^[a-zA-Z0-9_]+$/, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n    }).min(1, 'new name too short').max(50, 'new name too long')\r\n});\r\n\r\nconst initialAdd = {\r\n    name: ''\r\n};\r\n\r\nconst initialDelete = targetName => ({\r\n    name: targetName,\r\n    confirmName: ''\r\n});\r\n\r\nconst initialRename = targetName => ({\r\n    name: targetName,\r\n    confirmName: '',\r\n    newName: ''\r\n});\r\n\r\n// will accept parameter of request, title, content, btn, targetName, and dialogProps\r\nfunction DialogCustom(props){\r\n    const {title, content, targetName, category, dialogProps} = props;\r\n\r\n    return(\r\n        <Dialog {...dialogProps}>\r\n            <DialogTitle id='dialog-title'>\r\n                {title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {category === 'add' || category === 'delete' || category === 'rename' \r\n                    ? <React.Fragment>\r\n                        {category === 'delete' \r\n                            ?   <React.Fragment>\r\n                                    <DialogContentText>\r\n                                        {content}\r\n                                    </DialogContentText>\r\n                                    <DialogContentText>\r\n                                        Please type in the name of the target to confirm\r\n                                    </DialogContentText>\r\n                                </React.Fragment>\r\n                            : null\r\n                        }\r\n                        <Formik \r\n                            validationSchema={category === 'add'\r\n                                ? addSchema : category === 'rename'\r\n                                ? renameSchema : category === 'delete'\r\n                                ? deleteSchema : {}\r\n                            }\r\n                            initialValues={category === 'add'\r\n                                ? initialAdd : category === 'rename'\r\n                                ? initialRename(targetName) : category === 'delete'\r\n                                ? initialDelete(targetName) : {}\r\n                            }\r\n                            render={(propsRender)=><DialogCustomForm \r\n                                {...props}\r\n                                {...propsRender}\r\n                            />}\r\n                        />\r\n                    </React.Fragment> : category === 'notification'\r\n                    ? <DialogContentText>\r\n                        {content}\r\n                    </DialogContentText> : null\r\n                }\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nDialogCustom.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    content: PropTypes.string,\r\n    btn: PropTypes.string,\r\n    targetName: PropTypes.string,\r\n    category: PropTypes.oneOf(['add', 'delete', 'rename', 'notification']).isRequired,\r\n    request: PropTypes.func,\r\n    dialogProps: PropTypes.shape({\r\n        ...Dialog.propTypes\r\n    }).isRequired\r\n}\r\n\r\nexport default DialogCustom;","import React from 'react';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction ContentContainer(props){\r\n    return(\r\n        <Box minHeight='100vh' component={Container} maxWidth=\"xl\" {...props}>\r\n            {\r\n                props.children\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContentContainer;","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport {Formik} from 'formik';\r\n\r\nimport ContentContainer from './ContentContainer';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\tposition: 'absolute',\r\n\t\ttop: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\tbottom: 0,\r\n\t\tbackgroundColor: theme.palette.background.dark.dark\r\n\t}\r\n}));\r\n\r\nfunction AuthorizationForm(props){\r\n\tconst style = useStyle();\r\n\r\n\treturn (\r\n\t\t<ContentContainer>\r\n            <Grid container alignItems=\"center\" justify=\"center\" \r\n                className={style.root}\r\n\t\t\t>\r\n\t\t\t\t<Formik {...props}/>\r\n\t\t\t</Grid>\r\n\t\t</ContentContainer>\r\n  \t);\r\n}\r\n\r\nexport default AuthorizationForm;","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormButton(props){\r\n    return(\r\n        <Grid item component={Button} {...props}>\r\n            {props.children}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFormButton.propTypes = {\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    xs: PropTypes.oneOf(['auto',true,1,2,3,4,5,6,7,8,9,10,11,12]).isRequired,\r\n    color: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    classes: PropTypes.any\r\n}\r\n\r\nexport default FormButton;","import React from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport AuthorizationForm from './components/AuthorizationForm';\r\nimport {AuthSignIn, FIRST_BOOT, CREATOR, USER} from './redux/actions/authorizationActions';\r\nimport {HideNotificationDialog} from './redux/actions/globalActions';\r\nimport FormButton from './components/FormButton';\r\nimport DialogCustom from './components/DialogCustom';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\troot:{\r\n\t\tpadding: theme.spacing(2.5),\r\n\t\t'& > div':{\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: theme.spacing(1),\r\n\t\t}\r\n\t},\r\n\tbtn:{\r\n\t\tbackgroundColor: theme.palette.primary\r\n\t}\r\n}));\r\n\r\nconst PaperForm = React.forwardRef((props, ref)=>{\r\n\treturn <Paper component='form' {...props} innerRef={ref}/>\r\n});\r\n\r\nfunction SignIn(props) {\r\n\tconst style = useStyle();\r\n\tconst dispatch = useDispatch();\r\n\tconst notification = useSelector(state => state.notification);\r\n\tconst _status = useSelector(state => state.authStatus);\r\n\r\n\tconst {\r\n\t\tvalues: { username, password },\r\n\t\terrors,\r\n\t\ttouched,\r\n\t\thandleChange,\r\n\t\tisValid,\r\n\t\tsetFieldTouched\r\n\t} = props;\r\n\r\n\tconst change = (name, e) => {\r\n\t\te.persist();\r\n\t\thandleChange(e);\r\n\t\tsetFieldTouched(name, true, false);\r\n\t};\r\n\r\n\tif(_status === FIRST_BOOT)\r\n\t\treturn <Redirect to='/signup'/>\r\n\telse if(_status === CREATOR || _status === USER)\r\n\t\treturn <Redirect to='/'/>\r\n\telse return (\r\n\t\t<React.Fragment>\r\n\t\t\t<DialogCustom\r\n\t\t\t\tcategory=\"notification\"\r\n\t\t\t\ttitle={notification.title} \r\n\t\t\t\tcontent={notification.content}\r\n\t\t\t\tdialogProps={{\r\n\t\t\t\t\topen: notification.title !== '' && notification.content !== '',\r\n\t\t\t\t\tonClose: ()=>dispatch(HideNotificationDialog())\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Grid component={PaperForm} container item\r\n\t\t\t\txs={8} sm={6} className={style.root}\r\n\t\t\t\televation={3}\r\n\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tdispatch(AuthSignIn(username, password));\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid item xs={12} component={TextField} required\r\n\t\t\t\t\tid=\"username\" name=\"username\" label=\"Username\"\r\n\t\t\t\t\tonChange={change.bind(null, \"username\")}\r\n\t\t\t\t\tvalue={username} variant=\"outlined\" margin=\"dense\"\r\n\t\t\t\t\thelperText={touched.username ? errors.username : \"\"}\r\n\t\t\t\t\terror={touched.username && Boolean(errors.username)}\r\n\t\t\t\t\tplaceholder=\"Username12345\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Grid item xs={12} component={TextField} required id=\"password\"\r\n\t\t\t\t\tname=\"password\" label=\"Password\" type=\"password\"\r\n\t\t\t\t\tonChange={change.bind(null, \"password\")}\r\n\t\t\t\t\tvalue={password} variant=\"outlined\" margin=\"dense\"\r\n\t\t\t\t\thelperText={touched.password ? errors.password : \"\"}\r\n\t\t\t\t\terror={touched.password && Boolean(errors.password)}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormButton type=\"submit\" disabled={!isValid}\r\n\t\t\t\t\txs={12} color=\"secondary\" variant=\"contained\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</FormButton>\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nconst ValidationSchema = Yup.object({\r\n\tusername: Yup.string().required('enter username')\r\n\t.matches(/^[a-zA-Z0-9]*$/, {\r\n\t\tmessage: 'input letters and numbers only',\r\n\t\texcludeEmptyString: true,\r\n\t}),\r\n\tpassword: Yup.string().required('enter password')\r\n\t.matches(/^[a-zA-Z0-9]*$/, {\r\n\t\tmessage: 'input letters and numbers only',\r\n\t\texcludeEmptyString: true,\r\n\t})\r\n});\r\n\r\nfunction Validation(){\r\n\treturn <AuthorizationForm \r\n\t\tvalidationSchema={ValidationSchema}\r\n\t\trender={(props)=><SignIn {...props}/>}\r\n\t/>\r\n}\r\n\r\nexport default Validation;"],"sourceRoot":""}