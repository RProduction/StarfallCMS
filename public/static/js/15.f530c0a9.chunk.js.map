{"version":3,"sources":["components/DialogCustomForm.js","components/DialogCustom.js","../node_modules/@material-ui/icons/esm/Add.js","components/Entity.js"],"names":["DialogCustomForm","props","request","btn","category","_props$values","values","name","newName","confirmName","errors","touched","handleChange","isValid","setFieldTouched","change","e","persist","react_default","a","createElement","Grid","container","component","spacing","onSubmit","preventDefault","TextField","item","xs","id","label","onChange","bind","value","helperText","error","Boolean","Fragment","Button","type","disabled","size","addSchema","Yup","required","matches","message","excludeEmptyString","min","max","deleteSchema","oneOf","renameSchema","initialAdd","initialDelete","targetName","initialRename","DialogCustom","title","content","dialogProps","Dialog","DialogTitle","DialogContent","DialogContentText","formik_esm","validationSchema","initialValues","render","propsRender","components_DialogCustomForm","Object","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","d","columns","field","searchable","hidden","export","rowData","projectName","entityName","react__WEBPACK_IMPORTED_MODULE_3___default","react_router_dom__WEBPACK_IMPORTED_MODULE_15__","style","color","to","concat","Entity","dispatch","useDispatch","_props$match$params","match","params","project","entity","notification","useSelector","state","_useState","useState","_useState2","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","redirect","setRedirect","select","useMemo","selectDocumentsInEntityByName","documents","_useState3","_useState4","datas","setDatas","useEffect","map","index","#","createdAt","created","updatedAt","updated","react_router_dom__WEBPACK_IMPORTED_MODULE_16__","_DialogCustom__WEBPACK_IMPORTED_MODULE_20__","open","onClose","HideNotificationDialog","material_table__WEBPACK_IMPORTED_MODULE_5___default","data","actions","icon","_material_ui_icons__WEBPACK_IMPORTED_MODULE_6__","tooltip","isFreeAction","onClick","_material_ui_icons__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__","_onClick","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Project_VScode_Web_StarfallCMS_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","rowDatas","ids","wrap","_context","prev","next","Axios","delete","sent","ShowNotificationDialog","t0","stop","_x","_x2","apply","this","arguments","icons","Search","ResetSearch","Clear","FirstPage","PreviousPage","ArrowBack","NextPage","ArrowForward","LastPage","options","pageSize","pageSizeOptions","search","selection","actionsColumnIndex"],"mappings":"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","file":"static/js/15.f530c0a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {TextField, Button, Grid} from '@material-ui/core';\r\n\r\nfunction DialogCustomForm(props){\r\n    const {\r\n        request, \r\n        btn,\r\n        category,\r\n\t\tvalues: { name, newName, confirmName },\r\n\t\terrors,\r\n\t\ttouched,\r\n\t\thandleChange,\r\n\t\tisValid,\r\n\t\tsetFieldTouched\r\n    } = props;\r\n    \r\n    const change = (name, e) => {\r\n\t\te.persist();\r\n\t\thandleChange(e);\r\n\t\tsetFieldTouched(name, true, false);\r\n    };\r\n\r\n\treturn(\r\n        <Grid container component=\"form\" spacing={1}\r\n            onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                request({ \r\n                    name: name, \r\n                    newName: newName, \r\n                    confirmName: confirmName \r\n                });\r\n            }}\r\n        >\r\n            {category === 'add' \r\n                ? <Grid component={TextField} item xs={12}\r\n                    id=\"name\" name=\"name\" label=\"Name\"\r\n                    onChange={change.bind(null, \"name\")}\r\n                    value={name}\r\n                    helperText={touched.name ? errors.name : \"\"}\r\n                    error={touched.name && Boolean(errors.name)}\r\n                /> : category === 'delete'\r\n                ? <Grid component={TextField} item xs={12}\r\n                    id=\"confirmName\" name=\"confirmName\" label=\"Confirm Name\"\r\n                    onChange={change.bind(null, \"confirmName\")}\r\n                    value={confirmName}\r\n                    helperText={touched.confirmName ? errors.confirmName : \"\"}\r\n                    error={touched.confirmName && Boolean(errors.confirmName)}\r\n                /> : category === 'rename'\r\n                ? <React.Fragment>\r\n                    <Grid component={TextField} item xs={12}\r\n                        id=\"newName\" name=\"newName\" label=\"New Name\"\r\n                        onChange={change.bind(null, \"newName\")}\r\n                        value={newName}\r\n                        helperText={touched.newName ? errors.newName : \"\"}\r\n                        error={touched.newName && Boolean(errors.newName)}\r\n                    />\r\n                    <Grid component={TextField} item xs={12}\r\n                        id=\"confirmName\" name=\"confirmName\" label=\"Confirm Name\"\r\n                        onChange={change.bind(null, \"confirmName\")}\r\n                        value={confirmName}\r\n                        helperText={touched.confirmName ? errors.confirmName : \"\"}\r\n                        error={touched.confirmName && Boolean(errors.confirmName)}\r\n                    />\r\n                </React.Fragment> : null\r\n            }\r\n            <Grid item xs={12} component={Button} \r\n                type=\"submit\" disabled={!isValid}\r\n                size=\"large\"\r\n            >\r\n                {btn}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DialogCustomForm;","import React from 'react';\r\nimport {Dialog, DialogTitle, DialogContent, DialogContentText} from '@material-ui/core';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport DialogCustomForm from './DialogCustomForm';\r\n\r\nconst addSchema = Yup.object({\r\n\tname: Yup.string().required('enter name')\r\n\t.matches(/^[a-zA-Z0-9_]+$/, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n\t}).min(1, 'name too short').max(50, 'name too long')\r\n});\r\n\r\nconst deleteSchema = Yup.object({\r\n    name: Yup.string(),\r\n\tconfirmName: Yup.string().required('re-enter name')\r\n\t.matches(/^[a-z0-9_]*$/i, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n\t}).oneOf([Yup.ref('name')], \"Confirm Name does not match\")\r\n});\r\n\r\nconst renameSchema = Yup.object({\r\n    name: Yup.string(),\r\n\tconfirmName: Yup.string().required('re-enter name')\r\n\t.oneOf([Yup.ref('name')], \"Confirm Name does not match\"),\r\n    newName: Yup.string().required('enter new name')\r\n\t.matches(/^[a-zA-Z0-9_]+$/, {\r\n\t\tmessage: 'input letters, numbers, and underscore only',\r\n\t\texcludeEmptyString: true,\r\n    }).min(1, 'new name too short').max(50, 'new name too long')\r\n});\r\n\r\nconst initialAdd = {\r\n    name: ''\r\n};\r\n\r\nconst initialDelete = targetName => ({\r\n    name: targetName,\r\n    confirmName: ''\r\n});\r\n\r\nconst initialRename = targetName => ({\r\n    name: targetName,\r\n    confirmName: '',\r\n    newName: ''\r\n});\r\n\r\n// will accept parameter of request, title, content, btn, targetName, and dialogProps\r\nfunction DialogCustom(props){\r\n    const {title, content, targetName, category, dialogProps} = props;\r\n\r\n    return(\r\n        <Dialog {...dialogProps}>\r\n            <DialogTitle id='dialog-title'>\r\n                {title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {category === 'add' || category === 'delete' || category === 'rename' \r\n                    ? <React.Fragment>\r\n                        {category === 'delete' \r\n                            ?   <React.Fragment>\r\n                                    <DialogContentText>\r\n                                        {content}\r\n                                    </DialogContentText>\r\n                                    <DialogContentText>\r\n                                        Please type in the name of the target to confirm\r\n                                    </DialogContentText>\r\n                                </React.Fragment>\r\n                            : null\r\n                        }\r\n                        <Formik \r\n                            validationSchema={category === 'add'\r\n                                ? addSchema : category === 'rename'\r\n                                ? renameSchema : category === 'delete'\r\n                                ? deleteSchema : {}\r\n                            }\r\n                            initialValues={category === 'add'\r\n                                ? initialAdd : category === 'rename'\r\n                                ? initialRename(targetName) : category === 'delete'\r\n                                ? initialDelete(targetName) : {}\r\n                            }\r\n                            render={(propsRender)=><DialogCustomForm \r\n                                {...props}\r\n                                {...propsRender}\r\n                            />}\r\n                        />\r\n                    </React.Fragment> : category === 'notification'\r\n                    ? <DialogContentText>\r\n                        {content}\r\n                    </DialogContentText> : null\r\n                }\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nDialogCustom.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    content: PropTypes.string,\r\n    btn: PropTypes.string,\r\n    targetName: PropTypes.string,\r\n    category: PropTypes.oneOf(['add', 'delete', 'rename', 'notification']).isRequired,\r\n    request: PropTypes.func,\r\n    dialogProps: PropTypes.shape({\r\n        ...Dialog.propTypes\r\n    }).isRequired\r\n}\r\n\r\nexport default DialogCustom;","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, {useState, useEffect, useMemo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport {Search, Clear, ArrowForward, ArrowBack, FirstPage, LastPage, DeleteForever, Add, Create} from '@material-ui/icons';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {selectDocumentsInEntityByName} from '../redux/selectors/documentSelectors';\r\nimport Axios from '../Axios';\r\n\r\nimport {ShowNotificationDialog, HideNotificationDialog} from '../redux/actions/globalActions';\r\n\r\nimport DialogCustom from './DialogCustom';\r\n\r\nconst columns = [\r\n    {\r\n        title: \"#\", \r\n        field: \"#\", \r\n        searchable: false\r\n    },\r\n    {\r\n        field: \"projectName\", \r\n        searchable: false, \r\n        hidden: true, \r\n        export: false\r\n    },\r\n    {\r\n        field: \"entityName\", \r\n        searchable: false, \r\n        hidden: true, \r\n        export: false\r\n    },\r\n    {\r\n        title: \"ID\", \r\n        field: \"id\", \r\n        searchable: false, \r\n        render: (rowData)=>{\r\n            const {id, projectName, entityName} = rowData;\r\n            return(\r\n                <Link style={{color: 'black'}} to={`/${projectName}/${entityName}/${id}`}>\r\n                    {id}\r\n                </Link>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        title: \"Created At\", \r\n        field: \"createdAt\", \r\n        searchable: false,\r\n        type: 'datetime'\r\n    },\r\n    {   \r\n        title: \"Updated At\", \r\n        field: \"updatedAt\", \r\n        searchable: false,\r\n        type: 'datetime'\r\n    }\r\n]\r\n\r\n// fetch authStatus from redux store and setAuthorized(true) if creator, manager, user\r\n// Any actions in Entity will affect Document and need to be signin\r\nfunction Entity(props){\r\n    const dispatch = useDispatch();\r\n    const {project, entity} = props.match.params;\r\n\r\n    const notification = useSelector(state => state.notification);\r\n\r\n    const [redirect, setRedirect] = useState('');\r\n    const select = useMemo(selectDocumentsInEntityByName, []);\r\n    const documents = useSelector(state => select(state, entity));\r\n\r\n    const [datas, setDatas] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(documents.documents){\r\n            setDatas(documents.documents.map((value, index) => ({\r\n                \"#\": (index+1),\r\n                id: value.id,\r\n                projectName: project,\r\n                entityName: entity,\r\n                createdAt: value.created,\r\n                updatedAt: value.updated\r\n            })));\r\n        }\r\n    }, [documents]);\r\n\r\n    // view all documents within entity and their attribute\r\n    // document id\r\n    // document last modified\r\n    if(redirect === 'add') return <Redirect to={`/${project}/${entity}/add`}/>;\r\n    else if(redirect === 'schema') return <Redirect to={`/${project}/${entity}/schema`}/>;\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <DialogCustom\r\n                category=\"notification\"\r\n                title={notification.title}\r\n                content={notification.content}\r\n                dialogProps={{\r\n                    open: notification.title !== '' && notification.content !== '',\r\n                    onClose: () => dispatch(HideNotificationDialog())\r\n                }}\r\n            />\r\n            <MaterialTable \r\n                title=\"Documents\" \r\n                columns={columns} \r\n                data={datas}\r\n                actions={[\r\n                    {\r\n                        icon: ()=><Add/>,\r\n                        tooltip: \"Add Document\",\r\n                        isFreeAction: true,\r\n                        onClick: (e)=>setRedirect('add')\r\n                    },\r\n                    {\r\n                        icon: ()=><Create/>,\r\n                        tooltip: \"Edit Schema\",\r\n                        isFreeAction: true,\r\n                        onClick: (e)=>setRedirect('schema')\r\n                    },\r\n                    {\r\n                        icon: ()=><DeleteForever/>, \r\n                        tooltip: \"Delete Documents\",\r\n                        onClick: async(e, rowDatas)=>{\r\n                            // get selected row and delete batch\r\n                            const ids = rowDatas.map(value => value.id);\r\n                            try{\r\n                                const res = await Axios.delete('document', {\r\n                                    data: {ids: ids}\r\n                                });\r\n                                dispatch(ShowNotificationDialog(\r\n                                    'Delete Documents',\r\n                                    'Succeed deleting documents'\r\n                                ));\r\n                            }catch(err){\r\n                                dispatch(ShowNotificationDialog(\r\n                                    'Delete Documents',\r\n                                    `Failed deleting documents, ${err}`\r\n                                ));\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n                icons={{\r\n                    Search: Search,\r\n                    ResetSearch: Clear,\r\n                    FirstPage: FirstPage,\r\n                    PreviousPage: ArrowBack,\r\n                    NextPage: ArrowForward,\r\n                    LastPage: LastPage\r\n                }}\r\n                options={{\r\n                    pageSize: 100,\r\n                    pageSizeOptions: [100,500,1000],\r\n                    search: true,\r\n                    selection: true,\r\n                    actionsColumnIndex: -1\r\n                }}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Entity;"],"sourceRoot":""}